{"version":3,"sources":["pages/header/Google__G__Logo.svg","pages/header/mark-github.svg","../ //.md$","store/knapsack-problem/description.zh.cn.md","store/knapsack-problem/presentation.zh.cn.md","pages/withRoot.tsx","store/BasicState.ts","pages/header/MenuButton.tsx","pages/header/Title.tsx","user/userContext.ts","user/userUtils.ts","pages/header/Section.tsx","pages/header/index.tsx","store/edit-distance/constants.ts","store/edit-distance/actions.ts","store/edit-distance/contents.ts","algorithms/edit-distance/algorithm.ts","algorithms/edit-distance/index.ts","store/edit-distance/initialState.ts","store/knapsack-problem/constants.ts","store/knapsack-problem/actions.ts","store/knapsack-problem/contents.ts","algorithms/knapsack-problem/algorithm.ts","algorithms/knapsack-problem/index.ts","store/knapsack-problem/initialState.ts","store/rod-cutting-problem/constants.ts","store/rod-cutting-problem/actions.ts","store/rod-cutting-problem/contents.ts","algorithms/rod-cutting-problem/algorithm.ts","algorithms/rod-cutting-problem/index.ts","store/rod-cutting-problem/initialState.ts","store/wildcard-matching/constants.ts","store/wildcard-matching/actions.ts","store/wildcard-matching/contents.ts","algorithms/wildcard-matching/algorithm.ts","algorithms/wildcard-matching/index.ts","store/wildcard-matching/initialState.ts","store/regular-expression/constants.ts","store/regular-expression/actions.ts","store/regular-expression/contents.ts","algorithms/regular-expression/algorithm.ts","algorithms/regular-expression/index.ts","store/regular-expression/initialState.ts","store/coin-change-fewest-number/constants.ts","store/coin-change-fewest-number/actions.ts","store/coin-change-fewest-number/contents.ts","algorithms/coin-change-fewest-number/algorithm.ts","algorithms/coin-change-fewest-number/index.ts","store/coin-change-fewest-number/initialState.ts","store/coin-change-how-many-ways/constants.ts","store/coin-change-how-many-ways/actions.ts","store/coin-change-how-many-ways/contents.ts","algorithms/coin-change-how-many-ways/algorithm.ts","algorithms/coin-change-how-many-ways/index.ts","store/coin-change-how-many-ways/initialState.ts","store/is-subsequence/constants.ts","store/is-subsequence/actions.ts","store/is-subsequence/contents.ts","algorithms/is-subsequence/algorithm.ts","algorithms/is-subsequence/index.ts","store/is-subsequence/initialState.ts","store/longest-common-subsequence/constants.ts","store/longest-common-subsequence/actions.ts","store/longest-common-subsequence/contents.ts","algorithms/longest-common-subsequence/algorithm.ts","algorithms/longest-common-subsequence/index.ts","store/longest-common-subsequence/initialState.ts","store/longest-common-substring/constants.ts","store/longest-common-substring/actions.ts","store/longest-common-substring/contents.ts","algorithms/longest-common-substring/algorithm.ts","algorithms/longest-common-substring/index.ts","store/longest-common-substring/initialState.ts","store/subset-sum-problem/constants.ts","store/subset-sum-problem/actions.ts","store/subset-sum-problem/contents.ts","algorithms/subset-sum-problem/algorithm.ts","algorithms/subset-sum-problem/index.ts","store/subset-sum-problem/initialState.ts","store/minimum-number-of-jumps-to-reach-end/constants.ts","store/minimum-number-of-jumps-to-reach-end/actions.ts","store/minimum-number-of-jumps-to-reach-end/contents.ts","algorithms/minimum-number-of-jumps-to-reach-end/algorithm.ts","algorithms/minimum-number-of-jumps-to-reach-end/index.ts","store/minimum-number-of-jumps-to-reach-end/initialState.ts","store/longest-increasing-subsequence/constants.ts","store/longest-increasing-subsequence/actions.ts","store/longest-increasing-subsequence/contents.ts","algorithms/longest-increasing-subsequence/algorithm.ts","algorithms/longest-increasing-subsequence/index.ts","store/longest-increasing-subsequence/initialState.ts","store/minimum-path-sum/constants.ts","store/minimum-path-sum/actions.ts","store/minimum-path-sum/contents.ts","algorithms/minimum-path-sum/algorithm.ts","algorithms/minimum-path-sum/index.ts","store/minimum-path-sum/initialState.ts","store/word-break/constants.ts","store/word-break/actions.ts","store/word-break/contents.ts","algorithms/word-break/algorithm.ts","algorithms/word-break/index.ts","store/word-break/initialState.ts","store/maximum-subarray-problem/constants.ts","store/maximum-subarray-problem/actions.ts","store/maximum-subarray-problem/contents.ts","algorithms/maximum-subarray-problem/algorithm.ts","algorithms/maximum-subarray-problem/index.ts","store/maximum-subarray-problem/initialState.ts","store/egg-dropping-problem/constants.ts","store/egg-dropping-problem/actions.ts","store/egg-dropping-problem/contents.ts","algorithms/egg-dropping-problem/algorithm.ts","algorithms/egg-dropping-problem/index.ts","store/egg-dropping-problem/initialState.ts","store/longest-palindromic-substring/constants.ts","store/longest-palindromic-substring/actions.ts","store/longest-palindromic-substring/contents.ts","algorithms/longest-palindromic-substring/algorithm.ts","algorithms/longest-palindromic-substring/index.ts","store/longest-palindromic-substring/initialState.ts","store/longest-palindromic-subsequence/constants.ts","store/longest-palindromic-subsequence/actions.ts","store/longest-palindromic-subsequence/contents.ts","algorithms/longest-palindromic-subsequence/algorithm.ts","algorithms/longest-palindromic-subsequence/index.ts","store/longest-palindromic-subsequence/initialState.ts","store/palindrome-partitioning/constants.ts","store/palindrome-partitioning/actions.ts","store/palindrome-partitioning/contents.ts","algorithms/palindrome-partitioning/algorithm.ts","algorithms/palindrome-partitioning/index.ts","store/palindrome-partitioning/initialState.ts","store/house-robber/constants.ts","store/house-robber/actions.ts","store/house-robber/contents.ts","algorithms/Names.ts","algorithms/house-robber/algorithm.ts","algorithms/house-robber/index.ts","store/house-robber/initialState.ts","components/CodeBlock.tsx","records/recordsContext.ts","likes/likesContext.ts","pages/sidebar/index.tsx","records/recordsUtils.ts","components/MainHeader.tsx","components/Table.tsx","components/Buttons.tsx","thumbs/thumbs.ts","components/Dialog.tsx","components/Formula.tsx","likes/likesUtils.ts","components/Favorite.tsx","thumbs/thumbsUtils.ts","components/Thumbs.tsx","comments/commentsUtils.ts","components/Comments.tsx","comments/pagination.ts","components/MainFooter.tsx","components/Card.tsx","store/edit-distance/container.ts","algorithms/edit-distance/update.ts","store/edit-distance/reducer.ts","store/edit-distance/sagas.ts","store/knapsack-problem/container.ts","algorithms/knapsack-problem/update.ts","store/knapsack-problem/reducer.ts","store/knapsack-problem/sagas.ts","store/rod-cutting-problem/container.ts","algorithms/rod-cutting-problem/update.ts","store/rod-cutting-problem/reducer.ts","store/rod-cutting-problem/sagas.ts","store/wildcard-matching/container.ts","algorithms/wildcard-matching/update.ts","store/wildcard-matching/reducer.ts","store/wildcard-matching/sagas.ts","store/regular-expression/container.ts","algorithms/regular-expression/update.ts","store/regular-expression/reducer.ts","store/regular-expression/sagas.ts","store/is-subsequence/container.ts","algorithms/is-subsequence/update.ts","store/is-subsequence/reducer.ts","store/is-subsequence/sagas.ts","store/subset-sum-problem/container.ts","algorithms/subset-sum-problem/update.ts","store/subset-sum-problem/reducer.ts","store/subset-sum-problem/sagas.ts","store/minimum-path-sum/container.ts","algorithms/minimum-path-sum/update.ts","store/minimum-path-sum/reducer.ts","store/minimum-path-sum/sagas.ts","store/word-break/Card.tsx","store/word-break/container.ts","algorithms/word-break/update.ts","store/word-break/reducer.ts","store/word-break/sagas.ts","store/egg-dropping-problem/container.ts","algorithms/egg-dropping-problem/update.ts","store/egg-dropping-problem/reducer.ts","store/egg-dropping-problem/sagas.ts","store/house-robber/container.ts","algorithms/house-robber/update.ts","store/house-robber/reducer.ts","store/house-robber/sagas.ts","store/palindrome-partitioning/container.ts","algorithms/palindrome-partitioning/update.ts","store/palindrome-partitioning/reducer.ts","store/palindrome-partitioning/sagas.ts","store/maximum-subarray-problem/container.ts","algorithms/maximum-subarray-problem/update.ts","store/maximum-subarray-problem/reducer.ts","store/maximum-subarray-problem/sagas.ts","store/coin-change-fewest-number/container.ts","algorithms/coin-change-fewest-number/update.ts","store/coin-change-fewest-number/reducer.ts","store/coin-change-fewest-number/sagas.ts","store/coin-change-how-many-ways/container.ts","algorithms/coin-change-how-many-ways/update.ts","store/coin-change-how-many-ways/reducer.ts","store/coin-change-how-many-ways/sagas.ts","store/longest-common-subsequence/container.ts","algorithms/longest-common-subsequence/update.ts","store/longest-common-subsequence/reducer.ts","store/longest-common-subsequence/sagas.ts","store/longest-common-substring/container.ts","algorithms/longest-common-substring/update.ts","store/longest-common-substring/reducer.ts","store/longest-common-substring/sagas.ts","store/minimum-number-of-jumps-to-reach-end/container.ts","algorithms/minimum-number-of-jumps-to-reach-end/update.ts","store/minimum-number-of-jumps-to-reach-end/reducer.ts","store/minimum-number-of-jumps-to-reach-end/sagas.ts","store/longest-increasing-subsequence/container.ts","algorithms/longest-increasing-subsequence/update.ts","store/longest-increasing-subsequence/reducer.ts","store/longest-increasing-subsequence/sagas.ts","store/longest-palindromic-substring/container.ts","algorithms/longest-palindromic-substring/update.ts","store/longest-palindromic-substring/reducer.ts","store/longest-palindromic-substring/sagas.ts","store/longest-palindromic-subsequence/container.ts","algorithms/longest-palindromic-subsequence/update.ts","store/longest-palindromic-subsequence/reducer.ts","store/longest-palindromic-subsequence/sagas.ts","store/index.ts","pages/main/welcome.tsx","pages/main/index.tsx","pages/footer/index.tsx","pages/index.tsx","serviceWorker.js","index.tsx","store/configureStore.ts"],"names":["module","exports","__webpack_require__","p","map","./description.zh.cn.md","./presentation.zh.cn.md","webpackContext","req","id","webpackContextResolve","o","e","Error","code","keys","Object","resolve","r","__webpack_exports__","helperStyle","backgroundColor","helperColor","helperStyleSecondary","helperColorSecondary","helperStyleThird","helperColorThird","theme","createMuiTheme","typography","fontFamily","join","palette","primary","secondary","background","default","overrides","MuiAppBar","colorPrimary","color","MuiTable","root","width","borderRadius","display","MuiTableCell","textAlign","borderBottom","&:last-child","paddingRight","body","borderWidth","borderStyle","borderColor","fontSize","fontWeight","height","MuiTableRow","MuiDialog","paper","margin","MuiDialogContent","paddingLeft","withRoot","Difficulty","DialogScroll","Component","props","react","ThemeProvider","CssBaseline","styles","createStyles","hide","menuButton","marginLeft","marginRight","withStyles","classes","openDrawer","open","IconButton","className","classNames","aria-label","onClick","Menu_default","a","_title","title","defineProperty","breakpoints","up","Typography","variant","noWrap","react_router_dom","to","UserContext","createContext","userUrl","getUrlParams","search","window","location","URLSearchParams","getUrlParam","name","get","getAuthHeaders","accessToken","localStorage","setItem","getItem","getAccessToken","headers","Headers","set","concat","createAuthHeaders","createUser","obj","nickname","username","avatar","signOut","removeItem","delete","href","split","getMe","_ref","asyncToGenerator","regenerator_default","mark","_callee","authHeaders","requestInit","wrap","_context","prev","next","abrupt","method","fetch","then","response","json","sent","stop","apply","this","arguments","getUser","_ref2","_callee2","userId","_context2","_x","baseApiUrl","googleLoginUrl","githubLoginUrl","LoginDialog","Dialog","onClose","handleClose","DialogTitle","Divider","List","loginList","ListItem","button","component","ListItemAvatar","Avatar","src","GoogleLogo","small","GithubLogo","DialogActions","Close_default","LogoutPopover","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","ListItemText","user","handleSignOut","ListItemIcon","ExitToApp_default","UserIcon","userState","React","_React$useState","_React$useState2","slicedToArray","loginOpen","setLoginOpen","_React$useState3","_React$useState4","setAnchorEl","aria-haspopup","event","currentTarget","alt","undefined","Section_LogoutPopover","assign","Boolean","setUser","Section_LoginDialog","sectionDesktop","sectionMobile","spacing","large","minWidth","Section_UserIcon","basicStyles","grow","flexGrow","objectSpread","appBar","position","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","appBarShiftLeft","appBarStyles","_classNames","AppBar","elevation","Toolbar","header_MenuButton","header_Title","header_Section","OPEN_DIALOG_CLICK","CLOSE_DIALOG_CLICK","OPEN_FORMULA_CLICK","CLOSE_FORMULA_CLICK","BUTTON_CLICK","REFRESH_CLICK","GET_RECORD","RECEIVED_RECORD","refresh","type","constants","buttonClick","data","payload","closeDialog","openDialog","closeFormula","openFormula","createDPTable","stringOne","stringTwo","rows","length","cols","table","Array","fill","col","row","charAt","min","Math","startPoint","createTableMatrix","createComparedTable","dpTable","tableMatrix","addHelperStyles","point","createTableStyles","createButtons","Set","add","from","sort","createButtonsStyles","basicInfo","codeFormula","formulaOpen","formulaCroll","Paper","formula","handleCloseFormulaClick","dialog","dialogOpen","dialogCroll","description","example","alUsecases","handleCloseDialogClick","header","success","loading","steps","errors","startTime","finishTime","difficulty","Easy","handleRefreshClick","handleOpenDialogClick","handleOpenFormulaClick","random","max","floor","i","currentPoint","helper","comparedTable","tableStyles","buttons","buttonsStyles","handleButtonClick","require","items","totalWeight","item","weight","value","getTableSize","_getTableSize","_getTableSize2","_getTableSize3","b","totalPrice","price","array","j","shuffle","pattern","text","t","bases","arrayOne","push","coins","total","Infinity","coin","Number","totalCoins","pop","ch1","element","MAX_SAFE_INTEGER","initTable","last","indices","toConsumableArray","jumps","result","jumpIndex","jumpLength","jumpsStyles","toCompare","target","cloneTable","sentence","dictionary","len","start","end","sub","substring","includes","swap","temp","stringShuffle","str","arrayShuffle","currentMaxs","globalMaxs","starts","ends","lastStart","forEach","index","currentMax","globalMax","unshift","randomInt","eggs","floors","f","sequence","front","createComparedMarksTable","marksTable","truthTable","createMarksTable","nextLength","_getTableSize4","input","booleanTable","createPalindromeBooleanTable","k","Names","houses","house","Languares","RecordsContext","LikesContext","linkStyle","textDecoration","textTransform","listStyle","paddingTop","paddingBottom","buttonStyle","doneStyle","likeStyle","DoneComponent","done","Done_default","style","LikeComponent","enabled","Star_default","Challenges","records","likes","key","Edit_Distance","EditDistance","Knapsack_Problem","KnapsackProblem","RodCutting_Problem","RodCuttingProblem","Wildcard_Matching","WildcardMatching","Regular_Expression","RegularExpression","Coin_Change_Fewest_Number","CoinChangeFewestNumber","Coin_Change_How_Many_Ways","CoinChangeHowManyWays","Is_Subsequence","IsSubsequence","Longest_Common_Subsequence","LongestCommonSubsequence","Longest_Common_Substring","LongestCommonSubstring","Subset_Sum_Problem","SubsetSumProblem","Minimum_Jumps_To_End","MinimumOfJumpsToReachEnd","Longest_Increasing_Subsequence","LongestIncreasingSubsequence","Minimum_Path_Sum","MinimumPathSum","Word_Break","WordBreak","Maximum_Subarray_Problem","MaximumSubarrayProblem","EggDropping_Problem","EggDroppingProblem","Longest_Palindromic_Substring","LongestPalindromicSubstring","Longest_Palindromic_Subsequence","LongestPalindromicSubsequence","Palindrome_Partitioning","PalindromePartitioning","House_Robber","HouseRobber","getId","record","challengeId","doesLike","filter","like","Button","sidebar_DoneComponent","ch","getName","sidebar_LikeComponent","drawerPaper","drawerHeader","alignItems","justifyContent","padding","mixins","toolbar","closeDrawer","Drawer","anchor","tabIndex","role","onKeyDown","ChevronLeft_default","recordsUrl","save","postBody","JSON","stringify","getRecords","Title","_React$useContext","setRecords","inSucceedList","saveRecord","saveResult","newRecords","currentRecords","currentIds","newIds","updateLocalRecords","toUpperCase","Description","marginTop","MainHeader_Title","Tooltip","placement","CheckCircleOutlined_default","AssignmentOutlined_default","CodeRounded_default","RefreshOutlined_default","RecordsSecion","_ref3","Chip","border","icon","PollOutlined_default","label","ErrorOutline_default","fabProgress","green","zIndex","marginBottom","MainHeader_Description","MainHeader_RecordsSecion","createRow","rowStyles","TableRow","TableCell","createCell","Table","TableBody","cell","&:hover","cursor","light","minHeight","ButtonGroup","size","booleanToString","cellContent","ThumbType","react_highlight_default","language","handleDialogOnClose","scroll","DialogContent","CodeBlock","Markdown","content","actions","handleFormulaOnClose","Javascript","autoFocus","likesUrl","getLikes","update","_callee3","_context3","_x2","setLikes","handleUpdate","newLike","updateLike","toUpdate","clonedLikes","updateLocalLikes","Favorite_default","saveLike","saved","responseLikes","FavoriteBorderOutlined_default","thumbsUrl","getThumbs","sendThumb","thumb","_x3","getThumb","NONE","_x4","ThumbComponent","Thumbs_ThumbNoneComponent","UP","Thumbs_ThumbUpComponent","DOWN","Thumbs_ThumbDownComponent","ThumbNoneComponent","thumbs","handleThumbUp","handleThumbDown","ThumbUpOutlined_default","ups","ThumbDownOutlined_default","downs","ThumbUpComponent","handleRemoveThumb","ThumbUp_default","ThumbDownComponent","ThumbDown_default","_ref4","setThumbs","setThumb","updateLocalThumb","updateThumbs","results","Thumbs_ThumbComponent","commentsUrl","getComments","page","deleteComment","commentId","saveOrUpdateComment","comment","EmptyUser","Comment","meId","comments","setComments","createdTime","ownedComment","openEdit","Grid","container","commentRoot","xs","TextField","multiline","rowsMax","textField","inputNoneBorder","disabled","MoreVert_default","startIcon","Delete_default","CreateNewComment","userName","userAvatar","_React$useState5","_React$useState6","setContent","onChange","ev","parentId","Send_default","& .MuiInput-underline:before","& .MuiInputBase-input","_React$useState7","_React$useState8","_React$useState9","_React$useState10","moreComments","setMoreComments","_React$useState11","_React$useState12","setPage","getMoreComments","pagination","number","totalPages","isLastPage","current","Comments_CreateNewComment","Comments_Comment","justify","MoreHoriz_default","Content","sm","components_Favorite","components_Thumbs","components_Comments","MainFooter_Content","MainHeader","components_Table","CardContent","components_Buttons","MainFooter","components_Dialog","Formula","connect","editDistance","dispatch","Card","isMatch","c","getLastCell","state","Date","getTime","rowIndex","colIndex","updateTable","newTableStyles","nonCorrect","_getLastCell","isLastCell","lastCell","nextPoint","getNextPoint","reducer","action","Constants","count","getRecord","watchRecord","call","axios","put","_marked","take","fork","_marked2","knapsackProblem","itemWeight","currentWeight","sagas_marked","sagas_marked2","rodCuttingProblem","rod_cutting_problem_sagas_marked","rod_cutting_problem_sagas_marked2","wildcardMatching","wildcard_matching_sagas_marked","wildcard_matching_sagas_marked2","regularExpression","regular_expression_sagas_marked","regular_expression_sagas_marked2","isSubsequence","is_subsequence_sagas_marked","is_subsequence_sagas_marked2","subsetSumProblem","subset_sum_problem_sagas_marked","subset_sum_problem_sagas_marked2","minimumPathSum","_getLastPoint","getLastPoint","minimum_path_sum_sagas_marked","minimum_path_sum_sagas_marked2","helperTable","wordBreak","lastPoint","nextRow","nextLen","nextCol","createNextCol","word_break_sagas_marked","word_break_sagas_marked2","eggDroppingProblem","egg_dropping_problem_sagas_marked","egg_dropping_problem_sagas_marked2","houseRobber","house_robber_sagas_marked","house_robber_sagas_marked2","palindromePartitioning","isNextLen","getNext","palindrome_partitioning_sagas_marked","palindrome_partitioning_sagas_marked2","maximumSubarrayProblem","maximum_subarray_problem_sagas_marked","maximum_subarray_problem_sagas_marked2","coinChangeFewestNumber","coin_change_fewest_number_sagas_marked","coin_change_fewest_number_sagas_marked2","coinChangeHowManyWays","coin_change_how_many_ways_sagas_marked","coin_change_how_many_ways_sagas_marked2","longestCommonSubsequence","longest_common_subsequence_sagas_marked","longest_common_subsequence_sagas_marked2","longestCommonSubstring","successTableStyle","newSyles","getMax","successStyles","longest_common_substring_sagas_marked","longest_common_substring_sagas_marked2","minimumNumberOfJumpsToReachEnd","getValue","colLength","minimum_number_of_jumps_to_reach_end_sagas_marked","minimum_number_of_jumps_to_reach_end_sagas_marked2","longestIncreasingSubsequence","setSuccessStyle","longest_increasing_subsequence_sagas_marked","longest_increasing_subsequence_sagas_marked2","longestPalindromicSubstring","longest_palindromic_substring_sagas_marked","longest_palindromic_substring_sagas_marked2","longestPalindromicSubsequence","longest_palindromic_subsequence_sagas_marked","longest_palindromic_subsequence_sagas_marked2","rootSaga","rootReducer","history","combineReducers","router","connectRouter","EditDistanceReducer","KnapsackProblemReducer","RodCuttingProblemReducer","WildcardMatchingReducer","RegularExpressionReducer","CoinChangeFewestNumberReducer","CoinChangeHowManyWaysReducer","IsSubsequenceReducer","LongestCommonSubsequenceReducer","LongestCommonSubstringReducer","SubsetSumProblemReducer","MinimumNumberOfJumpsToReachEndReducer","LongestIncreasingSubsequenceReducer","MinimumPathSumReducer","WordBreakReducer","MaximumSubarrayProblemReducer","EggDroppingProblemReducer","LongestPalindromicSubstringReducer","LongestPalindromicSubsequenceReducer","PalindromePartitioningReducer","HouseRobberReducer","containers","MinimumNumberOfJumpsToReachEnd","all","EditDistanceWatchRecord","KnapsackProblemWatchRecord","RodCuttingProblemWatchRecord","WildcardMatchingWatchRecord","RegularExpressionWatchRecord","CoinChangeFewestNumberWatchRecord","CoinChangeHowManyWaysWatchRecord","IsSubsequenceWatchRecord","LongestCommonSubsequenceWatchRecord","LongestCommonSubstringWatchRecord","SubsetSumProblemWatchRecord","MinimumNumberOfJumpsToReachEndWatchRecord","LongestIncreasingSubsequenceWatchRecord","MinimumPathSumWatchRecord","WordBreakWatchRecord","MaximumSubarrayProblemWatchRecord","EggDroppingProblemWatchRecord","LongestPalindromicSubstringWatchRecord","LongestPalindromicSubsequenceWatchRecord","PalindromePartitioningWatchRecord","HouseRobberWatchRecord","store_marked","startButton","Algorithm","getRandomAlgorithm","match","params","Algorithms","react_router","path","exact","render","Welcome","footer","align","gutterBottom","Index","_this","setState","handleOpen","sidebar","main","hostname","initialReduxState","initialState","createBrowserHistory","store","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","routerMiddleware","run","configureStore","ReactDOM","objs","es","Provider","esm","pages","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mGCAxC,IAAAC,EAAA,CACAC,yBAAA,IACAC,0BAAA,KAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAN,EAAAO,GAEA,SAAAC,EAAAF,GACA,IAAAN,EAAAS,EAAAP,EAAAI,GAAA,CACA,IAAAI,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAEA,MADAI,EAAAE,KAAA,mBACAF,EAEA,OAAAR,EAAAI,GAEAD,EAAAQ,KAAA,WACA,OAAAC,OAAAD,KAAAX,IAEAG,EAAAU,QAAAP,EACAV,EAAAC,QAAAM,EACAA,EAAAE,GAAA,sCCvBAP,EAAAgB,EAAAC,GAAeA,EAAA,iyBCAfjB,EAAAgB,EAAAC,GAAeA,EAAA,o1JCUFC,EAAmC,CAAEC,gBAAiBC,IAAY,MAClEC,EAA4C,CAAEF,gBAAiBG,IAAqB,MACpFC,EAAwC,CAAEJ,gBAAiBK,IAAiB,MAGnFC,EAAQC,YAAe,CAC3BC,WAAY,CACVC,WAAY,CACV,WACA,gBACA,qBACA,SACA,iBACA,aACA,aACAC,KAAK,MAGTC,QAAS,CACPC,QAASA,IACTC,UAAWA,IACXC,WAAY,CAGVC,QAAS,UAGbC,UAAW,CACTC,UAAW,CACTC,aAAc,CACZC,MAAOP,IAAQ,KACfZ,gBAAiB,UAGrBoB,SAAU,CACRC,KAAM,CACJC,MAAO,IACPC,aAAc,GACdC,QAAS,iBAGbC,aAAc,CACZJ,KAAM,CACJC,MAAO,KACPI,UAAW,SACXC,aAAc,OACdC,eAAgB,CACdC,aAAc,IAGlBC,KAAM,CACJC,YAAa,EACbC,YAAa,QACbC,YAAa,OACbd,MAAO,QACPI,aAAc,EACdW,SAAU,GACVC,WAAY,IACZC,OAAQ,GACRd,MAAO,KAGXe,YAAa,CACXhB,KAAM,IAIRiB,UAAW,CACTC,MAAO,CACLC,OAAQ,IAGZC,iBAAkB,CAChBpB,KAAM,CACJqB,YAAa,EACbb,aAAc,OAsBPc,ICpGHC,EAMAC,ED8FGF,EAhBf,SAAqBG,GAanB,OAZA,SAAkBC,GAGhB,OACEC,EAAA,cAACC,EAAA,EAAD,CAAkB3C,MAAOA,GAEvB0C,EAAA,cAACE,EAAA,EAAD,MACAF,EAAA,cAACF,EAAcC,mGE5FjBI,EAASC,YAAa,CACxBC,KAAM,CACF7B,QAAS,QAEb8B,WAAY,CACRC,YAAa,GACbC,YAAa,MAuBNC,cAAWN,EAAXM,CAdI,SAACV,GAAiB,IACzBW,EAA8BX,EAA9BW,QAASC,EAAqBZ,EAArBY,WAAYC,EAASb,EAATa,KAC7B,OACIZ,EAAA,cAACa,EAAA,EAAD,CACIC,UAAWC,IAAWL,EAAQJ,WAAYM,GAAQF,EAAQL,MAC1DlC,MAAM,UACN6C,aAAW,cACXC,QAASN,GAETX,EAAA,cAACkB,EAAAC,EAAD,yBCGGV,cA3BA,SAACnD,GAAD,IAAA8D,EAAA,OAAkBhB,YAAa,CAC1CiB,OAAKD,EAAA,CACD5C,QAAS,QADR7B,OAAA2E,EAAA,EAAA3E,CAAAyE,EAEA9D,EAAMiE,YAAYC,GAAG,MAAQ,CAC1BhD,QAAS,UAHZ7B,OAAA2E,EAAA,EAAA3E,CAAAyE,EAAA,iBAKe,QALfzE,OAAA2E,EAAA,EAAA3E,CAAAyE,EAAA,QAMM,WANNzE,OAAA2E,EAAA,EAAA3E,CAAAyE,EAAA,aAOW,UAPXA,MA0BMX,CAXD,SAACV,GAAiB,IACpBW,EAAYX,EAAZW,QACR,OACIV,EAAA,cAACyB,EAAA,EAAD,CAAYX,UAAWJ,EAAQW,MAAOK,QAAQ,KAAKvD,MAAM,UAAUwD,QAAM,GACrE3B,EAAA,cAAC4B,EAAA,EAAD,CAAMC,GAAG,IAAIf,UAAWJ,EAAQW,OAAhC,sKCxBCS,GAAcC,wBAAkC,0ECDvDC,GAAU,4CAKVC,GAAe,WACjB,IAAMC,EAASC,OAAOC,SAASF,OAC/B,OAAO,IAAIG,gBAAgBH,IAGzBI,GAAc,SAACC,GACjB,OAAON,KAAeO,IAAID,IAwBjBE,GAAiB,WAC1B,IAAMC,EAhBa,WACnB,IAAMA,EAAcJ,GAlBH,gBAsBjB,OAHII,GACAC,aAAaC,QArBG,QAqBsBF,GAEnCC,aAAaE,QAvBA,SAkCAC,GACpB,OAAKJ,EATiB,SAACA,GACvB,IAAMK,EAAU,IAAIC,QAGpB,OAFAD,EAAQE,IAAI,eAAgB,oBAC5BF,EAAQE,IAAI,gBAAZ,UAAAC,OAAuCR,IAChCK,EAQAI,CAAkBT,GAFd,MAKTU,GAAa,SAACC,GAAD,MAAqB,CACpCjH,GAAIiH,EAAIjH,GACRmG,KAAOc,EAAIC,UAAYD,EAAIE,SAC3BC,OAAQH,EAAIG,SAGHC,GAAU,WAnCA,IAAClB,EAoCpBI,aAAae,WAhDO,SAahBpB,GADgBC,EAXH,iBAabN,KAAe0B,OAAOpB,GAoC1BJ,OAAOC,SAASwB,KAAOzB,OAAOC,SAASwB,KAAKC,MAAM,KAAK,IAG9CC,GAAK,eAAAC,EAAApH,OAAAqH,GAAA,EAAArH,CAAAsH,GAAA9C,EAAA+C,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACXL,EAAc3B,KADH,CAAA8B,EAAAE,KAAA,eAAAF,EAAAG,OAAA,SAGN,MAHM,cAMXL,EAA2B,CAC7BM,OAAQ,MACR5B,QAASqB,GARIG,EAAAE,KAAA,EAWJG,MAAK,GAAA1B,OAAIlB,GAAJ,OAAkBqC,GAC/BQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAI3B,GAAW2B,KAbZ,cAAAR,EAAAG,OAAA,SAAAH,EAAAS,MAAA,wBAAAT,EAAAU,SAAAd,MAAH,yBAAAJ,EAAAmB,MAAAC,KAAAC,YAAA,GAgBLC,GAAO,eAAAC,EAAA3I,OAAAqH,GAAA,EAAArH,CAAAsH,GAAA9C,EAAA+C,KAAG,SAAAqB,EAAOC,GAAP,IAAAnB,EAAA,OAAAJ,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cACbJ,EAA2B,CAAEM,OAAQ,OADxBc,EAAAhB,KAAA,EAENG,MAAK,GAAA1B,OAAIlB,GAAJ,KAAAkB,OAAesC,GAAUnB,GACtCQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAI3B,GAAW2B,KAJV,cAAAU,EAAAf,OAAA,SAAAe,EAAAT,MAAA,wBAAAS,EAAAR,SAAAM,MAAH,gBAAAG,GAAA,OAAAJ,EAAAJ,MAAAC,KAAAC,YAAA,GC7CdO,GAAU,WAAAzC,OADA,wBAEV0C,GAAc,GAAA1C,OAAMyC,GAAN,uBACdE,GAAc,GAAA3C,OAAMyC,GAAN,uBAmCdG,GAAc,SAAC/F,GAAD,OAChBC,EAAA,cAAC+F,EAAA,EAAD,CAAQC,QAASjG,EAAMkG,YAAarF,KAAMb,EAAMa,MAC5CZ,EAAA,cAACkG,EAAA,EAAD,cAGAlG,EAAA,cAACmG,GAAA,EAAD,MACAnG,EAAA,cAACoG,GAAA,EAAD,CAAMtF,UAAWf,EAAMW,QAAQ2F,WAC3BrG,EAAA,cAACsG,GAAA,EAAD,CAAUC,QAAM,EAACC,UAAU,IAAI5C,KAAMgC,IACjC5F,EAAA,cAACyG,GAAA,EAAD,KACIzG,EAAA,cAAC0G,GAAA,EAAD,CAAQhF,QAAQ,SAASiF,IAAKC,KAAY9F,UAAWf,EAAMW,QAAQmG,SAF3E,uBAMA7G,EAAA,cAACsG,GAAA,EAAD,CAAUC,QAAM,EAACC,UAAU,IAAI5C,KAAMiC,IACjC7F,EAAA,cAACyG,GAAA,EAAD,KACIzG,EAAA,cAAC0G,GAAA,EAAD,CAAQhF,QAAQ,SAASiF,IAAKG,KAAYhG,UAAWf,EAAMW,QAAQmG,SAF3E,wBAOJ7G,EAAA,cAAC+G,GAAA,EAAD,KACI/G,EAAA,cAACa,EAAA,EAAD,CAAYG,aAAW,qBAAqBC,QAASlB,EAAMkG,aACvDjG,EAAA,cAACgH,GAAA7F,EAAD,UAcV8F,GAAgB,SAAClH,GAAD,OAClBC,EAAA,cAACkH,GAAA,EAAD,CACItG,KAAMb,EAAMa,KACZuG,SAAUpH,EAAMoH,SAChBnB,QAASjG,EAAMkG,YACfmB,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,WAGhBtH,EAAA,cAACoG,GAAA,EAAD,KACIpG,EAAA,cAACsG,GAAA,EAAD,KACItG,EAAA,cAACwH,GAAA,EAAD,CAAc5J,QAASmC,EAAM0H,MAAS,OAAS1H,EAAM0H,KAAKlF,SAGlEvC,EAAA,cAACmG,GAAA,EAAD,MACAnG,EAAA,cAACoG,GAAA,EAAD,KACIpG,EAAA,cAACsG,GAAA,EAAD,CAAUC,QAAM,EAACtF,QAASlB,EAAM2H,eAC5B1H,EAAA,cAAC2H,GAAA,EAAD,KACI3H,EAAA,cAAC4H,GAAAzG,EAAD,OAEJnB,EAAA,cAACwH,GAAA,EAAD,CAAc5J,QAAQ,iBAMhCiK,GAAW,SAAC9H,GAAiB,IACvBW,EAAYX,EAAZW,QACFoH,EAAYC,aAAiBjG,IAFJkG,EAIGD,YAAe,GAJlBE,EAAAtL,OAAAuL,EAAA,EAAAvL,CAAAqL,EAAA,GAIxBG,EAJwBF,EAAA,GAIbG,EAJaH,EAAA,GAAAI,EAcCN,WAAyC,MAd1CO,EAAA3L,OAAAuL,EAAA,EAAAvL,CAAA0L,EAAA,GAcxBlB,EAdwBmB,EAAA,GAcdC,EAdcD,EAAA,GA+B/B,OAAIR,EAAUL,KAENzH,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,cAACa,EAAA,EAAD,CAAY2H,gBAAc,OAAOvH,QAlBpB,SAACwH,GACtBF,EAAYE,EAAMC,iBAkBN1I,EAAA,cAAC0G,GAAA,EAAD,CACI5F,UAAWJ,EAAQmG,MACnB8B,IAAKb,EAAUL,KAAKlF,KACpBoE,IAAKmB,EAAUL,KAAKjE,aAAUoF,KAGtC5I,EAAA,cAAC6I,GAADlM,OAAAmM,OAAA,GACQ/I,EADR,CAEIa,KAAMmI,QAAQ5B,GACdA,SAAUA,EACVlB,YAzBU,WACtBsC,EAAY,OAyBAd,KAAMK,EAAUL,KAChBC,cAvBM,WACdI,EAAUkB,SACVlB,EAAUkB,QAAQ,MAEtBvF,UAyBIzD,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,cAACa,EAAA,EAAD,CAAY2H,gBAAc,OAAOvH,QAhDrB,WACpBmH,GAAa,KAgDDpI,EAAA,cAAC0G,GAAA,EAAD,CAAQ5F,UAAWJ,EAAQmG,SAE/B7G,EAAA,cAACiJ,GAADtM,OAAAmM,OAAA,GAAiB/I,EAAjB,CAAwBa,KAAMuH,EAAWlC,YA/C5B,WACrBmC,GAAa,SAiFN3H,eAhMA,SAACnD,GAAD,OAAkB8C,YAAa,CAC1C8I,eAAevM,OAAA2E,EAAA,EAAA3E,CAAA,CACX6B,QAAS,QACRlB,EAAMiE,YAAYC,GAAG,MAAQ,CAC1BhD,QAAS,SAGjB2K,cAAcxM,OAAA2E,EAAA,EAAA3E,CAAA,CACV6B,QAAS,QACRlB,EAAMiE,YAAYC,GAAG,MAAQ,CAC1BhD,QAAS,SAGjBqI,MAAO,CACHvI,MAAOhB,EAAM8L,QAAQ,GACrBhK,OAAQ9B,EAAM8L,QAAQ,IAE1BC,MAAO,CACH/K,MAAOhB,EAAM8L,QAAQ,GACrBhK,OAAQ9B,EAAM8L,QAAQ,IAE1B/C,UAAW,CACPiD,SAAU,QA0KH7I,CA7BC,SAACV,GAAiB,IACtBW,EAAYX,EAAZW,QACR,OACIV,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,qBAAKc,UAAWJ,EAAQwI,gBAapBlJ,EAAA,cAACuJ,GAAaxJ,IAElBC,EAAA,qBAAKc,UAAWJ,EAAQyI,eAIpBnJ,EAAA,cAACuJ,GAAaxJ,OC5MxByJ,GAAcpJ,YAAa,CAC7B/B,KAAM,CACFC,MAAO,QAEXmL,KAAM,CACFC,SAAU,KAyDHjJ,eAhCA,SAACnD,GAAD,OAAkB8C,YAAazD,OAAAgN,EAAA,EAAAhN,CAAA,GACvC6M,GAtBc,SAAClM,GAAD,OAAkB8C,YAAa,CAChDwJ,OAAQ,CACJC,SAAU,WACVC,WAAYxM,EAAMyM,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQ3M,EAAMyM,YAAYE,OAAOC,MACjCC,SAAU7M,EAAMyM,YAAYI,SAASC,iBAI7CC,YAAa,CACT/L,MAAK,eAAA4E,OPxBsB,IOwBtB,OACL4G,WAAYxM,EAAMyM,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQ3M,EAAMyM,YAAYE,OAAOK,QACjCH,SAAU7M,EAAMyM,YAAYI,SAASI,kBAG7CC,gBAAiB,CACbjK,WP/B2B,OOqC5BkK,CAAanN,MA8BLmD,CAtBA,SAACV,GAAiB,IAAA2K,EACrBhK,EAA8BX,EAA9BW,QAASE,EAAqBb,EAArBa,KAAMD,EAAeZ,EAAfY,WACvB,OACIX,EAAA,qBAAKc,UAAWJ,EAAQrC,MACpB2B,EAAA,cAAC2K,EAAA,EAAD,CACI7J,UAAWC,IAAWL,EAAQkJ,QAATc,EAAA,GAAA/N,OAAA2E,EAAA,EAAA3E,CAAA+N,EAChBhK,EAAQ2J,YAAczJ,GADNjE,OAAA2E,EAAA,EAAA3E,CAAA+N,EAEhBhK,EAAQ8J,gBAAkB5J,GAFV8J,IAIrBE,UAAW,GAEX5K,EAAA,cAAC6K,EAAA,EAAD,KACI7K,EAAA,cAAC8K,EAAD,CAAYlK,KAAMA,EAAMD,WAAYA,IACpCX,EAAA,cAAC+K,EAAD,MAEA/K,EAAA,qBAAKc,UAAWJ,EAAQ+I,OACxBzJ,EAAA,cAACgL,GAAD,wGN/DRpL,sEAMAC,6CObL,IAAMoL,GAAoB,oCAGpBC,GAAqB,qCAGrBC,GAAqB,qCAGrBC,GAAsB,sCAGtBC,GAAe,+BAGfC,GAAgB,gCAGhBC,GAAa,oCAGbC,GAAkB,yCCkBxB,SAASC,KACZ,MAAO,CAAEC,KAAMC,IAGZ,SAASC,GAAYC,GACxB,MAAO,CAAEH,KAAMC,GAAwBG,QAASD,GAW7C,SAASE,KACZ,MAAO,CAAEL,KAAMC,IAGZ,SAASK,KACZ,MAAO,CAAEN,KAAMC,IAGZ,SAASM,KACZ,MAAO,CAAEP,KAAMC,IAGZ,SAASO,KACZ,MAAO,CAAER,KAAMC,ICpEZ,ICgCQQ,GAhCO,SAACC,EAAmBC,GAMtC,IALA,IAAMC,EAAOD,EAAUE,OAAS,EAC1BC,EAAOJ,EAAUG,OAAS,EAE1BE,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,KAE5DC,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BH,EAAM,GAAGG,GAAOA,EAGpB,IAAK,IAAIC,EAAM,EAAGA,EAAMP,EAAMO,IAC1BJ,EAAMI,GAAK,GAAKA,EAGpB,IAAK,IAAIA,EAAM,EAAGA,EAAMP,EAAMO,IAC1B,IAAK,IAAID,EAAM,EAAGA,EAAMJ,EAAMI,IAC1B,GAAIR,EAAUU,OAAOF,EAAM,KAAOP,EAAUS,OAAOD,EAAM,GACrDJ,EAAMI,GAAKD,GAAOH,EAAMI,EAAM,GAAGD,EAAM,OACpC,CACH,IAAMG,EAAMC,KAAKD,IACbN,EAAMI,EAAM,GAAGD,EAAM,GACrBH,EAAMI,EAAM,GAAGD,GACfH,EAAMI,GAAKD,EAAM,IAErBH,EAAMI,GAAKD,GAAOG,EAAM,EAKpC,OAAON,GCzBLQ,GAAoB,CACtBJ,IAAK,EACLD,IAAK,GAGHM,GAAoB,SAACd,EAAmBC,GAM1C,IALA,IAAMC,EAAOD,EAAUE,OAAS,EAC1BC,EAAOJ,EAAUG,OAAS,EAE1BE,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,IAAI5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAE7DC,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BH,EAAM,GAAGG,GAAOR,EAAUU,OAAOF,EAAM,GACvCH,EAAM,GAAGG,GAAOA,EAAM,EAG1B,IAAK,IAAIC,EAAM,EAAGA,EAAMP,EAAMO,IAC1BJ,EAAMI,GAAK,GAAKR,EAAUS,OAAOD,EAAM,GACvCJ,EAAMI,GAAK,GAAKA,EAAM,EAK1B,OAFAJ,EAAM,GAAG,GAAK,EACdA,EAAM,GAAG,GAAK,IACPA,GAGLU,GAAsB,SAACf,EAAmBC,GAO5C,IANA,IAAMC,EAAOD,EAAUE,OAAS,EAC1BC,EAAOJ,EAAUG,OAAS,EAE1Ba,EAAUjB,GAAcC,EAAWC,GACnCgB,EAAcH,GAAkBd,EAAWC,GAExCQ,EAAM,EAAGA,EAAMP,EAAMO,IAC1B,IAAK,IAAID,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BS,EAAYR,GAAKD,GAAOQ,EAAQP,EAAM,GAAGD,EAAM,GAGvD,OAAOS,GAGLC,GAAkB,SAACnN,EAAiCoN,GACtD,IAAK,IAAIX,EAAM,EAAGA,EAAMzM,EAAO,GAAGoM,QAAUK,GAAOW,EAAMX,IAAKA,IAC1DzM,EAAO,GAAGyM,GAAO7P,EAGrB,IAAK,IAAI8P,EAAM,EAAGA,EAAM1M,EAAOoM,QAAUM,GAAOU,EAAMV,IAAKA,IACvD1M,EAAO0M,GAAK,GAAK9P,GAInByQ,GAAoB,SAACpB,EAAmBC,GAC1C,IAAMC,EAAOD,EAAUE,OAAS,EAC1BC,EAAOJ,EAAUG,OAAS,EAC1BE,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAErE,OADAW,GAAgBb,EAAOQ,IAChBR,GAGLgB,GAAgB,SAACrB,EAAmBC,GAGtC,IAFA,IAAMe,EAAUjB,GAAcC,EAAWC,GACnCpJ,EAAM,IAAIyK,IACPb,EAAM,EAAGA,EAAMO,EAAQb,OAAQM,IACpC,IAAK,IAAID,EAAM,EAAGA,EAAMQ,EAAQP,GAAKN,OAAQK,IACzC3J,EAAI0K,IAAIP,EAAQP,GAAKD,IAG7B,OAAOF,MAAMkB,KAAK3K,GAAK4K,QAGrBC,GAAsB,SAAC1B,EAAmBC,GAC5C,OAAOoB,GAAcrB,EAAWC,GAAWtQ,IAAI,iBAAO,CAAEoC,MAAO,WCtEtD4P,GAAuB,CAChC3R,GAAI,EACJiF,MAAO,iBAGL2M,GAAoBrR,OAAAgN,EAAA,EAAAhN,CAAA,GACnBoR,GADmB,CAEtBE,aAAa,EACbC,aAAcrO,EAAasO,MAC3BC,QHdgB,kOGehBC,wBAAyBpC,KAGvBqC,GAAc3R,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBQ,YAAY,EACZC,YAAa3O,EAAasO,MAC1BM,YHXoB,gSGYpBC,QHMgB,2UGLhBC,WHNmB,4ZGOnBC,uBAAwB7C,KAGtB8C,GAAclS,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBe,SAAS,EACTC,SAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,WAAYxP,EAAWyP,KACvBC,mBAAoB7D,GACpB8D,sBAAuBvD,GACvBwD,uBAAwBtD,KAItBuD,GAAS,SAACC,GAAD,OAAiB1C,KAAK2C,MAAM3C,KAAKyC,SAAWC,IAE9C1F,GAAS,WAClB,IAAMoC,EAAoBM,MAAM,GAAGC,KAJzB,OAIoCJ,QAAQxQ,IAAI0T,IAAQ1T,IAAI,SAAA6T,GAAC,MAJ7D,OAIuEA,KAAIlS,KAAK,IACpF2O,EAAoBK,MAAM,GAAGC,KALzB,OAKoCJ,QAAQxQ,IAAI0T,IAAQ1T,IAAI,SAAA6T,GAAC,MAL7D,OAKuEA,KAAIlS,KAAK,IAC1F,OAAOf,OAAAgN,EAAA,EAAAhN,CAAA,GACAkS,GACAP,GACAN,GAHP,CAII6B,aAAcC,GACdC,cAAeD,GAA2B1D,EAAWC,GACrDI,MAAOqD,GAAyB1D,EAAWC,GAC3C2D,YAAaF,GAAyB1D,EAAWC,GACjD4D,QAASH,GAAqB1D,EAAWC,GACzC6D,cAAeJ,GAA2B1D,EAAWC,GACrD8D,kBAAmBvE,MC1DdX,ID8DejB,KC9DK,wCAGpBkB,GAAqB,wCAGrBC,GAAqB,wCAGrBC,GAAsB,yCAGtBC,GAAe,kCAGfC,GAAgB,mCAGhBC,GAAa,uCAGbC,GAAkB,4CCkBxB,SAASC,KACZ,MAAO,CAAEC,KAAMC,IAGZ,SAASC,GAAYC,GACxB,MAAO,CAAEH,KAAMC,GAAwBG,QAASD,GAW7C,SAASE,KACZ,MAAO,CAAEL,KAAMC,IAGZ,SAASK,KACZ,MAAO,CAAEN,KAAMC,IAGZ,SAASM,KACZ,MAAO,CAAEP,KAAMC,IAGZ,SAASO,KACZ,MAAO,CAAER,KAAMC,ICpEZ,IA+BM8C,GAAc2B,OAAoD,0BAA0BrS,QCN1FoO,GAvBO,SAACkE,EAAuBC,GAM1C,IALA,IAAMhE,EAAO+D,EAAM9D,OAAS,EACtBC,EAAO8D,EAAc,EAErB7D,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,KAE5DE,EAAM,EAAGA,EAAMP,EAAMO,IAE1B,IADA,IAAM0D,EAAOF,EAAMxD,EAAM,GAChBD,EAAM,EAAGA,EAAMJ,EAAMI,IACtB2D,EAAKC,OAAS5D,EACdH,EAAMI,GAAKD,GAAOH,EAAMI,EAAM,GAAGD,GAEjCH,EAAMI,GAAKD,GAAOI,KAAK0C,IACnBjD,EAAMI,EAAM,GAAGD,GACfH,EAAMI,EAAM,GAAGD,EAAM2D,EAAKC,QAAUD,EAAKE,OAMzD,OAAOhE,GCjBLQ,GAAoB,CAAEJ,IAAK,EAAGD,IAAK,GAOnC8D,GAAe,SAACL,EAAuBC,GAGzC,MAAO,CAAEhE,KAFI+D,EAAM9D,OAAS,EAEbC,KADF8D,EAAc,IAIzBpD,GAAoB,SAACmD,EAAuBC,GAA+C,IAAAK,EACtED,GAAaL,EAAOC,GAAnChE,EADqFqE,EACrFrE,KAAME,EAD+EmE,EAC/EnE,KAERC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,IAAI5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MACtEF,EAAM,GAAG,GAAK,IACdA,EAAM,GAAG,GAAK,IACd,IAAK,IAAIG,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BH,EAAM,GAAGG,GAAOA,EAAM,EAG1B,IAAK,IAAIA,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BH,EAAM,GAAGG,GAAO,EAGpB,IAAK,IAAIC,EAAM,EAAGA,EAAMP,EAAMO,IAAO,CACjC,IAAM0D,EAAOF,EAAMxD,EAAM,GACzBJ,EAAMI,GAAK,GAAK0D,EAAKE,MACrBhE,EAAMI,GAAK,GAAK0D,EAAKC,OACrB/D,EAAMI,GAAK,GAAK,EAIpB,OADAJ,EAAMQ,GAAWJ,KAAKI,GAAWL,KAAO,IACjCH,GAGLU,GAAsB,SAACkD,EAAuBC,GAMhD,IAN+F,IAAAM,EACxEF,GAAaL,EAAOC,GAAnChE,EADuFsE,EACvFtE,KAAME,EADiFoE,EACjFpE,KAERY,EAAUjB,GAAckE,EAAOC,GAC/BjD,EAAcH,GAAkBmD,EAAOC,GAEpCzD,EAAM,EAAGA,EAAMP,EAAMO,IAC1B,IAAK,IAAID,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BS,EAAYR,GAAKD,GAAOQ,EAAQP,EAAM,GAAGD,EAAM,GAGvD,OAAOS,GAULG,GAAoB,SAAC6C,EAAuBC,GAAmD,IAP5EnQ,EAO4E0Q,EAC1EH,GAAaL,EAAOC,GAAnChE,EADyFuE,EACzFvE,KAAME,EADmFqE,EACnFrE,KACRC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAKrE,OAdqBxM,EAULsM,GATT,GAAG,GAAKvP,EACfiD,EAAO,GAAG,GAAK/C,EACf+C,EAAO,GAAG,GAAKpD,EACfoD,EAAO,GAAG,GAAK/C,EAOS,IAApBiT,EAAM,GAAGG,SACT/D,EAAM,GAAG,GAAK1P,GAEX0P,GAGLgB,GAAgB,SAAC4C,EAAuBC,GAG1C,IAFA,IAAMlD,EAAUjB,GAAckE,EAAOC,GAC/BrN,EAAM,IAAIyK,IACPb,EAAM,EAAGA,EAAMO,EAAQb,OAAQM,IACpC,IAAK,IAAID,EAAM,EAAGA,EAAMQ,EAAQP,GAAKN,OAAQK,IACzC3J,EAAI0K,IAAIP,EAAQP,GAAKD,IAG7B,OAAOF,MAAMkB,KAAK3K,GAAK4K,KAAK,SAAU1M,EAAW2P,GAAa,OAAO3P,EAAI2P,KAGvEhD,GAAsB,SAACuC,EAAuBC,GAChD,OAAO7C,GAAc4C,EAAOC,GAAavU,IAAI,iBAAO,CAAEoC,MAAO,WChFpD4P,GAAuB,CAChC3R,GAAI,EACJiF,MAAO,wBAGL2M,GAAoBrR,OAAAgN,EAAA,EAAAhN,CAAA,GACnBoR,GADmB,CAEtBE,aAAa,EACbC,aAAcrO,EAAasO,MAC3BC,QHfgB,qpBGgBhBC,wBAAyBpC,KAGvBqC,GAAc3R,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBQ,YAAY,EACZC,YAAa3O,EAAasO,MAC1BM,YAAaA,GACbC,QHgBmB,GGfnBC,WHcsB,GGbtBC,uBAAwB7C,KAGtB8C,GAAclS,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBe,SAAS,EACTC,SAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,WAAYxP,EAAWyP,KACvBC,mBAAoB7D,GACpB8D,sBAAuBvD,GACvBwD,uBAAwBtD,KAGtBuD,GAAS,SAACC,GAAD,OAAiB1C,KAAK2C,MAAM3C,KAAKyC,SAAWC,GAAO,GAGrD1F,GAAS,WAClB,IAAMqG,EAAwB3D,MAAM,GAAGC,KAAK,GAAG5Q,IAAI,iBAAO,CAAEyU,OAAQf,GAAO,GAAIgB,MAAOhB,GAAO,OAC7F,OAAO9S,OAAAgN,EAAA,EAAAhN,CAAA,GACAkS,GACAP,GACAN,GAHP,CAII6B,aAAcC,GACdC,cAAeD,GAA2BO,EAT9B,GAUZ5D,MAAOqD,GAAyBO,EAVpB,GAWZL,YAAaF,GAAyBO,EAX1B,GAYZJ,QAASH,GAAqBO,EAZlB,GAaZH,cAAeJ,GAA2BO,EAb9B,GAcZF,kBAAmBvE,MC1DdX,ID8DejB,KC9DK,2CAGpBkB,GAAqB,2CAGrBC,GAAqB,2CAGrBC,GAAsB,4CAGtBC,GAAe,qCAGfC,GAAgB,sCAGhBC,GAAa,0CAGbC,GAAkB,+CCkBxB,SAASC,KACZ,MAAO,CAAEC,KAAMC,IAGZ,SAASC,GAAYC,GACxB,MAAO,CAAEH,KAAMC,GAAwBG,QAASD,GAW7C,SAASE,KACZ,MAAO,CAAEL,KAAMC,IAGZ,SAASK,KACZ,MAAO,CAAEN,KAAMC,IAGZ,SAASM,KACZ,MAAO,CAAEP,KAAMC,IAGZ,SAASO,KACZ,MAAO,CAAER,KAAMC,ICpEZ,ICmCQQ,GAtBO,SAACkE,EAAyBU,GAK5C,IAL+E,IAAAJ,EAN9D,SAACN,EAAyBU,GAG3C,MAAO,CAAEzE,KAFI+D,EAAM9D,OAAS,EAEbC,KADFuE,EAAa,GAKHL,CAAaL,EAAOU,GAAnCzE,EADuEqE,EACvErE,KAAME,EADiEmE,EACjEnE,KAERC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,KAE5DE,EAAM,EAAGA,EAAMP,EAAMO,IAE1B,IADA,IAAM0D,EAAOF,EAAMxD,EAAM,GAChBD,EAAM,EAAGA,EAAMJ,EAAMI,IACtB2D,EAAKhE,OAASK,EACdH,EAAMI,GAAKD,GAAOH,EAAMI,EAAM,GAAGD,GAEjCH,EAAMI,GAAKD,GAAOI,KAAK0C,IACnBjD,EAAMI,EAAM,GAAGD,GACfH,EAAMI,GAAKD,EAAM2D,EAAKhE,QAAUgE,EAAKS,OAMrD,OAAOvE,GC3BLQ,GAAoB,CACtBJ,IAAK,EACLD,IAAK,GAQH8D,GAAe,SAACL,EAAyBU,GAG3C,MAAO,CAAEzE,KAFI+D,EAAM9D,OAAS,EAEbC,KADFuE,EAAa,IAIxB7D,GAAoB,SAACmD,EAAyBU,GAA8C,IAAAJ,EACvED,GAAaL,EAAOU,GAAnCzE,EADsFqE,EACtFrE,KAAME,EADgFmE,EAChFnE,KAERC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,IAAI5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MACtEF,EAAM,GAAG,GAAK,IACdA,EAAM,GAAG,GAAK,IACd,IAAK,IAAIG,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BH,EAAM,GAAGG,GAAOA,EAAM,EAG1B,IAAK,IAAIA,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BH,EAAM,GAAGG,GAAO,EAGpB,IAAK,IAAIC,EAAM,EAAGA,EAAMP,EAAMO,IAAO,CACjC,IAAM0D,EAAOF,EAAMxD,EAAM,GACzBJ,EAAMI,GAAK,GAAK0D,EAAKS,MACrBvE,EAAMI,GAAK,GAAK0D,EAAKhE,OACrBE,EAAMI,GAAK,GAAK,EAIpB,OADAJ,EAAMQ,GAAWJ,KAAKI,GAAWL,KAAO,IACjCH,GAGLU,GAAsB,SAACkD,EAAyBU,GAMlD,IANgG,IAAAH,EACzEF,GAAaL,EAAOU,GAAnCzE,EADwFsE,EACxFtE,KAAME,EADkFoE,EAClFpE,KAERY,EAAUjB,GAAckE,EAAOU,GAC/B1D,EAAcH,GAAkBmD,EAAOU,GAEpClE,EAAM,EAAGA,EAAMP,EAAMO,IAC1B,IAAK,IAAID,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BS,EAAYR,GAAKD,GAAOQ,EAAQP,EAAM,GAAGD,EAAM,GAGvD,OAAOS,GAULG,GAAoB,SAAC6C,EAAyBU,GAAkD,IAP7E5Q,EAO6E0Q,EAC3EH,GAAaL,EAAOU,GAAnCzE,EAD0FuE,EAC1FvE,KAAME,EADoFqE,EACpFrE,KACRC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAErE,OAXqBxM,EAULsM,GATT,GAAG,GAAKvP,EACfiD,EAAO,GAAG,GAAK/C,EACf+C,EAAO,GAAG,GAAKpD,EACfoD,EAAO,GAAG,GAAK/C,EAORqP,GAGLgB,GAAgB,SAAC4C,EAAyBU,GAG5C,IAFA,IAAM3D,EAAUjB,GAAckE,EAAOU,GAC/B9N,EAAM,IAAIyK,IACPb,EAAM,EAAGA,EAAMO,EAAQb,OAAQM,IACpC,IAAK,IAAID,EAAM,EAAGA,EAAMQ,EAAQP,GAAKN,OAAQK,IACzC3J,EAAI0K,IAAIP,EAAQP,GAAKD,IAG7B,OAAOF,MAAMkB,KAAK3K,GAAK4K,KAAK,SAAU1M,EAAW2P,GAAa,OAAO3P,EAAI2P,KC5EhE/C,GAAuB,CAChC3R,GAAI,GACJiF,MAAO,uBAGL2M,GAAoBrR,OAAAgN,EAAA,EAAAhN,CAAA,GACnBoR,GADmB,CAEtBE,aAAa,EACbC,aAAcrO,EAAasO,MAC3BC,QHfgB,gNGgBhBC,wBAAyBpC,KAGvBqC,GAAc3R,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBQ,YAAY,EACZC,YAAa3O,EAAasO,MAC1BM,YHdoB,uSGepBC,QHNgB,klBGOhBC,WHRsB,GGStBC,uBAAwB7C,KAGtB8C,GAAclS,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBe,SAAS,EACTC,SAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,WAAYxP,EAAWyP,KACvBC,mBAAoB7D,GACpB8D,sBAAuBvD,GACvBwD,uBAAwBtD,KAYtBmE,GAA0B,CAC5B,CAAE9D,OAAQ,EAAGyE,MAAO,GACpB,CAAEzE,OAAQ,EAAGyE,MAAO,GACpB,CAAEzE,OAAQ,EAAGyE,MAAO,GACpB,CAAEzE,OAAQ,EAAGyE,MAAO,IAGXhH,GAAS,WAElB,OAlBY,SAACiH,GACb,IAAK,IAAIrB,EAAIqB,EAAM1E,OAAS,EAAGqD,EAAI,EAAGA,GAAK,EAAG,CAC1C,IAAMsB,EAAIlE,KAAK2C,MAAM3C,KAAKyC,UAAYG,EAAI,IADA7L,EAEnB,CAACkN,EAAMC,GAAID,EAAMrB,IAAvCqB,EAAMrB,GAFmC7L,EAAA,GAE/BkN,EAAMC,GAFyBnN,EAAA,IAgB9CoN,CAAQd,IACD1T,OAAAgN,EAAA,EAAAhN,CAAA,GACAkS,GACAP,GACAN,GAHP,CAII6B,aAAcC,GACdC,cAAeD,GAA2BO,GAf9B,GAgBZ5D,MAAOqD,GAAyBO,GAhBpB,GAiBZL,YAAaF,GAAyBO,GAjB1B,GAkBZJ,QAASH,GAAqBO,GAlBlB,GAmBZH,eDeqBG,ECfqBA,GDeIU,EClClC,EDmCTtD,GAAc4C,EAAOU,GAAYhV,IAAI,iBAAO,CAAEoC,MAAO,WCfxDgS,kBAAmBvE,KDcC,IAACyE,EAAyBU,GErFzC9F,ID2EejB,KC3EK,yCAGpBkB,GAAqB,yCAGrBC,GAAqB,yCAGrBC,GAAsB,0CAGtBC,GAAe,mCAGfC,GAAgB,oCAGhBC,GAAa,wCAGbC,GAAkB,6CCkBxB,SAASC,KACZ,MAAO,CAAEC,KAAMC,IAGZ,SAASC,GAAYC,GACxB,MAAO,CAAEH,KAAMC,GAAwBG,QAASD,GAW7C,SAASE,KACZ,MAAO,CAAEL,KAAMC,IAGZ,SAASK,KACZ,MAAO,CAAEN,KAAMC,IAGZ,SAASM,KACZ,MAAO,CAAEP,KAAMC,IAGZ,SAASO,KACZ,MAAO,CAAER,KAAMC,ICpEZ,ICgCQQ,GA1BO,SAACiF,EAAiBC,GAA8B,IAAAV,EANjD,SAACS,EAAiBC,GAGnC,MAAO,CAAE/E,KAFI+E,EAAK9E,OAAS,EAEZC,KADF4E,EAAQ7E,OAAS,GAKPmE,CAAaU,EAASC,GAArC/E,EAD0DqE,EAC1DrE,KAAME,EADoDmE,EACpDnE,KAERC,EAAQ,IAAIC,MAAMJ,GAAMK,MAAK,GAAO5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,MAAK,KACzEF,EAAM,GAAG,IAAK,EAEd,IAAK,IAAIG,EAAM,EAAGA,EAAMwE,EAAQ7E,OAAQK,GAAO,EACX,MAA5BwE,EAAQtE,OAAOF,EAAM,KACrBH,EAAM,GAAGG,GAAOH,EAAM,GAAGG,EAAM,IAIvC,IAAK,IAAIC,EAAM,EAAGA,EAAMJ,EAAMF,OAAQM,IAElC,IADA,IAAMyE,EAAID,EAAKvE,OAAOD,EAAM,GACnBD,EAAM,EAAGA,EAAMH,EAAMI,GAAKN,OAAQK,IAAO,CAC9C,IAAM9Q,EAAIsV,EAAQtE,OAAOF,EAAM,GACrB,MAAN9Q,GAAaA,IAAMwV,EACnB7E,EAAMI,GAAKD,GAAOH,EAAMI,EAAM,GAAGD,EAAM,GAC1B,MAAN9Q,IACP2Q,EAAMI,GAAKD,GAAOH,EAAMI,GAAKD,EAAM,IAAMH,EAAMI,EAAM,GAAGD,IAIpE,OAAOH,GCzBLQ,GAAoB,CACtBJ,IAAK,EACLD,IAAK,GAQH8D,GAAe,SAACU,EAAiBC,GAGnC,MAAO,CAAE/E,KAFI+E,EAAK9E,OAAS,EAEZC,KADF4E,EAAQ7E,OAAS,IAI5BW,GAAoB,SAACkE,EAAiBC,GAIxC,IAJiF,IAAAV,EAC1DD,GAAaU,EAASC,GAArC/E,EADyEqE,EACzErE,KAAME,EADmEmE,EACnEnE,KACRC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,IAAI5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAE7DC,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BH,EAAM,GAAGG,GAAOwE,EAAQtE,OAAOF,EAAM,GAGzC,IAAK,IAAIC,EAAM,EAAGA,EAAMP,EAAMO,IAC1BJ,EAAMI,GAAK,GAAKwE,EAAKvE,OAAOD,EAAM,GAGtCJ,EAAM,GAAG,GAAK,IACd,IAAK,IAAII,EAAM,EAAGA,EAAMP,EAAMO,IAC1BJ,EAAMI,GAAK,GAAK,IAIpB,OADAJ,EAAMQ,GAAWJ,KAAKI,GAAWL,KAAO,IACjCH,GAGLU,GAAsB,SAACiE,EAAiBC,GAM1C,IANmF,IAAAT,EAC5DF,GAAaU,EAASC,GAArC/E,EAD2EsE,EAC3EtE,KAAME,EADqEoE,EACrEpE,KAERY,EAAUjB,GAAciF,EAASC,GACjChE,EAAcH,GAAkBkE,EAASC,GAEtCxE,EAAM,EAAGA,EAAMP,EAAMO,IAC1B,IAAK,IAAID,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BS,EAAYR,GAAKD,GAAOQ,EAAQP,EAAM,GAAGD,EAAM,GAGvD,OAAOS,GAGLC,GAAkB,SAACnN,EAAiCoN,GACtD,IAAK,IAAIX,EAAM,EAAGA,EAAMzM,EAAO,GAAGoM,QAAUK,GAAOW,EAAMX,IAAKA,IAC1DzM,EAAO,GAAGyM,GAAO7P,EAGrB,IAAK,IAAI8P,EAAM,EAAGA,EAAM1M,EAAOoM,QAAUM,GAAOU,EAAMV,IAAKA,IACvD1M,EAAO0M,GAAK,GAAK9P,GAInByQ,GAAoB,SAAC4D,EAAiBC,GAA4C,IAAAR,EAC7DH,GAAaU,EAASC,GAArC/E,EAD4EuE,EAC5EvE,KAAME,EADsEqE,EACtErE,KACRC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAErE,OADAW,GAAgBb,EAAOQ,IAChBR,GChEEsB,GAAuB,CAChC3R,GAAI,GACJiF,MAAO,qBAGL2M,GAAoBrR,OAAAgN,EAAA,EAAAhN,CAAA,GACnBoR,GADmB,CAEtBE,aAAa,EACbC,aAAcrO,EAAasO,MAC3BC,QHdgB,+KGehBC,wBAAyBpC,KAGvBqC,GAAc3R,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBQ,YAAY,EACZC,YAAa3O,EAAasO,MAC1BM,YHfoB,mLGgBpBC,QHVgB,qJGWhBC,WHZsB,GGatBC,uBAAwB7C,KAGtB8C,GAAclS,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBe,SAAS,EACTC,SAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,WAAYxP,EAAWyP,KACvBC,mBAAoB7D,GACpB8D,sBAAuBvD,GACvBwD,uBAAwBtD,KAGtBqF,GAAQ,MAAM1N,MAAM,IACpB4L,GAAS,SAACC,GAAD,OAAiB1C,KAAK2C,MAAM3C,KAAKyC,SAAWC,IAU9C1F,GAAS,WAClB,IAAMwH,EAAqB9E,MAAM,GAAGC,KAAK4E,GAAMhF,QAAQxQ,IAAI0T,IAAQ1T,IAAI,SAAA6T,GAAC,OAAI2B,GAAM3B,KAClF4B,EAASC,KAAK,IAAK,KACnB,IAAMrF,EAXM,SAAC6E,GACb,IAAK,IAAIrB,EAAIqB,EAAM1E,OAAS,EAAGqD,EAAI,EAAGA,GAAK,EAAG,CAC1C,IAAMsB,EAAIlE,KAAK2C,MAAM3C,KAAKyC,UAAYG,EAAI,IADA7L,EAEnB,CAACkN,EAAMC,GAAID,EAAMrB,IAAvCqB,EAAMrB,GAFmC7L,EAAA,GAE/BkN,EAAMC,GAFyBnN,EAAA,GAI9C,OAAOkN,EAMmBE,CAAQK,GAAU9T,KAAK,IAC3C2O,EAAoBK,MAAM,GAAGC,KAAK4E,GAAMhF,QAAQxQ,IAAI0T,IAAQ1T,IAAI,SAAA6T,GAAC,OAAI2B,GAAM3B,KAAIlS,KAAK,IAC1F,OAAOf,OAAAgN,EAAA,EAAAhN,CAAA,GACAkS,GACAP,GACAN,GAHP,CAII6B,aAAcC,GACdC,cAAeD,GAA2B1D,EAAWC,GACrDI,MAAOqD,GAAyB1D,EAAWC,GAC3C2D,YAAaF,GAAyB1D,EAAWC,GACjD4D,QDM+B,EAAC,GAAM,GCLtCC,cDMmD,CAAC,GAAI,ICLxDC,kBAAmBvE,MCpEdX,IDwEejB,KCxEK,0CAGpBkB,GAAqB,0CAGrBC,GAAqB,0CAGrBC,GAAsB,2CAGtBC,GAAe,oCAGfC,GAAgB,qCAGhBC,GAAa,yCAGbC,GAAkB,8CCkBxB,SAASC,KACZ,MAAO,CAAEC,KAAMC,IAGZ,SAASC,GAAYC,GACxB,MAAO,CAAEH,KAAMC,GAAwBG,QAASD,GAW7C,SAASE,KACZ,MAAO,CAAEL,KAAMC,IAGZ,SAASK,KACZ,MAAO,CAAEN,KAAMC,IAGZ,SAASM,KACZ,MAAO,CAAEP,KAAMC,IAGZ,SAASO,KACZ,MAAO,CAAER,KAAMC,ICpEZ,ICoCQQ,GA9BO,SAACiF,EAAiBC,GAA8B,IAAAV,EANjD,SAACS,EAAiBC,GAGnC,MAAO,CAAE/E,KAFI+E,EAAK9E,OAAS,EAEZC,KADF4E,EAAQ7E,OAAS,GAKPmE,CAAaU,EAASC,GAArC/E,EAD0DqE,EAC1DrE,KAAME,EADoDmE,EACpDnE,KAERC,EAAQ,IAAIC,MAAMJ,GAAMK,MAAK,GAAO5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,MAAK,KACzEF,EAAM,GAAG,IAAK,EAEd,IAAK,IAAIG,EAAM,EAAGA,EAAMwE,EAAQ7E,OAAQK,GAAO,EACX,MAA5BwE,EAAQtE,OAAOF,EAAM,KACrBH,EAAM,GAAGG,GAAOH,EAAM,GAAGG,EAAM,KAAM,GAI7C,IAAK,IAAIC,EAAM,EAAGA,EAAMJ,EAAMF,OAAQM,IAElC,IADA,IAAMyE,EAAID,EAAKvE,OAAOD,EAAM,GACnBD,EAAM,EAAGA,EAAMH,EAAMI,GAAKN,OAAQK,IAAO,CAC9C,IAAM9Q,EAAIsV,EAAQtE,OAAOF,EAAM,GACrB,MAAN9Q,GAAaA,IAAMwV,EACnB7E,EAAMI,GAAKD,GAAOH,EAAMI,EAAM,GAAGD,EAAM,GAC1B,MAAN9Q,IACH2Q,EAAMI,GAAKD,EAAM,GACjBH,EAAMI,GAAKD,GAAOH,EAAMI,GAAKD,EAAM,GACA,MAA5BwE,EAAQtE,OAAOF,EAAM,IAAcwE,EAAQtE,OAAOF,EAAM,KAAO0E,IACtE7E,EAAMI,GAAKD,GAAOH,EAAMI,EAAM,GAAGD,KAKjD,OAAOH,GC7BLQ,GAAoB,CACtBJ,IAAK,EACLD,IAAK,GAQH8D,GAAe,SAACU,EAAiBC,GAGnC,MAAO,CAAE/E,KAFI+E,EAAK9E,OAAS,EAEZC,KADF4E,EAAQ7E,OAAS,IAI5BW,GAAoB,SAACkE,EAAiBC,GAIxC,IAJiF,IAAAV,EAC1DD,GAAaU,EAASC,GAArC/E,EADyEqE,EACzErE,KAAME,EADmEmE,EACnEnE,KACRC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,IAAI5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAE7DC,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BH,EAAM,GAAGG,GAAOwE,EAAQtE,OAAOF,EAAM,GAGzC,IAAK,IAAIC,EAAM,EAAGA,EAAMP,EAAMO,IAC1BJ,EAAMI,GAAK,GAAKwE,EAAKvE,OAAOD,EAAM,GAGtCJ,EAAM,GAAG,GAAK,IACd,IAAK,IAAII,EAAM,EAAGA,EAAMP,EAAMO,IAC1BJ,EAAMI,GAAK,GAAK,IAIpB,OADAJ,EAAMQ,GAAWJ,KAAKI,GAAWL,KAAO,IACjCH,GAGLU,GAAsB,SAACiE,EAAiBC,GAM1C,IANmF,IAAAT,EAC5DF,GAAaU,EAASC,GAArC/E,EAD2EsE,EAC3EtE,KAAME,EADqEoE,EACrEpE,KAERY,EAAUjB,GAAciF,EAASC,GACjChE,EAAcH,GAAkBkE,EAASC,GAEtCxE,EAAM,EAAGA,EAAMP,EAAMO,IAC1B,IAAK,IAAID,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BS,EAAYR,GAAKD,GAAOQ,EAAQP,EAAM,GAAGD,EAAM,GAGvD,OAAOS,GAGLC,GAAkB,SAACnN,EAAiCoN,GACtD,IAAK,IAAIX,EAAM,EAAGA,EAAMzM,EAAO,GAAGoM,QAAUK,GAAOW,EAAMX,IAAKA,IAC1DzM,EAAO,GAAGyM,GAAO7P,EAGrB,IAAK,IAAI8P,EAAM,EAAGA,EAAM1M,EAAOoM,QAAUM,GAAOU,EAAMV,IAAKA,IACvD1M,EAAO0M,GAAK,GAAK9P,GAInByQ,GAAoB,SAAC4D,EAAiBC,GAA4C,IAAAR,EAC7DH,GAAaU,EAASC,GAArC/E,EAD4EuE,EAC5EvE,KAAME,EADsEqE,EACtErE,KACRC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAErE,OADAW,GAAgBb,EAAOQ,IAChBR,GChEEsB,GAAuB,CAChC3R,GAAI,GACJiF,MAAO,sBAGL2M,GAAoBrR,OAAAgN,EAAA,EAAAhN,CAAA,GACnBoR,GADmB,CAEtBE,aAAa,EACbC,aAAcrO,EAAasO,MAC3BC,QHdgB,qVGehBC,wBAAyBpC,KAGvBqC,GAAc3R,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBQ,YAAY,EACZC,YAAa3O,EAAasO,MAC1BM,YHToB,+JGUpBC,QHJgB,qJGKhBC,WHNsB,GGOtBC,uBAAwB7C,KAGtB8C,GAAclS,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBe,SAAS,EACTC,SAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,WAAYxP,EAAWyP,KACvBC,mBAAoB7D,GACpB8D,sBAAuBvD,GACvBwD,uBAAwBtD,KAGtBqF,GAAQ,WAAW1N,MAAM,IACzB4L,GAAS,SAACC,GAAD,OAAiB1C,KAAK2C,MAAM3C,KAAKyC,SAAWC,IAE9C1F,GAAS,WAClB,IAAMwH,EAAqB9E,MAAM,GAAGC,KAAK4E,GAAMhF,QAAQxQ,IAAI0T,IAAQ1T,IAAI,SAAA6T,GAAC,OAAI2B,GAAM3B,KAClF4B,EAAS/B,GAAO,GAAS,GAAK,IAC9B+B,EAAS/B,GAAO,GAAS,GAAK,IAC9B,IAAMrD,EAAoBoF,EAAS9T,KAAK,IAClC2O,EAAoBK,MAAM,GAAGC,KAAK4E,GAAMhF,QAAQxQ,IAAI0T,IAAQ1T,IAAI,SAAA6T,GAAC,OAAI2B,GAAM3B,KAAIlS,KAAK,IAC1F,OAAOf,OAAAgN,EAAA,EAAAhN,CAAA,GACAkS,GACAP,GACAN,GAHP,CAII6B,aAAcC,GACdC,cAAeD,GAA2B1D,EAAWC,GACrDI,MAAOqD,GAAyB1D,EAAWC,GAC3C2D,YAAaF,GAAyB1D,EAAWC,GACjD4D,QDa+B,EAAC,GAAM,GCZtCC,cDamD,CAAC,GAAI,ICZxDC,kBAAmBvE,MC7DdX,IDiEejB,KCjEK,iDAGpBkB,GAAqB,iDAGrBC,GAAqB,iDAGrBC,GAAsB,kDAGtBC,GAAe,2CAGfC,GAAgB,4CAGhBC,GAAa,gDAGbC,GAAkB,qDCkBxB,SAASC,KACZ,MAAO,CAAEC,KAAMC,IAGZ,SAASC,GAAYC,GACxB,MAAO,CAAEH,KAAMC,GAAwBG,QAASD,GAW7C,SAASE,KACZ,MAAO,CAAEL,KAAMC,IAGZ,SAASK,KACZ,MAAO,CAAEN,KAAMC,IAGZ,SAASM,KACZ,MAAO,CAAEP,KAAMC,IAGZ,SAASO,KACZ,MAAO,CAAER,KAAMC,ICpEZ,ICkCQQ,GAvBO,SAACuF,EAAiBC,GAKpC,IALkE,IAAAhB,EANjD,SAACe,EAAiBC,GAGnC,MAAO,CAAErF,KAFIoF,EAAMnF,OAAS,EAEbC,KADFmF,EAAQ,GAKEjB,CAAagB,EAAOC,GAAnCrF,EAD0DqE,EAC1DrE,KAAME,EADoDmE,EACpDnE,KAERC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAKiF,KAAU7V,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAKiF,OAEnE/E,EAAM,EAAGA,EAAMP,EAAMO,IAC1BJ,EAAMI,GAAK,GAAK,EAGpB,IAAK,IAAIA,EAAM,EAAGA,EAAMJ,EAAMF,OAAQM,GAAO,EAEzC,IADA,IAAMgF,EAAOH,EAAM7E,EAAM,GAChBD,EAAM,EAAGA,EAAMH,EAAMI,GAAKN,OAAQK,GAAO,EAE1CH,EAAMI,GAAKD,GADXiF,EAAOjF,EACWH,EAAMI,EAAM,GAAGD,GAEfI,KAAKD,IAAIN,EAAMI,GAAKD,EAAMiF,GAAQ,EAAGpF,EAAMI,EAAM,GAAGD,IAKlF,OAAOH,GC3BLQ,GAAoB,CACtBJ,IAAK,EACLD,IAAK,GAQH8D,GAAe,SAACgB,EAAiBC,GAGnC,MAAO,CAAErF,KAFIoF,EAAMnF,OAAS,EAEbC,KADFmF,EAAQ,IAInBzE,GAAoB,SAACwE,EAAiBC,GAKxC,IALiF,IAAAhB,EAC1DD,GAAagB,EAAOC,GAAnCrF,EADyEqE,EACzErE,KAAME,EADmEmE,EACnEnE,KAERC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,IAAI5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAE7DC,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BH,EAAM,GAAGG,GAAOA,EAAM,EACtBH,EAAM,GAAGG,GAAOgF,IAGpB,IAAK,IAAI/E,EAAM,EAAGA,EAAMP,EAAMO,IAC1BJ,EAAMI,GAAK,GAAK6E,EAAM7E,EAAM,GAC5BJ,EAAMI,GAAK,GAAK,EAIpB,OADAJ,EAAMQ,GAAWJ,KAAKI,GAAWL,KAAO,IACjCH,GAGLU,GAAsB,SAACuE,EAAiBC,GAM1C,IANmF,IAAAf,EAC5DF,GAAagB,EAAOC,GAAnCrF,EAD2EsE,EAC3EtE,KAAME,EADqEoE,EACrEpE,KAERY,EAAUjB,GAAcuF,EAAOC,GAC/BtE,EAAcH,GAAkBwE,EAAOC,GAEpC9E,EAAM,EAAGA,EAAMP,EAAMO,IAC1B,IAAK,IAAID,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BS,EAAYR,GAAKD,GAAOQ,EAAQP,EAAM,GAAGD,EAAM,GAGvD,OAAOS,GAGLC,GAAkB,SAACnN,EAAiCoN,EAAcd,GACpEtM,EAAO,GAAGoN,EAAMX,KAAO7P,EACvBoD,EAAOoN,EAAMV,KAAK,GAAK9P,EACvBoD,EAAOoN,EAAMV,IAAM,GAAGU,EAAMX,KAAO1P,EACnC,IAAM2U,EAAOC,OAAOrF,EAAMc,EAAMV,KAAK,IACjCU,EAAMX,IAAMiF,EAAO,GAAK,IACxB1R,EAAOoN,EAAMV,KAAKU,EAAMX,IAAMiF,GAAQzU,IAIxCoQ,GAAoB,SAACkE,EAAiBC,GAA6C,IAAAd,EAC9DH,GAAagB,EAAOC,GAAnCrF,EAD6EuE,EAC7EvE,KAAME,EADuEqE,EACvErE,KACRY,EAAUF,GAAkBwE,EAAOC,GACnClF,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAErE,OADAW,GAAgBb,EAAOQ,GAAYG,GAC5BX,GAGLgB,GAAgB,SAACiE,EAAiBC,GAGpC,IAFA,IAAMvE,EAAUjB,GAAcuF,EAAOC,GAC/B1O,EAAM,IAAIyK,IACPb,EAAM,EAAGA,EAAMO,EAAQb,OAAQM,IACpC,IAAK,IAAID,EAAM,EAAGA,EAAMQ,EAAQP,GAAKN,OAAQK,IAAO,CAChD,IAAM6D,EAAQrD,EAAQP,GAAKD,GACvB6D,IAAUmB,IACV3O,EAAI0K,IAAIiE,KAER3O,EAAI0K,IAAI8C,GAIpB,OAAO/D,MAAMkB,KAAK3K,GAAK4K,QAGrBC,GAAsB,SAAC4D,EAAiBC,GAC1C,OAAOlE,GAAciE,EAAOC,GAAO5V,IAAI,iBAAO,CAAEoC,MAAO,WCnF9C4P,GAAuB,CAChC3R,GAAI,EACJiF,MAAO,6BAGL2M,GAAoBrR,OAAAgN,EAAA,EAAAhN,CAAA,GACnBoR,GADmB,CAEtBE,aAAa,EACbC,aAAcrO,EAAasO,MAC3BC,QHdgB,uKGehBC,wBAAyBpC,KAGvBqC,GAAc3R,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBQ,YAAY,EACZC,YAAa3O,EAAasO,MAC1BM,YHdoB,uPGepBC,QHTmB,GGUnBC,WHXsB,GGYtBC,uBAAwB7C,KAGtB8C,GAAclS,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBe,SAAS,EACTC,SAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,WAAYxP,EAAWyP,KACvBC,mBAAoB7D,GACpB8D,sBAAuBvD,GACvBwD,uBAAwBtD,KAWtB6F,GAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGzB/H,GAAS,WAClB,IAAM0H,EAAQhF,MAAMkB,KAZR,SAACqD,GACb,IAAK,IAAIrB,EAAIqB,EAAM1E,OAAS,EAAGqD,EAAI,EAAGA,GAAK,EAAG,CAC1C,IAAMsB,EAAIlE,KAAK2C,MAAM3C,KAAKyC,UAAYG,EAAI,IADA7L,EAEnB,CAACkN,EAAMC,GAAID,EAAMrB,IAAvCqB,EAAMrB,GAFmC7L,EAAA,GAE/BkN,EAAMC,GAFyBnN,EAAA,GAI9C,OAAOkN,EAOkBE,CAAQY,KAGjC,OAFAL,EAAMM,MACNN,EAAMM,MACCrV,OAAAgN,EAAA,EAAAhN,CAAA,GACAkS,GACAP,GACAN,GAHP,CAII6B,aAAcC,GACdC,cAAeD,GAA2B4B,EAXpC,GAYNjF,MAAOqD,GAAyB4B,EAZ1B,GAaN1B,YAAaF,GAAyB4B,EAbhC,GAcNzB,QAASH,GAAqB4B,EAdxB,GAeNxB,cAAeJ,GAA2B4B,EAfpC,GAgBNvB,kBAAmBvE,MCnEdX,IDuEejB,KCvEK,iDAGpBkB,GAAqB,iDAGrBC,GAAqB,iDAGrBC,GAAsB,kDAGtBC,GAAe,2CAGfC,GAAgB,4CAGhBC,GAAa,gDAGbC,GAAkB,qDCkBxB,SAASC,KACZ,MAAO,CAAEC,KAAMC,IAGZ,SAASC,GAAYC,GACxB,MAAO,CAAEH,KAAMC,GAAwBG,QAASD,GAW7C,SAASE,KACZ,MAAO,CAAEL,KAAMC,IAGZ,SAASK,KACZ,MAAO,CAAEN,KAAMC,IAGZ,SAASM,KACZ,MAAO,CAAEP,KAAMC,IAGZ,SAASO,KACZ,MAAO,CAAER,KAAMC,ICpEZ,ICkCQQ,GAvBO,SAACuF,EAAiBC,GAKpC,IALkE,IAAAhB,EANjD,SAACe,EAAiBC,GAGnC,MAAO,CAAErF,KAFIoF,EAAMnF,OAAS,EAEbC,KADFmF,EAAQ,GAKEjB,CAAagB,EAAOC,GAAnCrF,EAD0DqE,EAC1DrE,KAAME,EADoDmE,EACpDnE,KAERC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,KAE5DE,EAAM,EAAGA,EAAMP,EAAMO,IAC1BJ,EAAMI,GAAK,GAAK,EAGpB,IAAK,IAAIA,EAAM,EAAGA,EAAMJ,EAAMF,OAAQM,GAAO,EAEzC,IADA,IAAMgF,EAAOH,EAAM7E,EAAM,GAChBD,EAAM,EAAGA,EAAMH,EAAMI,GAAKN,OAAQK,GAAO,EAE1CH,EAAMI,GAAKD,GADXiF,EAAOjF,EACWH,EAAMI,EAAM,GAAGD,GAEfH,EAAMI,GAAKD,EAAMiF,GAAQpF,EAAMI,EAAM,GAAGD,GAKtE,OAAOH,GC3BLQ,GAAoB,CACtBJ,IAAK,EACLD,IAAK,GAQH8D,GAAe,SAACgB,EAAiBC,GAGnC,MAAO,CAAErF,KAFIoF,EAAMnF,OAAS,EAEbC,KADFmF,EAAQ,IAInBzE,GAAoB,SAACwE,EAAiBC,GAKxC,IALiF,IAAAhB,EAC1DD,GAAagB,EAAOC,GAAnCrF,EADyEqE,EACzErE,KAAME,EADmEmE,EACnEnE,KAERC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,IAAI5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAE7DC,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BH,EAAM,GAAGG,GAAOA,EAAM,EACtBH,EAAM,GAAGG,GAAO,EAGpB,IAAK,IAAIC,EAAM,EAAGA,EAAMP,EAAMO,IAC1BJ,EAAMI,GAAK,GAAK6E,EAAM7E,EAAM,GAC5BJ,EAAMI,GAAK,GAAK,EAKpB,OAFAJ,EAAM,GAAG,GAAK,EACdA,EAAMQ,GAAWJ,KAAKI,GAAWL,KAAO,IACjCH,GAGLU,GAAsB,SAACuE,EAAiBC,GAM1C,IANmF,IAAAf,EAC5DF,GAAagB,EAAOC,GAAnCrF,EAD2EsE,EAC3EtE,KAAME,EADqEoE,EACrEpE,KAERY,EAAUjB,GAAcuF,EAAOC,GAC/BtE,EAAcH,GAAkBwE,EAAOC,GAEpC9E,EAAM,EAAGA,EAAMP,EAAMO,IAC1B,IAAK,IAAID,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BS,EAAYR,GAAKD,GAAOQ,EAAQP,EAAM,GAAGD,EAAM,GAGvD,OAAOS,GAGLC,GAAkB,SAACnN,EAAiCoN,EAAcd,GACpEtM,EAAO,GAAGoN,EAAMX,KAAO7P,EACvBoD,EAAOoN,EAAMV,KAAK,GAAK9P,EACvBoD,EAAOoN,EAAMV,IAAM,GAAGU,EAAMX,KAAO1P,EACnC,IAAM2U,EAAOC,OAAOrF,EAAMc,EAAMV,KAAK,IACjCU,EAAMX,IAAMiF,EAAO,GAAK,IACxB1R,EAAOoN,EAAMV,KAAKU,EAAMX,IAAMiF,GAAQ3U,IAIxCsQ,GAAoB,SAACkE,EAAiBC,GAA6C,IAAAd,EAC9DH,GAAagB,EAAOC,GAAnCrF,EAD6EuE,EAC7EvE,KAAME,EADuEqE,EACvErE,KACRY,EAAUF,GAAkBwE,EAAOC,GACnClF,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAErE,OADAW,GAAgBb,EAAOQ,GAAYG,GAC5BX,GAGLgB,GAAgB,SAACiE,EAAiBC,GAGpC,IAFA,IAAMvE,EAAUjB,GAAcuF,EAAOC,GAC/B1O,EAAM,IAAIyK,IACPb,EAAM,EAAGA,EAAMO,EAAQb,OAAQM,IACpC,IAAK,IAAID,EAAM,EAAGA,EAAMQ,EAAQP,GAAKN,OAAQK,IACzC3J,EAAI0K,IAAIP,EAAQP,GAAKD,IAG7B,OAAOF,MAAMkB,KAAK3K,GAAK4K,QAGrBC,GAAsB,SAAC4D,EAAiBC,GAC1C,OAAOlE,GAAciE,EAAOC,GAAO5V,IAAI,iBAAO,CAAEoC,MAAO,WC/E9C4P,GAAuB,CAChC3R,GAAI,EACJiF,MAAO,6BAGL2M,GAAoBrR,OAAAgN,EAAA,EAAAhN,CAAA,GACnBoR,GADmB,CAEtBE,aAAa,EACbC,aAAcrO,EAAasO,MAC3BC,QHdgB,8IGehBC,wBAAyBpC,KAGvBqC,GAAc3R,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBQ,YAAY,EACZC,YAAa3O,EAAasO,MAC1BM,YHhBoB,2NGiBpBC,QHXmB,GGYnBC,WHbsB,GGctBC,uBAAwB7C,KAGtB8C,GAAclS,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBe,SAAS,EACTC,SAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,WAAYxP,EAAWyP,KACvBC,mBAAoB7D,GACpB8D,sBAAuBvD,GACvBwD,uBAAwBtD,KAWtB6F,GAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGzB/H,GAAS,WAClB,IAAM0H,EAAQhF,MAAMkB,KAZR,SAACqD,GACb,IAAK,IAAIrB,EAAIqB,EAAM1E,OAAS,EAAGqD,EAAI,EAAGA,GAAK,EAAG,CAC1C,IAAMsB,EAAIlE,KAAK2C,MAAM3C,KAAKyC,UAAYG,EAAI,IADA7L,EAEnB,CAACkN,EAAMC,GAAID,EAAMrB,IAAvCqB,EAAMrB,GAFmC7L,EAAA,GAE/BkN,EAAMC,GAFyBnN,EAAA,GAI9C,OAAOkN,EAOkBE,CAAQY,KAGjC,OAFAL,EAAMM,MACNN,EAAMM,MACCrV,OAAAgN,EAAA,EAAAhN,CAAA,GACAkS,GACAP,GACAN,GAHP,CAII6B,aAAcC,GACdC,cAAeD,GAA2B4B,EAXpC,GAYNjF,MAAOqD,GAAyB4B,EAZ1B,GAaN1B,YAAaF,GAAyB4B,EAbhC,GAcNzB,QAASH,GAAqB4B,EAdxB,GAeNxB,cAAeJ,GAA2B4B,EAfpC,GAgBNvB,kBAAmBvE,MCnEdX,IDuEejB,KCvEK,sCAGpBkB,GAAqB,sCAGrBC,GAAqB,sCAGrBC,GAAsB,uCAGtBC,GAAe,gCAGfC,GAAgB,iCAGhBC,GAAa,qCAGbC,GAAkB,0CCkBxB,SAASC,KACZ,MAAO,CAAEC,KAAMC,IAGZ,SAASC,GAAYC,GACxB,MAAO,CAAEH,KAAMC,GAAwBG,QAASD,GAW7C,SAASE,KACZ,MAAO,CAAEL,KAAMC,IAGZ,SAASK,KACZ,MAAO,CAAEN,KAAMC,IAGZ,SAASM,KACZ,MAAO,CAAEP,KAAMC,IAGZ,SAASO,KACZ,MAAO,CAAER,KAAMC,ICpEZ,ICyBQQ,GAzBO,SAACC,EAAmBC,GAMtC,IALA,IAAMC,EAAOD,EAAUE,OAAS,EAC1BC,EAAOJ,EAAUG,OAAS,EAE1BE,EAAQ,IAAIC,MAAMJ,GAAMK,MAAK,GAAO5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,MAAK,KAEhEC,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BH,EAAM,GAAGG,IAAO,EAGpB,IAAK,IAAIC,EAAM,EAAGA,EAAMP,EAAMO,IAE1B,IADA,IAAMoF,EAAM5F,EAAUS,OAAOD,EAAM,GAC1BD,EAAM,EAAGA,EAAMJ,EAAMI,IAEtBqF,IADQ7F,EAAUU,OAAOF,EAAM,IAChBH,EAAMI,EAAM,GAAGD,EAAM,GACpCH,EAAMI,GAAKD,IAAO,EAElBH,EAAMI,GAAKD,GAAOH,EAAMI,GAAKD,EAAM,GAK/C,OAAOH,GClBLQ,GAAoB,CACtBJ,IAAK,EACLD,IAAK,GAQH8D,GAAe,SAACtE,EAAmBC,GAGrC,MAAO,CAAEC,KAFID,EAAUE,OAAS,EAEjBC,KADFJ,EAAUG,OAAS,IAI9BW,GAAoB,SAACd,EAAmBC,GAK1C,IALwF,IAAAsE,EACjED,GAAatE,EAAWC,GAAvCC,EADgFqE,EAChFrE,KAAME,EAD0EmE,EAC1EnE,KAERC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,IAAI5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAE7DC,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BH,EAAM,GAAGG,GAAOR,EAAUU,OAAOF,EAAM,GACvCH,EAAM,GAAGG,GAAO,IAGpB,IAAK,IAAIC,EAAM,EAAGA,EAAMP,EAAMO,IAC1BJ,EAAMI,GAAK,GAAKR,EAAUS,OAAOD,EAAM,GACvCJ,EAAMI,GAAK,GAAK,IAKpB,OAFAJ,EAAM,GAAG,GAAK,IACdA,EAAMQ,GAAWJ,KAAKI,GAAWL,KAAO,IACjCH,GAGLU,GAAsB,SAACf,EAAmBC,GAM5C,IAN0F,IAAAuE,EACnEF,GAAatE,EAAWC,GAAvCC,EADkFsE,EAClFtE,KAAME,EAD4EoE,EAC5EpE,KAERY,EAAUjB,GAAcC,EAAWC,GACnCgB,EAAcH,GAAkBd,EAAWC,GAExCQ,EAAM,EAAGA,EAAMP,EAAMO,IAC1B,IAAK,IAAID,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BS,EAAYR,GAAKD,GAAOQ,EAAQP,EAAM,GAAGD,EAAM,GAGvD,OAAOS,GAGLC,GAAkB,SAACnN,EAAiCoN,GACtD,IAAK,IAAIX,EAAM,EAAGA,EAAMzM,EAAO,GAAGoM,QAAUK,GAAOW,EAAMX,IAAKA,IAC1DzM,EAAO,GAAGyM,GAAO7P,EAGrB,IAAK,IAAI8P,EAAM,EAAGA,EAAM1M,EAAOoM,QAAUM,GAAOU,EAAMV,IAAKA,IACvD1M,EAAO0M,GAAK,GAAK9P,GAInByQ,GAAoB,SAACpB,EAAmBC,GAC1C,IAAMC,EAAOD,EAAUE,OAAS,EAC1BC,EAAOJ,EAAUG,OAAS,EAC1BE,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAErE,OADAW,GAAgBb,EAAOQ,IAChBR,GChEEsB,GAAuB,CAChC3R,GAAI,EACJiF,MAAO,kBAGL2M,GAAoBrR,OAAAgN,EAAA,EAAAhN,CAAA,GACnBoR,GADmB,CAEtBE,aAAa,EACbC,aAAcrO,EAAasO,MAC3BC,QHdgB,gIGehBC,wBAAyBpC,KAGvBqC,GAAc3R,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBQ,YAAY,EACZC,YAAa3O,EAAasO,MAC1BM,YHhBoB,qEGiBpBC,QHbmB,GGcnBC,WHfsB,GGgBtBC,uBAAwB7C,KAGtB8C,GAAclS,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBe,SAAS,EACTC,SAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,WAAYxP,EAAWyP,KACvBC,mBAAoB7D,GACpB8D,sBAAuBvD,GACvBwD,uBAAwBtD,KAItBuD,GAAS,SAACC,GAAD,OAAiB1C,KAAK2C,MAAM3C,KAAKyC,SAAWC,IAE9C1F,GAAS,WAClB,IAAMoC,EAAoBM,MAAM,GAAGC,KAJzB,OAIoCJ,QAAQxQ,IAAI0T,IAAQ1T,IAAI,SAAA6T,GAAC,MAJ7D,OAIuEA,KAAIlS,KAAK,IACpF2O,EAAoBK,MAAM,GAAGC,KALzB,OAKoCJ,QAAQxQ,IAAI0T,IAAQ1T,IAAI,SAAA6T,GAAC,MAL7D,OAKuEA,KAAIlS,KAAK,IAC1F,OAAOf,OAAAgN,EAAA,EAAAhN,CAAA,GACAkS,GACAP,GACAN,GAHP,CAII6B,aAAcC,GACdC,cAAeD,GAA2B1D,EAAWC,GACrDI,MAAOqD,GAAyB1D,EAAWC,GAC3C2D,YAAaF,GAAyB1D,EAAWC,GACjD4D,QDgBmE,EAAC,GAAM,GCf1EC,cDemE,EAAC,GAAM,GAGnCnU,IAAI,iBAAO,CAAEoC,MAAO,UCjB3DgS,kBAAmBvE,MC1DdX,ID8DejB,KC9DK,kDAGpBkB,GAAqB,kDAGrBC,GAAqB,kDAGrBC,GAAsB,mDAGtBC,GAAe,4CAGfC,GAAgB,6CAGhBC,GAAa,iDAGbC,GAAkB,sDCkBxB,SAASC,KACZ,MAAO,CAAEC,KAAMC,IAGZ,SAASC,GAAYC,GACxB,MAAO,CAAEH,KAAMC,GAAwBG,QAASD,GAW7C,SAASE,KACZ,MAAO,CAAEL,KAAMC,IAGZ,SAASK,KACZ,MAAO,CAAEN,KAAMC,IAGZ,SAASM,KACZ,MAAO,CAAEP,KAAMC,IAGZ,SAASO,KACZ,MAAO,CAAER,KAAMC,ICpEZ,ICmBQQ,GAnBO,SAACC,EAAmBC,GAMtC,IALA,IAAMC,EAAOD,EAAUE,OAAS,EAC1BC,EAAOJ,EAAUG,OAAS,EAE1BE,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,KAE5DE,EAAM,EAAGA,EAAMP,EAAMO,IAC1B,IAAK,IAAID,EAAM,EAAGA,EAAMJ,EAAMI,IACtBR,EAAUU,OAAOF,EAAM,KAAOP,EAAUS,OAAOD,EAAM,GACrDJ,EAAMI,GAAKD,GAAOH,EAAMI,EAAM,GAAGD,EAAM,GAAK,EAE5CH,EAAMI,GAAKD,GAAOI,KAAK0C,IAAIjD,EAAMI,GAAKD,EAAM,GAAIH,EAAMI,EAAM,GAAGD,IAK3E,OAAOH,GCZLQ,GAAoB,CACtBJ,IAAK,EACLD,IAAK,GAQH8D,GAAe,SAACtE,EAAmBC,GAGrC,MAAO,CAAEC,KAFID,EAAUE,OAAS,EAEjBC,KADFJ,EAAUG,OAAS,IAI9BW,GAAoB,SAACd,EAAmBC,GAK1C,IALuF,IAAAsE,EAChED,GAAatE,EAAWC,GAAvCC,EAD+EqE,EAC/ErE,KAAME,EADyEmE,EACzEnE,KAERC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,IAAI5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAE7DC,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BH,EAAM,GAAGG,GAAOR,EAAUU,OAAOF,EAAM,GACvCH,EAAM,GAAGG,GAAO,EAGpB,IAAK,IAAIC,EAAM,EAAGA,EAAMP,EAAMO,IAC1BJ,EAAMI,GAAK,GAAKR,EAAUS,OAAOD,EAAM,GACvCJ,EAAMI,GAAK,GAAK,EAKpB,OAFAJ,EAAM,GAAG,GAAK,EACdA,EAAMQ,GAAWJ,KAAKI,GAAWL,KAAO,IACjCH,GAGLU,GAAsB,SAACf,EAAmBC,GAM5C,IANyF,IAAAuE,EAClEF,GAAatE,EAAWC,GAAvCC,EADiFsE,EACjFtE,KAAME,EAD2EoE,EAC3EpE,KAERY,EAAUjB,GAAcC,EAAWC,GACnCgB,EAAcH,GAAkBd,EAAWC,GAExCQ,EAAM,EAAGA,EAAMP,EAAMO,IAC1B,IAAK,IAAID,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BS,EAAYR,GAAKD,GAAOQ,EAAQP,EAAM,GAAGD,EAAM,GAGvD,OAAOS,GAGLC,GAAkB,SAACnN,EAAiCoN,GACtD,IAAK,IAAIX,EAAM,EAAGA,EAAMzM,EAAO,GAAGoM,QAAUK,GAAOW,EAAMX,IAAKA,IAC1DzM,EAAO,GAAGyM,GAAO7P,EAGrB,IAAK,IAAI8P,EAAM,EAAGA,EAAM1M,EAAOoM,QAAUM,GAAOU,EAAMV,IAAKA,IACvD1M,EAAO0M,GAAK,GAAK9P,GAInByQ,GAAoB,SAACpB,EAAmBC,GAC1C,IAAMC,EAAOD,EAAUE,OAAS,EAC1BC,EAAOJ,EAAUG,OAAS,EAC1BE,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAErE,OADAW,GAAgBb,EAAOQ,IAChBR,GAGLgB,GAAgB,SAACrB,EAAmBC,GAGtC,IAFA,IAAMe,EAAUjB,GAAcC,EAAWC,GACnCpJ,EAAM,IAAIyK,IACPb,EAAM,EAAGA,EAAMO,EAAQb,OAAQM,IACpC,IAAK,IAAID,EAAM,EAAGA,EAAMQ,EAAQP,GAAKN,OAAQK,IACzC3J,EAAI0K,IAAIP,EAAQP,GAAKD,IAG7B,OAAOF,MAAMkB,KAAK3K,GAAK4K,QAGrBC,GAAsB,SAAC1B,EAAmBC,GAC5C,OAAOoB,GAAcrB,EAAWC,GAAWtQ,IAAI,iBAAO,CAAEoC,MAAO,WC/EtD4P,GAAuB,CAChC3R,GAAI,EACJiF,MAAO,8BAGL2M,GAAoBrR,OAAAgN,EAAA,EAAAhN,CAAA,GACnBoR,GADmB,CAEtBE,aAAa,EACbC,aAAcrO,EAAasO,MAC3BC,QHdgB,iKGehBC,wBAAyBpC,KAGvBqC,GAAc3R,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBQ,YAAY,EACZC,YAAa3O,EAAasO,MAC1BM,YHdoB,mMGepBC,QHRgB,iJGShBC,WHXsB,GGYtBC,uBAAwB7C,KAGtB8C,GAAclS,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBe,SAAS,EACTC,SAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,WAAYxP,EAAWyP,KACvBC,mBAAoB7D,GACpB8D,sBAAuBvD,GACvBwD,uBAAwBtD,KAItBuD,GAAS,SAACC,GAAD,OAAiB1C,KAAK2C,MAAM3C,KAAKyC,SAAWC,IAE9C1F,GAAS,WAClB,IAAMoC,EAAoBM,MAAM,GAAGC,KAJzB,OAIoCJ,QAAQxQ,IAAI0T,IAAQ1T,IAAI,SAAA6T,GAAC,MAJ7D,OAIuEA,KAAIlS,KAAK,IACpF2O,EAAoBK,MAAM,GAAGC,KALzB,OAKoCJ,QAAQxQ,IAAI0T,IAAQ1T,IAAI,SAAA6T,GAAC,MAL7D,OAKuEA,KAAIlS,KAAK,IAC1F,OAAOf,OAAAgN,EAAA,EAAAhN,CAAA,GACAkS,GACAP,GACAN,GAHP,CAII6B,aAAcC,GACdC,cAAeD,GAA2B1D,EAAWC,GACrDI,MAAOqD,GAAyB1D,EAAWC,GAC3C2D,YAAaF,GAAyB1D,EAAWC,GACjD4D,QAASH,GAAqB1D,EAAWC,GACzC6D,cAAeJ,GAA2B1D,EAAWC,GACrD8D,kBAAmBvE,MC1DdX,ID8DejB,KC9DK,gDAGpBkB,GAAqB,gDAGrBC,GAAqB,gDAGrBC,GAAsB,iDAGtBC,GAAe,0CAGfC,GAAgB,2CAGhBC,GAAa,+CAGbC,GAAkB,oDCkBxB,SAASC,KACZ,MAAO,CAAEC,KAAMC,IAGZ,SAASC,GAAYC,GACxB,MAAO,CAAEH,KAAMC,GAAwBG,QAASD,GAW7C,SAASE,KACZ,MAAO,CAAEL,KAAMC,IAGZ,SAASK,KACZ,MAAO,CAAEN,KAAMC,IAGZ,SAASM,KACZ,MAAO,CAAEP,KAAMC,IAGZ,SAASO,KACZ,MAAO,CAAER,KAAMC,ICpEZ,ICmBQQ,GAnBO,SAACC,EAAmBC,GAMtC,IALA,IAAMC,EAAOD,EAAUE,OAAS,EAC1BC,EAAOJ,EAAUG,OAAS,EAE1BE,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,KAE5DE,EAAM,EAAGA,EAAMP,EAAMO,IAC1B,IAAK,IAAID,EAAM,EAAGA,EAAMJ,EAAMI,IACtBR,EAAUU,OAAOF,EAAM,KAAOP,EAAUS,OAAOD,EAAM,GACrDJ,EAAMI,GAAKD,GAAOH,EAAMI,EAAM,GAAGD,EAAM,GAAK,EAE5CH,EAAMI,GAAKD,GAAO,EAK9B,OAAOH,GCZLQ,GAAoB,CACtBJ,IAAK,EACLD,IAAK,GAQH8D,GAAe,SAACtE,EAAmBC,GAGrC,MAAO,CAAEC,KAFID,EAAUE,OAAS,EAEjBC,KADFJ,EAAUG,OAAS,IAI9BW,GAAoB,SAACd,EAAmBC,GAK1C,IALuF,IAAAsE,EAChED,GAAatE,EAAWC,GAAvCC,EAD+EqE,EAC/ErE,KAAME,EADyEmE,EACzEnE,KAERC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,IAAI5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAE7DC,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BH,EAAM,GAAGG,GAAOR,EAAUU,OAAOF,EAAM,GACvCH,EAAM,GAAGG,GAAO,EAGpB,IAAK,IAAIC,EAAM,EAAGA,EAAMP,EAAMO,IAC1BJ,EAAMI,GAAK,GAAKR,EAAUS,OAAOD,EAAM,GACvCJ,EAAMI,GAAK,GAAK,EAKpB,OAFAJ,EAAM,GAAG,GAAK,EACdA,EAAMQ,GAAWJ,KAAKI,GAAWL,KAAO,IACjCH,GAGLU,GAAsB,SAACf,EAAmBC,GAM5C,IANyF,IAAAuE,EAClEF,GAAatE,EAAWC,GAAvCC,EADiFsE,EACjFtE,KAAME,EAD2EoE,EAC3EpE,KAERY,EAAUjB,GAAcC,EAAWC,GACnCgB,EAAcH,GAAkBd,EAAWC,GAExCQ,EAAM,EAAGA,EAAMP,EAAMO,IAC1B,IAAK,IAAID,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BS,EAAYR,GAAKD,GAAOQ,EAAQP,EAAM,GAAGD,EAAM,GAGvD,OAAOS,GAGLC,GAAkB,SAACnN,EAAiCoN,GACtD,IAAK,IAAIX,EAAM,EAAGA,EAAMzM,EAAO,GAAGoM,QAAUK,GAAOW,EAAMX,IAAKA,IAC1DzM,EAAO,GAAGyM,GAAO7P,EAGrB,IAAK,IAAI8P,EAAM,EAAGA,EAAM1M,EAAOoM,QAAUM,GAAOU,EAAMV,IAAKA,IACvD1M,EAAO0M,GAAK,GAAK9P,GAInByQ,GAAoB,SAACpB,EAAmBC,GAAiD,IAAAwE,EACpEH,GAAatE,EAAWC,GAAvCC,EADmFuE,EACnFvE,KAAME,EAD6EqE,EAC7ErE,KACRC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAErE,OADAW,GAAgBb,EAAOQ,IAChBR,GAGLgB,GAAgB,SAACrB,EAAmBC,GAGtC,IAFA,IAAMe,EAAUjB,GAAcC,EAAWC,GACnCpJ,EAAM,IAAIyK,IACPb,EAAM,EAAGA,EAAMO,EAAQb,OAAQM,IACpC,IAAK,IAAID,EAAM,EAAGA,EAAMQ,EAAQP,GAAKN,OAAQK,IACzC3J,EAAI0K,IAAIP,EAAQP,GAAKD,IAG7B,OAAOF,MAAMkB,KAAK3K,GAAK4K,QAGrBC,GAAsB,SAAC1B,EAAmBC,GAC5C,OAAOoB,GAAcrB,EAAWC,GAAWtQ,IAAI,iBAAO,CAAEoC,MAAO,WC9EtD4P,GAAuB,CAChC3R,GAAI,EACJiF,MAAO,4BAGL2M,GAAoBrR,OAAAgN,EAAA,EAAAhN,CAAA,GACnBoR,GADmB,CAEtBE,aAAa,EACbC,aAAcrO,EAAasO,MAC3BC,QHdgB,wGGehBC,wBAAyBpC,KAGvBqC,GAAc3R,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBQ,YAAY,EACZC,YAAa3O,EAAasO,MAC1BM,YHhBoB,wGGiBpBC,QHZgB,yOGahBC,WHfsB,GGgBtBC,uBAAwB7C,KAGtB8C,GAAclS,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBe,SAAS,EACTC,SAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,WAAYxP,EAAWyP,KACvBC,mBAAoB7D,GACpB8D,sBAAuBvD,GACvBwD,uBAAwBtD,KAItBuD,GAAS,SAACC,GAAD,OAAiB1C,KAAK2C,MAAM3C,KAAKyC,SAAWC,IAE9C1F,GAAS,WAClB,IAAMoC,EAAoBM,MAAM,GAAGC,KAJzB,OAIoCJ,QAAQxQ,IAAI0T,IAAQ1T,IAAI,SAAA6T,GAAC,MAJ7D,OAIuEA,KAAIlS,KAAK,IACpF2O,EAAoBK,MAAM,GAAGC,KALzB,OAKoCJ,QAAQxQ,IAAI0T,IAAQ1T,IAAI,SAAA6T,GAAC,MAL7D,OAKuEA,KAAIlS,KAAK,IAC1F,OAAOf,OAAAgN,EAAA,EAAAhN,CAAA,GACAkS,GACAP,GACAN,GAHP,CAII6B,aAAcC,GACdC,cAAeD,GAA2B1D,EAAWC,GACrDI,MAAOqD,GAAyB1D,EAAWC,GAC3C2D,YAAaF,GAAyB1D,EAAWC,GACjD4D,QAASH,GAAqB1D,EAAWC,GACzC6D,cAAeJ,GAA2B1D,EAAWC,GACrD8D,kBAAmBvE,MC1DdX,ID8DejB,KC9DK,0CAGpBkB,GAAqB,0CAGrBC,GAAqB,0CAGrBC,GAAsB,2CAGtBC,GAAe,oCAGfC,GAAgB,qCAGhBC,GAAa,yCAGbC,GAAkB,8CCkBxB,SAASC,KACZ,MAAO,CAAEC,KAAMC,IAGZ,SAASC,GAAYC,GACxB,MAAO,CAAEH,KAAMC,GAAwBG,QAASD,GAW7C,SAASE,KACZ,MAAO,CAAEL,KAAMC,IAGZ,SAASK,KACZ,MAAO,CAAEN,KAAMC,IAGZ,SAASM,KACZ,MAAO,CAAEP,KAAMC,IAGZ,SAASO,KACZ,MAAO,CAAER,KAAMC,ICpEZ,ICwBQQ,GAxBO,SAACwF,EAAeV,GAMlC,IALA,IAAM3E,EAAO2E,EAAM1E,OAAS,EACtBC,EAAOmF,EAAQ,EAEflF,EAAQ,IAAIC,MAAMJ,GAAMK,MAAK,GAAO5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,MAAK,KAEhEE,EAAM,EAAGA,EAAMP,EAAMO,IAC1BJ,EAAMI,GAAK,IAAK,EAGpB,IAAK,IAAIA,EAAM,EAAGA,EAAMP,EAAMO,IAE1B,IADA,IAAMqF,EAAUjB,EAAMpE,EAAM,GACnBD,EAAM,EAAGA,EAAMJ,EAAMI,IAEtBH,EAAMI,GAAKD,GADXsF,EAAUtF,EACQH,EAAMI,EAAM,GAAGD,GAEfH,EAAMI,EAAM,GAAGD,IAAQH,EAAMI,EAAM,GAAGD,EAAMsF,GAK1E,OAAOzF,GCjBLQ,GAAoB,CACtBJ,IAAK,EACLD,IAAK,GAQH8D,GAAe,SAACiB,EAAeV,GAGjC,MAAO,CAAE3E,KAFI2E,EAAM1E,OAAS,EAEbC,KADFmF,EAAQ,IAInBzE,GAAoB,SAACyE,EAAeV,GAKtC,IALkF,IAAAN,EAC3DD,GAAaiB,EAAOV,GAAnC3E,EAD0EqE,EAC1ErE,KAAME,EADoEmE,EACpEnE,KAERC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,IAAI5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAE7DC,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BH,EAAM,GAAGG,GAAOA,EAAM,EACtBH,EAAM,GAAGG,GAAO,IAGpB,IAAK,IAAIC,EAAM,EAAGA,EAAMP,EAAMO,IAC1BJ,EAAMI,GAAK,GAAKoE,EAAMpE,EAAM,GAC5BJ,EAAMI,GAAK,GAAK,IAKpB,OAFAJ,EAAM,GAAG,GAAK,IACdA,EAAMQ,GAAWJ,KAAKI,GAAWL,KAAO,IACjCH,GAGLU,GAAsB,SAACwE,EAAeV,GAMxC,IANoF,IAAAL,EAC7DF,GAAaiB,EAAOV,GAAnC3E,EAD4EsE,EAC5EtE,KAAME,EADsEoE,EACtEpE,KAERY,EAAUjB,GAAcwF,EAAOV,GAC/B5D,EAAcH,GAAkByE,EAAOV,GAEpCpE,EAAM,EAAGA,EAAMP,EAAMO,IAC1B,IAAK,IAAID,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BS,EAAYR,GAAKD,GAAOQ,EAAQP,EAAM,GAAGD,EAAM,GAGvD,OAAOS,GAGLC,GAAkB,SAACnN,EAAiCoN,GACtD,IAAK,IAAIX,EAAM,EAAGA,EAAMzM,EAAO,GAAGoM,QAAUK,GAAOW,EAAMX,IAAKA,IAC1DzM,EAAO,GAAGyM,GAAO7P,EAGrB,IAAK,IAAI8P,EAAM,EAAGA,EAAM1M,EAAOoM,QAAUM,GAAOU,EAAMV,IAAKA,IACvD1M,EAAO0M,GAAK,GAAK9P,GAInByQ,GAAoB,SAACmE,EAAeV,GAA+C,IAAAJ,EAC9DH,GAAaiB,EAAOV,GAAnC3E,EAD6EuE,EAC7EvE,KAAME,EADuEqE,EACvErE,KACRC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAErE,OADAW,GAAgBb,EAAOQ,IAChBR,GC/DEsB,GAAuB,CAChC3R,GAAI,GACJiF,MAAO,sBAGL2M,GAAoBrR,OAAAgN,EAAA,EAAAhN,CAAA,GACnBoR,GADmB,CAEtBE,aAAa,EACbC,aAAcrO,EAAasO,MAC3BC,QHdgB,uKGehBC,wBAAyBpC,KAGvBqC,GAAc3R,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBQ,YAAY,EACZC,YAAa3O,EAAasO,MAC1BM,YHfoB,0IGgBpBC,QHVgB,+EGWhBC,WHbsB,GGctBC,uBAAwB7C,KAGtB8C,GAAclS,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBe,SAAS,EACTC,SAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,WAAYxP,EAAWyP,KACvBC,mBAAoB7D,GACpB8D,sBAAuBvD,GACvBwD,uBAAwBtD,KAItBuD,GAAS,SAACC,GAAD,OAAiB1C,KAAK2C,MAAM3C,KAAKyC,SAAWC,GAAO,GAErD1F,GAAS,WAClB,IAAMiH,EAAkBvE,MAAM,GAAGC,KAAK,GAAG5Q,IAAI0T,IAC7C,OAAO9S,OAAAgN,EAAA,EAAAhN,CAAA,GACAkS,GACAP,GACAN,GAHP,CAII6B,aAAcC,GACdC,cAAeD,GAVT,EAU2CmB,GACjDxE,MAAOqD,GAXD,EAWiCmB,GACvCjB,YAAaF,GAZP,EAYuCmB,GAC7ChB,QDgB8D,EAAC,GAAM,GCfrEC,cDe8D,EAAC,GAAM,GAGtCnU,IAAI,iBAAO,CAAEoC,MAAO,UCjBnDgS,kBAAmBvE,MCzDdX,ID6DejB,KC7DK,4DAGpBkB,GAAqB,4DAGrBC,GAAqB,4DAGrBC,GAAsB,6DAGtBC,GAAe,sDAGfC,GAAgB,uDAGhBC,GAAa,2DAGbC,GAAkB,gECkBxB,SAASC,KACZ,MAAO,CAAEC,KAAMC,IAGZ,SAASC,GAAYC,GACxB,MAAO,CAAEH,KAAMC,GAAwBG,QAASD,GAW7C,SAASE,KACZ,MAAO,CAAEL,KAAMC,IAGZ,SAASK,KACZ,MAAO,CAAEN,KAAMC,IAGZ,SAASM,KACZ,MAAO,CAAEP,KAAMC,IAGZ,SAASO,KACZ,MAAO,CAAER,KAAMC,ICpEZ,aCAD+D,GAAMoC,OAAOK,iBA6BJhG,GAlBO,SAAC8E,GAInB,IAFA,IAAMxE,EAXQ,SAACwE,GAEf,IADA,IAAMxE,EAAoB,GACjBI,EAAM,EAAGA,EAAMoE,EAAM1E,OAAQM,IAClCJ,EAAMgF,KAAK/E,MAAMuE,EAAM1E,QAAQI,KAAK+C,KAGxC,OADAjD,EAAM,GAAG,GAAK,EACPA,EAKO2F,CAAUnB,GAEfrB,EAAI,EAAGA,EAAInD,EAAMF,OAAQqD,IAC9B,IAAK,IAAIsB,EAAI,EAAGA,EAAItB,EAAGsB,IAAK,CACxB,IAAM1M,EAAa,IAAN0M,EAAUxB,GAAMjD,EAAMyE,EAAI,GAAGtB,GACtCyC,GAAc,IAANnB,EAAU,EAAIzE,EAAMyE,EAAI,GAAGA,IAAM,EACzCA,EAAID,EAAMC,GAAKtB,IACfyC,EAAO3C,IAEXjD,EAAMyE,GAAGtB,GAAK5C,KAAKD,IAAIsF,EAAM7N,GAIrC,OAAOiI,GCtBLiD,GAAMoC,OAAOK,iBAEblF,GAAoB,CACtBJ,IAAK,EACLD,IAAK,GAcHM,GAAoB,SAAC+D,GACvB,IAAMxE,EAA+B,GAC/B6F,EAA4B,CAAI,SAAJpP,OAAAvG,OAAA4V,GAAA,EAAA5V,CAAgB+P,MAAMkB,KAAKlB,MAAMuE,EAAM1E,QAAQ7P,UAC3E8V,EAA0B,CAAI,SAAJtP,OAAAvG,OAAA4V,GAAA,EAAA5V,CAAgBsU,IAC1CwB,EAA2B,CAAI,SAAU,GAAdvP,OAAAvG,OAAA4V,GAAA,EAAA5V,CAAoB+P,MAAMuE,EAAM1E,OAAS,GAAGI,KAAK,MAIlF,OAHAF,EAAM,GAAK6F,EACX7F,EAAM,GAAK+F,EACX/F,EAAM,GAAKgG,EACJhG,GAGLU,GAAsB,SAAC8D,GAAD,OAAiC9E,GAAc8E,IAErE3D,GAAkB,SAACnN,EAAiCoN,EAAcd,GACpEtM,EAAO,GAAGoN,EAAMV,IAAM,GAAK9P,EAC3BoD,EAAO,GAAGoN,EAAMX,IAAM,GAAK7P,EAK3B,IAJA,IAAM2V,EAAYnF,EAAMV,IAAM,EACxB8F,EAAab,OAAOrF,EAAM,GAAGc,EAAMV,IAAM,IAEzC+F,EAAczS,EAAO,GAClByP,EAAI8C,EAAW9C,EAAIgD,EAAYrG,QAAUqD,EAAK8C,EAAYC,EAAa/C,IAC5EgD,EAAYhD,GAAK1S,EAGrBiD,EAAO,GAAGoN,EAAMX,IAAM,GAAKxP,GAGzBoQ,GAAoB,SAACyD,GAA+C,IAAAN,EAjCrD,SAACM,GAGlB,MAAO,CAAE3E,KAFI,EAEEE,KADFyE,EAAM1E,OAAS,GAgCLmE,CAAaO,GAA5B3E,EAD8DqE,EAC9DrE,KAAME,EADwDmE,EACxDnE,KACRC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAErE,OADAW,GAAgBb,EAAOQ,GAAYC,GAAkB+D,IAC9CxE,GAGLgB,GAAgB,SAACwD,GAGnB,IAFA,IAAM7D,EAAUjB,GAAc8E,GACxBhO,EAAM,IAAIyK,IACPb,EAAM,EAAGA,EAAMO,EAAQb,OAAQM,IACpC,IAAK,IAAID,EAAM,EAAGA,EAAMQ,EAAQP,GAAKN,OAAQK,IAAO,CAChD,IAAM6D,EAAQrD,EAAQP,GAAKD,GACvB6D,IAAUf,GACVzM,EAAI0K,IAAI,KAER1K,EAAI0K,IAAI8C,GAKpB,OADAxN,EAAIU,OAAO,GACJ+I,MAAMkB,KAAK3K,GAAK4K,QAGrBC,GAAsB,SAACmD,GACzB,OAAOxD,GAAcwD,GAAOlV,IAAI,iBAAO,CAAEoC,MAAO,WCrEvC4P,GAAuB,CAChC3R,GAAI,GACJiF,MAAO,wCAGL2M,GAAoBrR,OAAAgN,EAAA,EAAAhN,CAAA,GACnBoR,GADmB,CAEtBE,aAAa,EACbC,aAAcrO,EAAasO,MAC3BC,QHdmB,GGenBC,wBAAyBpC,KAGvBqC,GAAc3R,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBQ,YAAY,EACZC,YAAa3O,EAAasO,MAC1BM,YHpBoB,qQGqBpBC,QHbmB,GGcnBC,WHfsB,GGgBtBC,uBAAwB7C,KAGtB8C,GAAclS,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBe,SAAS,EACTC,SAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,WAAYxP,EAAWyP,KACvBC,mBAAoB7D,GACpB8D,sBAAuBvD,GACvBwD,uBAAwBtD,KAGtBuD,GAAS,SAACC,GAAD,OAAiB1C,KAAK2C,MAAM3C,KAAKyC,SAAWC,IAE9C1F,GAAS,WAClB,IAAMiH,EAAQvE,MAAM,GAAGC,KAAK,GAAG5Q,IAAI0T,IACnC,OAAO9S,OAAAgN,EAAA,EAAAhN,CAAA,GACAkS,GACAP,GACAN,GAHP,CAII6B,aAAcC,GACdC,cAAeD,GAA2BmB,GAC1CxE,MAAOqD,GAAyBmB,GAChCjB,YAAaF,GAAyBmB,GACtChB,QAASH,GAAqBmB,GAC9Bf,cAAeJ,GAA2BmB,GAC1Cd,kBAAmBvE,MCxDdX,ID4DejB,KC5DK,sDAGpBkB,GAAqB,sDAGrBC,GAAqB,sDAGrBC,GAAsB,uDAGtBC,GAAe,gDAGfC,GAAgB,iDAGhBC,GAAa,qDAGbC,GAAkB,0DCkBxB,SAASC,KACZ,MAAO,CAAEC,KAAMC,IAGZ,SAASC,GAAYC,GACxB,MAAO,CAAEH,KAAMC,GAAwBG,QAASD,GAW7C,SAASE,KACZ,MAAO,CAAEL,KAAMC,IAGZ,SAASK,KACZ,MAAO,CAAEN,KAAMC,IAGZ,SAASM,KACZ,MAAO,CAAEP,KAAMC,IAGZ,SAASO,KACZ,MAAO,CAAER,KAAMC,ICpEZ,ICoBQQ,GAlBO,SAAC8E,GAGnB,IAFA,IAAMxE,EAHQ,SAACwE,GAAD,OAAqBA,EAAMlV,IAAI,kBAAM2Q,MAAMuE,EAAM1E,QAAQI,KAAK,KAG9DyF,CAAUnB,GAEfrE,EAAM,EAAGA,EAAMqE,EAAM1E,OAAQK,IAClC,IAAK,IAAIC,EAAM,EAAGA,GAAOD,EAAKC,IAAO,CACjC,IAAMgG,EAAY5B,EAAMpE,EAAM,GACxBiG,EAAS7B,EAAMrE,GAEjBH,EAAMI,GAAKD,GADXiG,EAAYC,EACM9F,KAAK0C,IAAIjD,EAAMI,EAAM,GAAGD,GAAMH,EAAMI,EAAM,GAAGA,EAAM,GAAK,GAExDJ,EAAMI,EAAM,GAAGD,GAK7C,OAAOH,GCbLQ,GAAoB,CACtBJ,IAAK,EACLD,IAAK,GAYHM,GAAoB,SAAC+D,GACvB,IAAMxE,EAAoB,GAG1B,OAFAA,EAAM,GAAKwE,EAAMlV,IAAI,SAAAwU,GAAI,OAAIA,IAC7B9D,EAAM,GAAKC,MAAMuE,EAAM1E,QAAQI,KAAK,GAC7BF,GAGLU,GAAsB,SAAC8D,GACzB,OAAO9E,GAAc8E,IAGnB3D,GAAkB,SAACnN,EAAD4D,GAAgE,IAA5B8I,EAA4B9I,EAA5B8I,IAAKD,EAAuB7I,EAAvB6I,IAC7DzM,EAAO,GAAG0M,EAAM,GAAK3P,EACrBiD,EAAO,GAAG0M,EAAM,GAAK9P,EAErBoD,EAAO,GAAGyM,GAAO1P,EACjBiD,EAAO,GAAGyM,GAAO7P,GAGfyQ,GAAoB,SAACyD,GAA+C,IAAAN,EAvBrD,SAACM,GAClB,MAAO,CAAE3E,KAAM,EAAGE,KAAMyE,EAAM1E,QAuBPmE,CAAaO,GAA5B3E,EAD8DqE,EAC9DrE,KAAME,EADwDmE,EACxDnE,KACRC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAErE,OADAW,GAAgBb,EAAOQ,IAChBR,GAGLgB,GAAgB,SAACwD,GAGnB,IAFA,IAAM7D,EAAUjB,GAAc8E,GACxBhO,EAAM,IAAIyK,IACPb,EAAM,EAAGA,EAAMO,EAAQb,OAAQM,IACpC,IAAK,IAAID,EAAM,EAAGA,EAAMQ,EAAQP,GAAKN,OAAQK,IACzC3J,EAAI0K,IAAIP,EAAQP,GAAKD,IAG7B,OAAOF,MAAMkB,KAAK3K,GAAK4K,QAGrBC,GAAsB,SAACmD,GACzB,OAAOxD,GAAcwD,GAAOlV,IAAI,iBAAO,CAAEoC,MAAO,WCnDvC4P,GAAuB,CAChC3R,GAAI,GACJiF,MAAO,kCAGL2M,GAAoBrR,OAAAgN,EAAA,EAAAhN,CAAA,GACnBoR,GADmB,CAEtBE,aAAa,EACbC,aAAcrO,EAAasO,MAC3BC,QHdgB,oLGehBC,wBAAyBpC,KAGvBqC,GAAc3R,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBQ,YAAY,EACZC,YAAa3O,EAAasO,MAC1BM,YHboB,6FGcpBC,QHTgB,0HGUhBC,WHZsB,GGatBC,uBAAwB7C,KAGtB8C,GAAclS,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBe,SAAS,EACTC,SAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,WAAYxP,EAAWyP,KACvBC,mBAAoB7D,GACpB8D,sBAAuBvD,GACvBwD,uBAAwBtD,KAGtBuD,GAAS,SAACC,GAAD,OAAiB1C,KAAK2C,MAAM3C,KAAKyC,SAAWC,IAE9C1F,GAAS,WAElB,IAAMiH,EAAQvE,MAAM,GAAGC,KAAK,IAAI5Q,IAAI0T,IAEpC,OAAO9S,OAAAgN,EAAA,EAAAhN,CAAA,GACAkS,GACAP,GACAN,GAHP,CAII6B,aAAcC,GACdC,cAAeD,GAA2BmB,GAC1CxE,MAAOqD,GAAyBmB,GAChCjB,YAAaF,GAAyBmB,GACtChB,QAASH,GAAqBmB,GAC9Bf,cAAeJ,GAA2BmB,GAC1Cd,kBAAmBvE,MC1DdX,ID8DejB,KC9DK,wCAGpBkB,GAAqB,wCAGrBC,GAAqB,wCAGrBC,GAAsB,yCAGtBC,GAAe,kCAGfC,GAAgB,mCAGhBC,GAAa,uCAGbC,GAAkB,4CCkBxB,SAASC,KACZ,MAAO,CAAEC,KAAMC,IAGZ,SAASC,GAAYC,GACxB,MAAO,CAAEH,KAAMC,GAAwBG,QAASD,GAW7C,SAASE,KACZ,MAAO,CAAEL,KAAMC,IAGZ,SAASK,KACZ,MAAO,CAAEN,KAAMC,IAGZ,SAASM,KACZ,MAAO,CAAEP,KAAMC,IAGZ,SAASO,KACZ,MAAO,CAAER,KAAMC,ICpEZ,ICsBQQ,GApBO,SAACM,GAGnB,IAFA,IAAMgG,EAHS,SAAChG,GAAD,OAAmCA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,SAAAwU,GAAI,OAAIA,MAGxDwC,CAAWtG,GAE7BG,EAAM,EAAGA,EAAM6F,EAAO,GAAGlG,OAAQK,IACtC6F,EAAO,GAAG7F,GAAO6F,EAAO,GAAG7F,EAAM,GAAK6F,EAAO,GAAG7F,GAGpD,IAAK,IAAIC,EAAM,EAAGA,EAAM4F,EAAOlG,OAAQM,IACnC4F,EAAO5F,GAAK,GAAK4F,EAAO5F,EAAM,GAAG,GAAK4F,EAAO5F,GAAK,GAGtD,IAAK,IAAIA,EAAM,EAAGA,EAAM4F,EAAOlG,OAAQM,IACnC,IAAK,IAAID,EAAM,EAAGA,EAAM6F,EAAO5F,GAAKN,OAAQK,IACxC6F,EAAO5F,GAAKD,GAAO6F,EAAO5F,GAAKD,GAAOI,KAAKD,IAAI0F,EAAO5F,EAAM,GAAGD,GAAM6F,EAAO5F,GAAKD,EAAM,IAI/F,OAAO6F,GCfLxF,GAAoB,CAAEJ,IAAK,EAAGD,IAAK,GAanCM,GAAoB,SAACT,GACvB,OAAOA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,SAAAwU,GAAI,OAAIA,OAGtCpD,GAAsB,SAACV,GACzB,OAAON,GAAcM,IAGnBa,GAAkB,SAACnN,EAAD4D,GAAgE,IAA5B8I,EAA4B9I,EAA5B8I,IAAKD,EAAuB7I,EAAvB6I,IACvDkD,EAAS/S,EACT+V,EAAS5V,EACH,IAAR2P,GACA1M,EAAO,GAAGyM,EAAM,GAAKkD,EACrB3P,EAAO,GAAGyM,GAAOkG,GACF,IAARlG,GACPzM,EAAO0M,EAAM,GAAG,GAAKiD,EACrB3P,EAAO0M,GAAK,GAAKiG,IAEjB3S,EAAO0M,EAAM,GAAGD,GAAOkD,EACvB3P,EAAO0M,GAAKD,EAAM,GAAKkD,EACvB3P,EAAO0M,GAAKD,GAAOkG,IAIrBtF,GAAoB,SAACf,GAAiD,IAAAkE,EA9BvD,SAAClE,GAClB,IAAMH,EAAOG,EAAMF,OAEnB,MAAO,CAAED,OAAME,KADFC,EAAMH,EAAO,GAAGC,QA6BNmE,CAAajE,GAA5BH,EADgEqE,EAChErE,KAAME,EAD0DmE,EAC1DnE,KACRrM,EAAS,IAAIuM,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAEtE,OADAW,GAAgBnN,EAAQ8M,IACjB9M,GAGLsN,GAAgB,SAAChB,GAInB,IAHA,IAAMW,EAAUjB,GAAcM,GACxBxJ,EAAM,IAAIyK,IAEPd,EAAM,EAAGA,EAAMQ,EAAQ,GAAGb,OAAQK,IACvC3J,EAAI0K,IAAIP,EAAQ,GAAGR,IAGvB,IAAK,IAAIC,EAAM,EAAGA,EAAMO,EAAQb,OAAQM,IACpC5J,EAAI0K,IAAIP,EAAQP,GAAK,IAGzB,IAAK,IAAIA,EAAM,EAAGA,EAAMO,EAAQb,OAAQM,IACpC,IAAK,IAAID,EAAM,EAAGA,EAAMQ,EAAQP,GAAKN,OAAQK,IACzC3J,EAAI0K,IAAIP,EAAQP,GAAKD,IAI7B,OAAOF,MAAMkB,KAAK3K,GAAK4K,KAAK,SAAC1M,EAAG2P,GAAJ,OAAU3P,EAAI2P,KAGxChD,GAAsB,SAACrB,GACzB,OAAOgB,GAAchB,GAAO1Q,IAAI,iBAAO,CAAEoC,MAAO,WCjEvC4P,GAAuB,CAChC3R,GAAI,EACJiF,MAAO,oBAGL2M,GAAoBrR,OAAAgN,EAAA,EAAAhN,CAAA,GACnBoR,GADmB,CAEtBE,aAAa,EACbC,aAAcrO,EAAasO,MAC3BC,QHdgB,oGGehBC,wBAAyBpC,KAGvBqC,GAAc3R,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBQ,YAAY,EACZC,YAAa3O,EAAasO,MAC1BM,YHjBoB,yOGkBpBC,QHRmB,GGSnBC,WHVsB,GGWtBC,uBAAwB7C,KAGtB8C,GAAclS,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBe,SAAS,EACTC,SAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,WAAYxP,EAAWyP,KACvBC,mBAAoB7D,GACpB8D,sBAAuBvD,GACvBwD,uBAAwBtD,KAGtBuD,GAAS,SAACC,GAAD,OAAiB1C,KAAK2C,MAAM3C,KAAKyC,SAAWC,GAAO,GAUrD1F,GAAS,WAClB,IAAMyC,EAAQC,MARL,GAQiBC,KAAK,GAAG5Q,IAAI,kBALV2T,EAJd,EAKPhD,MAHE,GAGSC,KAAK+C,GAAK3T,IAAI0T,IADlB,IAAcC,IAM5B,OAAO/S,OAAAgN,EAAA,EAAAhN,CAAA,GACAkS,GACAP,GACAN,GAHP,CAII6B,aAAcC,GACdC,cAAeD,GAA2BrD,GAC1CA,MAAOqD,GAAyBrD,GAChCuD,YAAaF,GAAyBrD,GACtCwD,QAASH,GAAqBrD,GAC9ByD,cAAeJ,GAA2BrD,GAC1C0D,kBAAmBvE,MChEdX,IDoEejB,KCpEK,kCAGpBkB,GAAqB,kCAGrBC,GAAqB,kCAGrBC,GAAsB,mCAGtBC,GAAe,4BAGfC,GAAgB,6BAGhBC,GAAa,iCAGbC,GAAkB,sCCkBxB,SAASC,KACZ,MAAO,CAAEC,KAAMC,IAGZ,SAASC,GAAYC,GACxB,MAAO,CAAEH,KAAMC,GAAwBG,QAASD,GAW7C,SAASE,KACZ,MAAO,CAAEL,KAAMC,IAGZ,SAASK,KACZ,MAAO,CAAEN,KAAMC,IAGZ,SAASM,KACZ,MAAO,CAAEP,KAAMC,IAGZ,SAASO,KACZ,MAAO,CAAER,KAAMC,ICpEZ,ICyBQQ,GApBO,SAAC6G,EAAkBC,GAErC,IADA,IAAMxG,EANQ,SAACuG,GACf,IAAMzG,EAASyG,EAASzG,OACxB,OAAOG,MAAMH,GAAQI,MAAK,GAAO5Q,IAAI,kBAAM2Q,MAAMH,GAAQI,MAAK,KAIhDyF,CAAUY,GACfE,EAAM,EAAGA,GAAOF,EAASzG,OAAQ2G,IACtC,IAAK,IAAIC,EAAQ,EAAGC,EAAMD,EAAQD,EAAM,EAAGE,EAAMJ,EAASzG,OAAQ4G,IAAUC,IAAO,CAC/E,IAAMC,EAAML,EAASM,UAAUH,EAAOC,EAAM,GAC5C,GAAIH,EAAWM,SAASF,GACpB5G,EAAM0G,GAAOC,IAAO,OAGxB,IAAK,IAAIxD,EAAIuD,EAAOvD,EAAIwD,EAAKxD,IACzB,GAAInD,EAAM0G,GAAOvD,IAAMnD,EAAMmD,EAAI,GAAGwD,GAAM,CACtC3G,EAAM0G,GAAOC,IAAO,EACpB,OAKhB,OAAO3G,GClBLQ,GAAoB,CACtBJ,IAAK,EACLD,IAAK,GAQH8D,GAAe,SAACsC,EAAkBC,GAGpC,MAAO,CAAE3G,KAFI0G,EAASzG,OAAS,EAEhBC,KADFwG,EAASzG,OAAS,IAI7BW,GAAoB,SAAC8F,EAAkBC,GAKzC,IAL0F,IAAAtC,EACnED,GAAasC,GAA5B1G,EADkFqE,EAClFrE,KAAME,EAD4EmE,EAC5EnE,KAERC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,IAAI5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAE7DC,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BH,EAAM,GAAGG,GAAOoG,EAASlG,OAAOF,EAAM,GACtCH,EAAM,GAAGG,GAAOA,EAAM,EAG1B,IAAK,IAAIC,EAAM,EAAGA,EAAMP,EAAMO,IAC1BJ,EAAMI,GAAK,GAAKmG,EAASlG,OAAOD,EAAM,GACtCJ,EAAMI,GAAK,GAAKA,EAAM,EAK1B,OAFAJ,EAAM,GAAG,GAAK,EACdA,EAAMQ,GAAWJ,KAAKI,GAAWL,KAAO,IACjCH,GAGLU,GAAsB,SAAC6F,EAAkBC,GAM3C,IAN4F,IAAArC,EACrEF,GAAasC,GAA5B1G,EADoFsE,EACpFtE,KAAME,EAD8EoE,EAC9EpE,KAERY,EAAUjB,GAAc6G,EAAUC,GAClC5F,EAAcH,GAAkB8F,GAE7BnG,EAAM,EAAGA,EAAMP,EAAMO,IAC1B,IAAK,IAAID,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BS,EAAYR,GAAKD,GAAOQ,EAAQP,EAAM,GAAGD,EAAM,GAGvD,OAAOS,GAGLC,GAAkB,SAACnN,EAAD4D,GACpB,IADoF,IAA5B8I,EAA4B9I,EAA5B8I,IAAKD,EAAuB7I,EAAvB6I,IACpDgD,EAAI/C,EAAK+C,GAAKhD,EAAKgD,IACxBzP,EAAO,GAAGyP,GAAK1S,EACfiD,EAAO,GAAGyP,GAAK7S,EAEfoD,EAAOyP,GAAG,GAAK1S,EACfiD,EAAOyP,GAAG,GAAK7S,GAIjByQ,GAAoB,SAACwF,EAAkBC,GAAoD,IAAApC,EACtEH,GAAasC,GAA5B1G,EADqFuE,EACrFvE,KAAME,EAD+EqE,EAC/ErE,KACRC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAErE,OADAW,GAAgBb,EAAOQ,IAChBR,GC9DEsB,GAAuB,CAChC3R,GAAI,EACJiF,MAAO,cAGL2M,GAAoBrR,OAAAgN,EAAA,EAAAhN,CAAA,GACnBoR,GADmB,CAEtBE,aAAa,EACbC,aAAcrO,EAAasO,MAC3BC,QHfmB,GGgBnBC,wBAAyBpC,KAGvBqC,GAAc3R,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBQ,YAAY,EACZC,YAAa3O,EAAasO,MAC1BM,YHrBoB,4JGsBpBC,QHhBmB,GGiBnBC,WHlBsB,GGmBtBC,uBAAwB7C,KAGtB8C,GAAclS,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBe,SAAS,EACTC,SAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,WAAYxP,EAAWyP,KACvBC,mBAAoB7D,GACpB8D,sBAAuBvD,GACvBwD,uBAAwBtD,KAWtBsH,GAAO,SAACvC,EAAmBrB,EAAWsB,GACxC,IAAMuC,EAAOxC,EAAMrB,GACnBqB,EAAMrB,GAAKqB,EAAMC,GACjBD,EAAMC,GAAKuC,GAGTC,GAAgB,SAACC,GAAD,OAdD,SAAC1C,GAClB,IAAK,IAAIrB,EAAIqB,EAAM1E,OAAS,EAAGqD,EAAI,EAAGA,GAAK,EAAG,CAC1C,IAAMsB,EAAIlE,KAAK2C,MAAM3C,KAAKyC,UAAYG,EAAI,IAC1C4D,GAAKvC,EAAOrB,EAAGsB,GAEnB,OAAOD,EASoC2C,CAAaD,EAAI9P,MAAM,KAAKnG,KAAK,KAG1EuV,GAAa,CAAC,IAAK,IAAK,KAAM,MAAO,MAE9BjJ,GAAS,WAClB,IAAMgJ,EAAWU,GAJP,UAKV,OAAO/W,OAAAgN,EAAA,EAAAhN,CAAA,GACAkS,GACAP,GACAN,GAHP,CAII6B,aAAcC,GACdC,cAAeD,GAA2BkD,EAAUC,IACpDxG,MAAOqD,GAAyBkD,GAChChD,YAAaF,GAAyBkD,GACtC/C,QDDqE,EAAC,GAAM,GCE5EC,cDFqE,EAAC,GAAM,GAGrCnU,IAAI,iBAAO,CAAEoC,MAAO,UCA3DgS,kBAAmBvE,GACnBW,OAAQ,EACR0G,iBC5EKhI,IDgFejB,KChFK,gDAGpBkB,GAAqB,gDAGrBC,GAAqB,gDAGrBC,GAAsB,iDAGtBC,GAAe,0CAGfC,GAAgB,2CAGhBC,GAAa,+CAGbC,GAAkB,oDCkBxB,SAASC,KACZ,MAAO,CAAEC,KAAMC,IAGZ,SAASC,GAAYC,GACxB,MAAO,CAAEH,KAAMC,GAAwBG,QAASD,GAW7C,SAASE,KACZ,MAAO,CAAEL,KAAMC,IAGZ,SAASK,KACZ,MAAO,CAAEN,KAAMC,IAGZ,SAASM,KACZ,MAAO,CAAEP,KAAMC,IAGZ,SAASO,KACZ,MAAO,CAAER,KAAMC,ICpEZ,ICwDQQ,GAhDO,SAAC8E,GAEnB,IAAM4C,EAAmC,CAAC5C,EAAM,IAC1C6C,EAAkC,CAAC7C,EAAM,IACzC8C,EAA8B,CAAC,GAC/BC,EAA4B,CAAC,GAE/BC,EAAY,EAChBhD,EAAMiD,QAAQ,SAACzD,EAAO0D,GAElB,GADA1D,EAAQqB,OAAOrB,KACX0D,EAAQ,GAAZ,CAF4B,IAKvBC,EAA+B,EAAnBC,EAAsB,EAAXjB,EAAc,EACtCD,EAAQY,EAAOI,EAAQ,GACvB1D,EAAQA,EAAQqB,OAAO+B,EAAYM,EAAQ,KAC3CC,EAAa3D,EACbwD,EAAYE,GAEZC,EAAa3D,EAAQqB,OAAO+B,EAAYM,EAAQ,IAEhDC,EAAaN,EAAWK,EAAQ,IAChCE,EAAYD,EACZhB,EAAMe,EACNhB,EAAQc,IAERI,EAAYvC,OAAOgC,EAAWK,EAAQ,IACtCf,EAAMtB,OAAOkC,EAAKG,EAAQ,KAE9BN,EAAYpC,KAAK2C,GACjBN,EAAWrC,KAAK4C,GAChBL,EAAKvC,KAAK2B,GACVW,EAAOtC,KAAK0B,MAGhB,IAAM1G,EAA+B,GAUrC,OATAsH,EAAOO,QAAQ,UACfN,EAAKM,QAAQ,QACbT,EAAYS,QAAQ,eACpBR,EAAWQ,QAAQ,cAEnB7H,EAAMgF,KAAKsC,GACXtH,EAAMgF,KAAKuC,GACXvH,EAAMgF,KAAKoC,GACXpH,EAAMgF,KAAKqC,GACJrH,GCjDLQ,GAAoB,CAAEJ,IAAK,EAAGD,IAAK,GAOnC8D,GAAe,SAACO,GAGlB,MAAO,CAAE3E,KAFI,EAEEE,KADFyE,EAAM1E,OAAS,IAI1BW,GAAoB,SAAC+D,GAA2C,IAAAN,EAC3CD,GAAaO,GAA5B3E,EAD0DqE,EAC1DrE,KAAME,EADoDmE,EACpDnE,KAERC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,IAAI5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MACtEF,EAAM,GAAG,GAAK,QACdA,EAAM,GAAG,GAAK,QACdA,EAAM,GAAG,GAAK,UACdA,EAAM,GAAG,GAAK,UAEd,IAAK,IAAIG,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BH,EAAM,GAAGG,GAAOA,EAAM,EACtBH,EAAM,GAAGG,GAAOqE,EAAMrE,EAAM,GAIhC,OADAH,EAAMQ,GAAWJ,KAAKI,GAAWL,KAAO,IACjCH,GAGLU,GAAsB,SAAC8D,GAAD,OAA4C9E,GAAc8E,IAMhFzD,GAAoB,SAACyD,GAA+C,IAAAL,EAC/CF,GAAaO,GAA5B3E,EAD8DsE,EAC9DtE,KAAME,EADwDoE,EACxDpE,KAERC,GADeU,GAAoB8D,GAC3B,IAAIvE,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,OAErE,OAAOF,GAGLgB,GAAgB,SAACwD,GAGnB,IAFA,IAAMhO,EAAM,IAAIyK,IACVN,EAAUjB,GAAc8E,GACrBrE,EAAM,EAAGA,EAAMqE,EAAM1E,OAAQK,IAAO,CACzC,IAAMwH,EAAatC,OAAO1E,EAAQ,GAAGR,EAAM,IACrCyH,EAAYvC,OAAO1E,EAAQ,GAAGR,EAAM,IAC1C3J,EAAI0K,IAAIyG,GACRnR,EAAI0K,IAAI0G,GAEZ,OAAO3H,MAAMkB,KAAK3K,GAAK4K,KAAM,SAAC1M,EAAG2P,GAAJ,OAAU3P,EAAI2P,KCrDlC/C,GAAuB,CAChC3R,GAAI,GACJiF,MAAK,yCAGH2M,GAAoBrR,OAAAgN,EAAA,EAAAhN,CAAA,GACnBoR,GADmB,CAEtBE,aAAa,EACbC,aAAcrO,EAAasO,MAC3BC,QHdgB,4LGehBC,wBAAyBpC,KAGvBqC,GAAc3R,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBQ,YAAY,EACZC,YAAa3O,EAAasO,MAC1BM,YHfoB,4KGgBpBC,QHVmB,GGWnBC,WHZsB,GGatBC,uBAAwB7C,KAGtB8C,GAAclS,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBe,SAAS,EACTC,SAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,WAAYxP,EAAWyP,KACvBC,mBAAoB7D,GACpB8D,sBAAuBvD,GACvBwD,uBAAwBtD,KAKtBuD,GAAS,SAACC,GAAD,OAAiB1C,KAAK2C,MAAM3C,KAAKyC,SAAWC,GAAO,GAC5D6E,GAAY,SAAC7E,GAAD,OAA+B,IAAdD,GAAO,GAAWA,GAAOC,GAAO,EAAID,GAAOC,IAEjE1F,GAAS,WAClB,IDayBiH,ECbnBpF,EAAOa,MALJ,GAKgBC,KANX,IAM2B5Q,IAAIwY,IAC7C,OAAO5X,OAAAgN,EAAA,EAAAhN,CAAA,GACAkS,GACAP,GACAN,GAHP,CAII6B,aAAcC,GACdC,cAAeD,GAA2BjE,GAC1CY,MAAOqD,GAAyBjE,GAChCmE,YAAaF,GAAyBjE,GACtCoE,QAASH,GAAqBjE,GAC9BqE,eDGqBe,ECHqBpF,EDIvC4B,GAAcwD,GAAOlV,IAAI,iBAAO,CAAEoC,MAAO,WCH5CgS,kBAAmBvE,MC3DdX,ID+DejB,KC/DK,4CAGpBkB,GAAqB,4CAGrBC,GAAqB,4CAGrBC,GAAsB,6CAGtBC,GAAe,sCAGfC,GAAgB,uCAGhBC,GAAa,2CAGbC,GAAkB,gDCkBxB,SAASC,KACZ,MAAO,CAAEC,KAAMC,IAGZ,SAASC,GAAYC,GACxB,MAAO,CAAEH,KAAMC,GAAwBG,QAASD,GAW7C,SAASE,KACZ,MAAO,CAAEL,KAAMC,IAGZ,SAASK,KACZ,MAAO,CAAEN,KAAMC,IAGZ,SAASM,KACZ,MAAO,CAAEP,KAAMC,IAGZ,SAASO,KACZ,MAAO,CAAER,KAAMC,ICpEZ,IC4BQQ,GAnBO,SAACqI,EAAcC,GAEjC,IADA,IAAMhI,EAVQ,SAAC+H,EAAcC,GAC7B,IAAMhI,EAAQ,GACdA,EAAMgF,KAAK/E,MAAMkB,KAAKlB,MAAM+H,EAAS,GAAG/X,SACxC,IAAK,IAAImQ,EAAM,EAAGA,EAAM2H,EAAM3H,GAAO,EACjCJ,EAAMgF,KAAK/E,MAAM+H,EAAS,GAAG9H,KAAK,IAEtC,OAAOF,EAIO2F,CAAUoC,EAAMC,GACrB5H,EAAM,EAAGA,EAAMJ,EAAMF,OAAQM,GAAO,EACzC,IAAK,IAAID,EAAM,EAAGA,EAAMH,EAAMI,GAAKN,OAAQK,GAAO,EAC9C,GAAIC,EAAM,EAAID,EACVH,EAAMI,GAAKD,GAAOH,EAAMI,EAAM,GAAGD,OAC9B,CAEH,IADA,IAAIG,EAAM0H,EACDC,EAAI,EAAGA,GAAK9H,EAAK8H,GAAK,EAAG,CAC9B,IAAMhF,EAAM1C,KAAK0C,IAAIjD,EAAMI,EAAM,GAAG6H,EAAI,GAAIjI,EAAMI,GAAKD,EAAM8H,IAC7D3H,EAAMC,KAAKD,IAAIA,EAAK2C,GAExBjD,EAAMI,GAAKD,GAAO,EAAIG,EAIlC,OAAON,GCrBLQ,GAAoB,CAAEJ,IAAK,EAAGD,IAAK,GAOnC8D,GAAe,SAAC8D,EAAcC,GAGhC,MAAO,CAAEnI,KAFIkI,EAAO,EAELhI,KADFiI,EAAS,IAIpBvH,GAAoB,SAACsH,EAAcC,GAA0C,IAAA9D,EACxDD,GAAa8D,EAAMC,GAAlCnI,EADuEqE,EACvErE,KAAME,EADiEmE,EACjEnE,KACRC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MACrEF,EAAM,GAAG,GAAK,SACd,IAAK,IAAIG,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BH,EAAM,GAAGG,GAAOA,EAAM,EACtBH,EAAM,GAAGG,GAAOA,EAAM,EAE1B,IAAK,IAAIC,EAAM,EAAGA,EAAMP,EAAMO,IAC1BJ,EAAMI,GAAK,GAAKA,EAChBJ,EAAMI,GAAK,GAAK,EAEpB,OAAOJ,GAGLU,GAAsB,SAACqH,EAAcC,GAMvC,IANiF,IAAA7D,EAC1DF,GAAa8D,EAAMC,GAAlCnI,EADyEsE,EACzEtE,KAAME,EADmEoE,EACnEpE,KAERY,EAAUjB,GAAcqI,EAAMC,GAC9BpH,EAAcH,GAAkBsH,EAAMC,GAEnC5H,EAAM,EAAGA,EAAMP,EAAMO,IAC1B,IAAK,IAAID,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BS,EAAYR,GAAKD,GAAOQ,EAAQP,EAAM,GAAGD,EAAM,GAGvD,OAAOS,GAGLC,GAAkB,SAACnN,EAAiCoN,GACtDpN,EAAOoN,EAAMV,KAAKU,EAAMX,KAAO7P,GAG7ByQ,GAAoB,SAACgH,EAAcC,GAA8C,IAAA5D,EAC5DH,GAAa8D,EAAMC,GAAlCnI,EAD2EuE,EAC3EvE,KAAME,EADqEqE,EACrErE,KACRC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAErE,OADAW,GAAgBb,EAAOQ,IAChBR,GAGLgB,GAAgB,SAAC+G,EAAcC,GAGjC,IAFA,IAAMrH,EAAUjB,GAAcqI,EAAMC,GAC9BxR,EAAM,IAAIyK,IACPb,EAAM,EAAGA,EAAMO,EAAQb,OAAQM,IACpC,IAAK,IAAID,EAAM,EAAGA,EAAMQ,EAAQP,GAAKN,OAAQK,IACzC3J,EAAI0K,IAAIP,EAAQP,GAAKD,IAG7B,OAAOF,MAAMkB,KAAK3K,GAAK4K,QC5DdE,GAAuB,CAChC3R,GAAI,GACJiF,MAAO,wBAGL2M,GAAoBrR,OAAAgN,EAAA,EAAAhN,CAAA,GACnBoR,GADmB,CAEtBE,aAAa,EACbC,aAAcrO,EAAasO,MAC3BC,QHdgB,0UGehBC,wBAAyBpC,KAGvBqC,GAAc3R,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBQ,YAAY,EACZC,YAAa3O,EAAasO,MAC1BM,YHRoB,2jBGSpBC,QHWmB,GGVnBC,WHSsB,GGRtBC,uBAAwB7C,KAGtB8C,GAAclS,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBe,SAAS,EACTC,SAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,WAAYxP,EAAWyP,KACvBC,mBAAoB7D,GACpB8D,sBAAuBvD,GACvBwD,uBAAwBtD,KAMflC,GAAS,WAClB,OAAOrN,OAAAgN,EAAA,EAAAhN,CAAA,GACAkS,GACAP,GACAN,GAHP,CAII6B,aAAcC,GACdC,cAAeD,GATV,EACA,GASLrD,MAAOqD,GAVF,EACA,GAULE,YAAaF,GAXR,EACA,GAWLG,QAASH,GAZJ,EACA,GAYLI,eDaqBsE,EC1BhB,ED0B8BC,ECzB9B,ED0BFhH,GAAc+G,EAAMC,GAAQ1Y,IAAI,iBAAO,CAAEoC,MAAO,WCbnDgS,kBAAmBvE,KDYC,IAAC4I,EAAcC,GEpE9BxJ,ID4DejB,KC5DK,qDAGpBkB,GAAqB,qDAGrBC,GAAqB,qDAGrBC,GAAsB,sDAGtBC,GAAe,+CAGfC,GAAgB,gDAGhBC,GAAa,oDAGbC,GAAkB,yDCkBxB,SAASC,KACZ,MAAO,CAAEC,KAAMC,IAGZ,SAASC,GAAYC,GACxB,MAAO,CAAEH,KAAMC,GAAwBG,QAASD,GAW7C,SAASE,KACZ,MAAO,CAAEL,KAAMC,IAGZ,SAASK,KACZ,MAAO,CAAEN,KAAMC,IAGZ,SAASM,KACZ,MAAO,CAAEP,KAAMC,IAGZ,SAASO,KACZ,MAAO,CAAER,KAAMC,ICpEZ,ICKD+E,GAAe,SAACiE,GAGlB,MAAO,CAAErI,KAFIqI,EAASpI,OAEPC,KADFmI,EAASpI,SA4BpBJ,GAAgB,SAACwI,GAKnB,IALqD,IAAA/D,EAC9BF,GAAaiE,GAA5BrI,EAD6CsE,EAC7CtE,KAAME,EADuCoE,EACvCpE,KAERC,EAAQC,MAAMJ,GAAMK,MAAK,GAAO5Q,IAAI,kBAAM2Q,MAAMF,GAAMG,MAAK,KAExDiD,EAAI,EAAGA,EAAInD,EAAMF,OAAQqD,IAC9BnD,EAAMmD,GAAGA,IAAK,EAGlB,IAAK,IAAIA,EAAI,EAAGA,EAAInD,EAAMF,OAAS,EAAGqD,IAC9B+E,EAAS7H,OAAO8C,KAAO+E,EAAS7H,OAAO8C,EAAI,GAC3CnD,EAAMmD,GAAGA,EAAI,IAAK,EAElBnD,EAAMmD,GAAGA,EAAI,IAAK,EAI1B,IAAK,IAAIsD,EAAM,EAAGA,GAAOzG,EAAMF,OAAQ2G,IACnC,IAAK,IAAItD,EAAI,EAAGA,EAAIsD,GAAOzG,EAAMF,OAAQqD,IAAK,CAC1C,IAAMgF,EAAQD,EAAS7H,OAAO8C,GACxBwD,EAAMuB,EAAS7H,OAAO8C,EAAIsD,EAAM,GAElCzG,EAAMmD,GAAGA,EAAIsD,EAAM,GADnB0B,IAAUxB,GACc3G,EAAMmD,EAAI,GAAGA,EAAIsD,EAAM,GAO3D,OAAOzG,GC5DLQ,GAAoB,CACtBJ,IAAK,EACLD,IAAK,GAQH8D,GAAe,SAACiE,GAGlB,MAAO,CAAErI,KAFIqI,EAASpI,OAAS,EAEhBC,KADFmI,EAASpI,OAAS,IAI7BW,GAAoB,SAACyH,GAKvB,IALoE,IAAAhE,EAC7CD,GAAaiE,GAA5BrI,EAD4DqE,EAC5DrE,KAAME,EADsDmE,EACtDnE,KAERC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,IAAI5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAE7DC,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BH,EAAM,GAAGG,GAAOA,EAAM,EACtBH,EAAM,GAAGG,GAAO+H,EAAS7H,OAAOF,EAAM,GAG1C,IAAK,IAAIC,EAAM,EAAGA,EAAMP,EAAMO,IAC1BJ,EAAMI,GAAK,GAAKA,EAAM,EACtBJ,EAAMI,GAAK,GAAK8H,EAAS7H,OAAOD,EAAM,GAK1C,OAFAJ,EAAM,GAAG,GAAK,IACdA,EAAMQ,GAAWJ,KAAKI,GAAWL,KAAO,IACjCH,GAGLoI,GAA2B,SAACF,GAK9B,IAJA,IACMG,ED/Be,SAACH,EAAkBI,GAKxC,IALgF,IAAApE,EACzDD,GAAaiE,GAA5BrI,EADwEqE,EACxErE,KAAME,EADkEmE,EAClEnE,KACRC,EAAQC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM2Q,MAAMF,GAAMG,KAAK,KAEzD+C,EAAM,EACDE,EAAI,EAAGA,EAAInD,EAAMF,OAAS,EAAGqD,GAAK,EACnC+E,EAAS7H,OAAO8C,KAAO+E,EAAS7H,OAAO8C,EAAI,KAC3CF,EAAM,GAEVjD,EAAMmD,GAAGA,EAAI,GAAKF,EAEtB,IAAK,IAAIwD,EAAM,EAAGA,GAAOzG,EAAMF,OAAQ2G,GAAO,EAC1C,IAAK,IAAItD,EAAI,EAAGA,EAAIsD,GAAOzG,EAAMF,OAAQqD,GAAK,EAC5B+E,EAAS7H,OAAO8C,KAClB+E,EAAS7H,OAAO8C,EAAIsD,EAAM,IACjB6B,EAAWnF,GAAGA,EAAIsD,EAAM,KACzCxD,EAAM1C,KAAK0C,IAAIA,EAAK,EAAIjD,EAAMmD,EAAI,GAAGA,EAAIsD,EAAM,KAEnDzG,EAAMmD,GAAGA,EAAIsD,EAAM,GAAKxD,EAGhC,OAAOjD,ECUYuI,CAAiBL,EADpBxI,GAAcwI,IADiC/D,EAGxCF,GAAaiE,GAA5BrI,EAHuDsE,EAGvDtE,KAAME,EAHiDoE,EAGjDpE,KACRC,EAAoBC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM2Q,MAAMF,GAAMG,KAAK,KAChEE,EAAM,EAAGA,EAAMP,EAAMO,IAC1B,IAAK,IAAID,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BH,EAAMI,GAAKD,GAAOkI,EAAWjI,EAAM,GAAGD,EAAM,GAGpD,OAAOH,GAGLU,GAAsB,SAACwH,GAMzB,IANsE,IAAA9D,EAC/CH,GAAaiE,GAA5BrI,EAD8DuE,EAC9DvE,KAAME,EADwDqE,EACxDrE,KAERY,EAAUjB,GAAcwI,GACxBtH,EAAcH,GAAkByH,GAE7B9H,EAAM,EAAGA,EAAMP,EAAMO,IAC1B,IAAK,IAAID,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BS,EAAYR,GAAKD,GAAOQ,EAAQP,EAAM,GAAGD,EAAM,GAIvD,OAAOS,GAGLC,GAAkB,SACpBnN,EADoB4D,EAGpBkR,EACAxI,GAEA,IADO,IAHLI,EAGK9I,EAHL8I,IAAKD,EAGA7I,EAHA6I,IAIEgD,EAAI/C,EAAK+C,GAAKhD,EAAKgD,IACxBzP,EAAO,GAAGyP,GAAK1S,EACfiD,EAAO,GAAGyP,GAAK7S,EAEfoD,EAAOyP,GAAG,GAAK1S,EACfiD,EAAOyP,GAAG,GAAK7S,EAGnBoD,EAAO,GAAG,GAAKpD,EAEXkY,EAAa,GAAKxI,EAAM,GAAGI,KAASJ,EAAM,GAAGI,EAAMoI,EAAa,KAChE9U,EAAO,GAAGyM,GAAOxP,EACjB+C,EAAO,GAAG0M,GAAOzP,EAEjB+C,EAAO0M,EAAM,GAAGA,EAAMoI,EAAa,GAAK7X,GAGzB,IAAf6X,GAAoBxI,EAAM,GAAGI,KAASJ,EAAM,GAAGI,EAAMoI,EAAa,KAClE9U,EAAO,GAAGyM,GAAOxP,EACjB+C,EAAO,GAAG0M,GAAOzP,EAEjB+C,EAAOyM,GAAK,GAAKxP,EACjB+C,EAAO0M,GAAK,GAAKzP,IAInBoQ,GAAoB,SAACmH,GAAgD,IAAAO,EAChDxE,GAAaiE,GAA5BrI,EAD+D4I,EAC/D5I,KAAME,EADyD0I,EACzD1I,KACRC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAErE,OADAW,GAAgBb,EAAOQ,GAAY,EAAG,IAC/BR,GClGEsB,GAAuB,CAChC3R,GAAI,GACJiF,MAAO,iCAGL2M,GAAoBrR,OAAAgN,EAAA,EAAAhN,CAAA,GACnBoR,GADmB,CAEtBE,aAAa,EACbC,aAAcrO,EAAasO,MAC3BC,QHfgB,moBGgBhBC,wBAAyBpC,KAGvBqC,GAAc3R,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBQ,YAAY,EACZC,YAAa3O,EAAasO,MAC1BM,YHIoB,sEGHpBC,QHQgB,+DGPhBC,WHKsB,GGJtBC,uBAAwB7C,KAGtB8C,GAAclS,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBe,SAAS,EACTC,SAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,WAAYxP,EAAWyP,KACvBC,mBAAoB7D,GACpB8D,sBAAuBvD,GACvBwD,uBAAwBtD,KAItBuD,GAAS,SAACkF,GACZ,IAAMR,EAAQnH,KAAK2C,MAAM3C,KAAKyC,SAAWkF,EAASpI,QAClD,OAAOoI,EAAS7H,OAAOqH,IAGdnK,GAAS,WAClB,IACMmL,EAAQzI,MARL,GAQiBC,KADT,QACwB5Q,IAAI0T,IAAQ/R,KAAK,IAE1D,OAAOf,OAAAgN,EAAA,EAAAhN,CAAA,GACAkS,GACAP,GACAN,GAHP,CAII6B,aAAcC,GACdC,cAAeD,GAA2BqF,GAC1C1I,MAAOqD,GAAyBqF,GAChCnF,YAAaF,GAAyBqF,GACtClF,QD8C+B,EAAC,GAAM,GC7CtCC,cD6C+B,EAAC,GAAM,GAE6BnU,IAAI,iBAAO,CAAEoC,MAAO,UC9CvFgS,kBAAmBvE,GACnBW,OAAQ,EACRuI,WAAYhF,GAAgCqF,MCjEvClK,IDqEejB,KCrEK,uDAGpBkB,GAAqB,uDAGrBC,GAAqB,uDAGrBC,GAAsB,wDAGtBC,GAAe,iDAGfC,GAAgB,kDAGhBC,GAAa,sDAGbC,GAAkB,2DCkBxB,SAASC,KACZ,MAAO,CAAEC,KAAMC,IAGZ,SAASC,GAAYC,GACxB,MAAO,CAAEH,KAAMC,GAAwBG,QAASD,GAW7C,SAASE,KACZ,MAAO,CAAEL,KAAMC,IAGZ,SAASK,KACZ,MAAO,CAAEN,KAAMC,IAGZ,SAASM,KACZ,MAAO,CAAEP,KAAMC,IAGZ,SAASO,KACZ,MAAO,CAAER,KAAMC,ICpEZ,ICoCQQ,GApCO,SAACwI,GAOnB,IANA,IAAMrI,EAAOqI,EAASpI,OAAS,EACzBC,EAAOmI,EAASpI,OAAS,EAEzBE,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,KAG5DiD,EAAI,EAAGA,EAAInD,EAAMF,OAAQqD,GAAK,EACnCnD,EAAMmD,GAAGA,GAAK,EAIlB,IAAK,IAAIA,EAAI,EAAGA,EAAInD,EAAMF,OAAS,EAAGqD,GAAK,EACnC+E,EAAS7H,OAAO8C,KAAO+E,EAAS7H,OAAO8C,EAAI,GAC3CnD,EAAMmD,GAAGA,EAAI,GAAK,EAElBnD,EAAMmD,GAAGA,EAAI,GAAK,EAK1B,IAAK,IAAIsD,EAAM,EAAGA,GAAOzG,EAAMF,OAAQ2G,GAAO,EAC1C,IAAK,IAAItD,EAAI,EAAGA,EAAIsD,GAAOzG,EAAMF,OAAQqD,GAAK,EAAG,CAC7C,IAAMgF,EAAQD,EAAS7H,OAAO8C,GACxBwD,EAAMuB,EAAS7H,OAAO8C,EAAIsD,EAAM,GAElCzG,EAAMmD,GAAGA,EAAIsD,EAAM,GADnB0B,IAAUxB,EACc,EAAI3G,EAAMmD,EAAI,GAAGA,EAAIsD,EAAM,GAE3BlG,KAAK0C,IAAIjD,EAAMmD,GAAGA,EAAIsD,EAAM,GAAIzG,EAAMmD,EAAI,GAAGA,EAAIsD,EAAM,IAK3F,OAAOzG,GC7BLQ,GAAoB,CACtBJ,IAAK,EACLD,IAAK,GAQH8D,GAAe,SAACiE,GAGlB,MAAO,CAAErI,KAFIqI,EAASpI,OAAS,EAEhBC,KADFmI,EAASpI,OAAS,IAI7BW,GAAoB,SAACyH,GAKvB,IALmE,IAAAhE,EAC5CD,GAAaiE,GAA5BrI,EAD2DqE,EAC3DrE,KAAME,EADqDmE,EACrDnE,KAERC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,IAAI5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAE7DC,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BH,EAAM,GAAGG,GAAOA,EAAM,EACtBH,EAAM,GAAGG,GAAO+H,EAAS7H,OAAOF,EAAM,GAG1C,IAAK,IAAIC,EAAM,EAAGA,EAAMP,EAAMO,IAC1BJ,EAAMI,GAAK,GAAKA,EAAM,EACtBJ,EAAMI,GAAK,GAAK8H,EAAS7H,OAAOD,EAAM,GAI1C,OADAJ,EAAMQ,GAAWJ,KAAKI,GAAWL,KAAO,IACjCH,GAGLU,GAAsB,SAACwH,GAMzB,IANqE,IAAA/D,EAC9CF,GAAaiE,GAA5BrI,EAD6DsE,EAC7DtE,KAAME,EADuDoE,EACvDpE,KAERY,EAAUjB,GAAcwI,GACxBtH,EAAcH,GAAkByH,GAE7B9H,EAAM,EAAGA,EAAMP,EAAMO,IAC1B,IAAK,IAAID,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BS,EAAYR,GAAKD,GAAOQ,EAAQP,EAAM,GAAGD,EAAM,GAIvD,OAAOS,GAGLC,GAAkB,SACpBnN,EADoB4D,EAGpBkR,EACAxI,GACA,IADuC,IAFrCI,EAEqC9I,EAFrC8I,IAAKD,EAEgC7I,EAFhC6I,IAGEgD,EAAI/C,EAAK+C,GAAKhD,EAAKgD,IACxBzP,EAAO,GAAGyP,GAAK1S,EACfiD,EAAO,GAAGyP,GAAK7S,EAEfoD,EAAOyP,GAAG,GAAK1S,EACfiD,EAAOyP,GAAG,GAAK7S,EAGfkY,EAAa,IACTxI,EAAM,GAAGI,KAASJ,EAAM,GAAGI,EAAMoI,EAAa,IAC9C9U,EAAO,GAAGyM,GAAOxP,EACjB+C,EAAO,GAAG0M,GAAOzP,EAEjB+C,EAAO0M,EAAM,GAAGA,EAAMoI,EAAa,GAAK7X,IAExC+C,EAAO0M,GAAKA,EAAMoI,EAAa,GAAK7X,EACpC+C,EAAO0M,EAAM,GAAGA,EAAMoI,EAAa,GAAK7X,IAI7B,IAAf6X,GAAoBxI,EAAM,GAAGI,KAASJ,EAAM,GAAGI,EAAMoI,EAAa,KAClE9U,EAAO,GAAGyM,GAAOxP,EACjB+C,EAAO,GAAG0M,GAAOzP,EAEjB+C,EAAOyM,GAAK,GAAKxP,EACjB+C,EAAO0M,GAAK,GAAKzP,IAInBoQ,GAAoB,SAACmH,GAAgD,IAAA9D,EAChDH,GAAaiE,GAA5BrI,EAD+DuE,EAC/DvE,KAAME,EADyDqE,EACzDrE,KACRC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAErE,OADAW,GAAgBb,EAAOQ,GAAY,EAAG,IAC/BR,GAGLgB,GAAgB,SAACkH,GAGnB,IAFA,IAAMvH,EAAUjB,GAAcwI,GACxB1R,EAAM,IAAIyK,IACPb,EAAM,EAAGA,EAAMO,EAAQb,OAAQM,IACpC,IAAK,IAAID,EAAM,EAAGA,EAAMQ,EAAQP,GAAKN,OAAQK,IACzC3J,EAAI0K,IAAIP,EAAQP,GAAKD,IAI7B,OADA3J,EAAIU,OAAO,GACJ+I,MAAMkB,KAAK3K,GAAK4K,QAGrBC,GAAsB,SAAC6G,GACzB,OAAOlH,GAAckH,GAAU5Y,IAAI,iBAAO,CAAEoC,MAAO,WCvG1C4P,GAAuB,CAChC3R,GAAI,GACJiF,MAAO,mCAGL2M,GAAoBrR,OAAAgN,EAAA,EAAAhN,CAAA,GACnBoR,GADmB,CAEtBE,aAAa,EACbC,aAAcrO,EAAasO,MAC3BC,QHdgB,wsBGehBC,wBAAyBpC,KAGvBqC,GAAc3R,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBQ,YAAY,EACZC,YAAa3O,EAAasO,MAC1BM,YHMoB,oEGLpBC,QHSgB,oFGRhBC,WHMsB,GGLtBC,uBAAwB7C,KAGtB8C,GAAclS,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBe,SAAS,EACTC,SAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,WAAYxP,EAAWyP,KACvBC,mBAAoB7D,GACpB8D,sBAAuBvD,GACvBwD,uBAAwBtD,KAItBuD,GAAS,SAACkF,GACZ,IAAMR,EAAQnH,KAAK2C,MAAM3C,KAAKyC,SAAWkF,EAASpI,QAClD,OAAOoI,EAAS7H,OAAOqH,IAGdnK,GAAS,WAClB,IACMmL,EAAQzI,MARL,GAQiBC,KADT,QACwB5Q,IAAI0T,IAAQ/R,KAAK,IAE1D,OAAOf,OAAAgN,EAAA,EAAAhN,CAAA,GACAkS,GACAP,GACAN,GAHP,CAII6B,aAAcC,GACdC,cAAeD,GAA2BqF,GAC1C1I,MAAOqD,GAAyBqF,GAChCnF,YAAaF,GAAyBqF,GACtClF,QAASH,GAAqBqF,GAC9BjF,cAAeJ,GAA2BqF,GAC1ChF,kBAAmBvE,GACnBW,OAAQ,KC/DHtB,IDmEejB,KCnEK,+CAGpBkB,GAAqB,+CAGrBC,GAAqB,+CAGrBC,GAAsB,gDAGtBC,GAAe,yCAGfC,GAAgB,0CAGhBC,GAAa,8CAGbC,GAAkB,mDCkBxB,SAASC,KACZ,MAAO,CAAEC,KAAMC,IAGZ,SAASC,GAAYC,GACxB,MAAO,CAAEH,KAAMC,GAAwBG,QAASD,GAW7C,SAASE,KACZ,MAAO,CAAEL,KAAMC,IAGZ,SAASK,KACZ,MAAO,CAAEN,KAAMC,IAGZ,SAASM,KACZ,MAAO,CAAEP,KAAMC,IAGZ,SAASO,KACZ,MAAO,CAAER,KAAMC,ICpEZ,ICKD+E,GAAe,SAACiE,GAGlB,MAAO,CAAErI,KAFIqI,EAASpI,OAEPC,KADFmI,EAASpI,SAmEXJ,GAlCO,SAACwI,GAMnB,IALA,IAAMS,EA9B2B,SAACT,GAKlC,IALoE,IAAAhE,EAC7CD,GAAaiE,GAA5BrI,EAD4DqE,EAC5DrE,KAAME,EADsDmE,EACtDnE,KACRC,EAAQC,MAAMJ,GAAMK,MAAK,GAAO5Q,IAAI,kBAAM2Q,MAAMF,GAAMG,MAAK,KAGxDiD,EAAI,EAAGA,EAAInD,EAAMF,OAAQqD,GAAK,EACnCnD,EAAMmD,GAAGA,IAAK,EAIlB,IAAK,IAAIA,EAAI,EAAGA,EAAInD,EAAMF,OAAS,EAAGqD,GAAK,EACnC+E,EAAS7H,OAAO8C,KAAO+E,EAAS7H,OAAO8C,EAAI,KAC3CnD,EAAMmD,GAAGA,EAAI,IAAK,GAK1B,IAAK,IAAIsD,EAAM,EAAGA,GAAOzG,EAAMF,OAAQ2G,GAAO,EAC1C,IAAK,IAAItD,EAAI,EAAGA,EAAIsD,GAAOzG,EAAMF,OAAQqD,GAAK,EAC5B+E,EAAS7H,OAAO8C,KAClB+E,EAAS7H,OAAO8C,EAAIsD,EAAM,KAElCzG,EAAMmD,GAAGA,EAAIsD,EAAM,GAAKzG,EAAMmD,EAAI,GAAGA,EAAIsD,EAAM,IAI3D,OAAOzG,EAIc4I,CAA6BV,GADE/D,EAE7BF,GAAaiE,GAA5BrI,EAF4CsE,EAE5CtE,KAAME,EAFsCoE,EAEtCpE,KACRC,EAAQC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM2Q,MAAMF,GAAMG,KAAK,KAGpDiD,EAAI,EAAGA,EAAInD,EAAMF,OAAQqD,GAAK,EACnCnD,EAAMmD,GAAGA,GAAK,EAIlB,IAAK,IAAIA,EAAI,EAAGA,EAAInD,EAAMF,OAAS,EAAGqD,GAAK,EACnC+E,EAAS7H,OAAO8C,KAAO+E,EAAS7H,OAAO8C,EAAI,KAC3CnD,EAAMmD,GAAGA,EAAI,GAAK,GAK1B,IAAK,IAAIsD,EAAM,EAAGA,GAAOzG,EAAMF,OAAQ2G,GAAO,EAC1C,IAAK,IAAIrG,EAAM,EAAGA,EAAMqG,GAAOzG,EAAMF,OAAQM,GAAO,EAAG,CACnD,IAAMD,EAAMC,EAAMqG,EAAM,EACxB,IAAKkC,EAAavI,GAAKD,GAAM,CAEzB,IADA,IAAIG,EAAM4H,EAASpI,OACV+I,EAAIzI,EAAKyI,EAAI1I,EAAK0I,GAAK,EAC5BvI,EAAMC,KAAKD,IAAIA,EAAKN,EAAMI,GAAKyI,GAAK7I,EAAM6I,EAAI,GAAG1I,IAErDH,EAAMI,GAAKD,GAAOG,EAAM,GAKpC,OAAON,GCnELQ,GAAoB,CACtBJ,IAAK,EACLD,IAAK,GAQH8D,GAAe,SAACiE,GAGlB,MAAO,CAAErI,KAFIqI,EAASpI,OAAS,EAEhBC,KADFmI,EAASpI,OAAS,IAI7BW,GAAoB,SAACyH,GAKvB,IALmE,IAAAhE,EAC5CD,GAAaiE,GAA5BrI,EAD2DqE,EAC3DrE,KAAME,EADqDmE,EACrDnE,KAERC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,IAAI5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAE7DC,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BH,EAAM,GAAGG,GAAOA,EAAM,EACtBH,EAAM,GAAGG,GAAO+H,EAAS7H,OAAOF,EAAM,GAG1C,IAAK,IAAIC,EAAM,EAAGA,EAAMP,EAAMO,IAC1BJ,EAAMI,GAAK,GAAKA,EAAM,EACtBJ,EAAMI,GAAK,GAAK8H,EAAS7H,OAAOD,EAAM,GAI1C,OADAJ,EAAMQ,GAAWJ,KAAKI,GAAWL,KAAO,IACjCH,GAGLU,GAAsB,SAACwH,GAMzB,IANqE,IAAA/D,EAC9CF,GAAaiE,GAA5BrI,EAD6DsE,EAC7DtE,KAAME,EADuDoE,EACvDpE,KAERY,EAAUjB,GAAcwI,GACxBtH,EAAcH,GAAkByH,GAE7B9H,EAAM,EAAGA,EAAMP,EAAMO,IAC1B,IAAK,IAAID,EAAM,EAAGA,EAAMJ,EAAMI,IAC1BS,EAAYR,GAAKD,GAAOQ,EAAQP,EAAM,GAAGD,EAAM,GAIvD,OAAOS,GAGLC,GAAkB,SACpBnN,EADoB4D,EAGpBkR,EACAxI,GAEA,IADO,IAHLI,EAGK9I,EAHL8I,IAAKD,EAGA7I,EAHA6I,IAIEgD,EAAI/C,EAAK+C,GAAKhD,EAAKgD,IACxBzP,EAAO,GAAGyP,GAAK1S,EACfiD,EAAO,GAAGyP,GAAK7S,EAEfoD,EAAOyP,GAAG,GAAK1S,EACfiD,EAAOyP,GAAG,GAAK7S,EAGA,IAAfkY,GAAoBxI,EAAM,GAAGI,KAASJ,EAAM,GAAGI,EAAMoI,EAAa,KAClE9U,EAAO,GAAGyM,GAAOxP,EACjB+C,EAAO,GAAG0M,GAAOzP,EAEjB+C,EAAOyM,GAAK,GAAKxP,EACjB+C,EAAO0M,GAAK,GAAKzP,IAInBoQ,GAAoB,SAACmH,GAAgD,IAAA9D,EAChDH,GAAaiE,GAA5BrI,EAD+DuE,EAC/DvE,KAAME,EADyDqE,EACzDrE,KACRC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAErE,OADAW,GAAgBb,EAAOQ,GAAY,EAAG,IAC/BR,GAGLgB,GAAgB,SAACkH,GAGnB,IAFA,IAAMvH,EAAUjB,GAAcwI,GACxB1R,EAAM,IAAIyK,IACPb,EAAM,EAAGA,EAAMO,EAAQb,OAAQM,IACpC,IAAK,IAAID,EAAM,EAAGA,EAAMQ,EAAQP,GAAKN,OAAQK,IACzC3J,EAAI0K,IAAIP,EAAQP,GAAKD,IAG7B,OAAOF,MAAMkB,KAAK3K,GAAK4K,QAGrBC,GAAsB,SAAC6G,GACzB,OAAOlH,GAAckH,GAAU5Y,IAAI,iBAAO,CAAEoC,MAAO,WC1F1C4P,GAAuB,CAChC3R,GAAI,GACJiF,MAAO,2BAGL2M,GAAoBrR,OAAAgN,EAAA,EAAAhN,CAAA,GACnBoR,GADmB,CAEtBE,aAAa,EACbC,aAAcrO,EAAasO,MAC3BC,QHfgB,yOGgBhBC,wBAAyBpC,KAGvBqC,GAAc3R,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBQ,YAAY,EACZC,YAAa3O,EAAasO,MAC1BM,YHboB,oKGcpBC,QHPgB,2CGQhBC,WHVsB,GGWtBC,uBAAwB7C,KAGtB8C,GAAclS,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBe,SAAS,EACTC,SAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,WAAYxP,EAAWyP,KACvBC,mBAAoB7D,GACpB8D,sBAAuBvD,GACvBwD,uBAAwBtD,KAItBuD,GAAS,SAACkF,GACZ,IAAMR,EAAQnH,KAAK2C,MAAM3C,KAAKyC,SAAWkF,EAASpI,QAClD,OAAOoI,EAAS7H,OAAOqH,IAGdnK,GAAS,WAClB,IACMmL,EAAQzI,MARL,GAQiBC,KADT,QACwB5Q,IAAI0T,IAAQ/R,KAAK,IAE1D,OAAOf,OAAAgN,EAAA,EAAAhN,CAAA,GACAkS,GACAP,GACAN,GAHP,CAII6B,aAAcC,GACdC,cAAeD,GAA2BqF,GAC1C1I,MAAOqD,GAAyBqF,GAChCnF,YAAaF,GAAyBqF,GACtClF,QAASH,GAAqBqF,GAC9BjF,cAAeJ,GAA2BqF,GAC1ChF,kBAAmBvE,GACnBW,OAAQ,KChEHtB,IDoEejB,KCpEK,oCAGpBkB,GAAqB,oCAGrBC,GAAqB,oCAGrBC,GAAsB,qCAGtBC,GAAe,8BAGfC,GAAgB,+BAGhBC,GAAa,mCAGbC,GAAkB,wCCkBxB,SAASC,KACZ,MAAO,CAAEC,KAAMC,IAGZ,SAASC,GAAYC,GACxB,MAAO,CAAEH,KAAMC,GAAwBG,QAASD,GAW7C,SAASE,KACZ,MAAO,CAAEL,KAAMC,IAGZ,SAASK,KACZ,MAAO,CAAEN,KAAMC,IAGZ,SAASM,KACZ,MAAO,CAAEP,KAAMC,IAGZ,SAASO,KACZ,MAAO,CAAER,KAAMC,ICpEZ,ICsBF4J,GCPUpJ,GAfO,SAACqJ,GACnB,IAAM/I,EAAQ+I,EAAOzZ,IAAI,SAAA0Z,GAAK,OAAIA,IAElC,GAAIhJ,EAAMF,OAAS,EACf,OAAOE,EAGXA,EAAM,GAAKO,KAAK0C,IAAIjD,EAAM,GAAIA,EAAM,IACpC,IAAK,IAAImD,EAAI,EAAGA,EAAInD,EAAMF,OAAQqD,IAC9BnD,EAAMmD,GAAK5C,KAAK0C,IAAIjD,EAAMmD,GAAKnD,EAAMmD,EAAI,GAAInD,EAAMmD,EAAI,IAG3D,OAAOnD,GCRLQ,GAAoB,CACtBJ,IAAK,EACLD,IAAK,GAcHM,GAAoB,SAACsI,GACvB,IAAM/I,EAAQ,GAEd,OADAA,EAAM,GAAK+I,EAAOzZ,IAAI,SAAA0Z,GAAK,OAAIA,IACxBhJ,GAGLU,GAAsB,SAACqI,GACzB,IAAM/I,EAAQ,GAEd,OADAA,EAAM,GAAKN,GAAcqJ,GAClB/I,GAGLa,GAAkB,SAACnN,EAAD4D,GAAgE,IAA5B8I,EAA4B9I,EAA5B8I,IAAKD,EAAuB7I,EAAvB6I,IAC7DzM,EAAO0M,GAAKD,GAAO7P,EACnBoD,EAAO0M,GAAKD,EAAM,GAAK1P,EACnB0P,EAAM,IACNzM,EAAO0M,GAAKD,EAAM,GAAK7P,IAIzByQ,GAAoB,SAACgI,GAAgD,IAAA7E,EA1BtD,SAAC6E,GAGlB,MAAO,CAAElJ,KAFI,EAEEE,KADFgJ,EAAOjJ,QAyBGmE,CAAa8E,GAA5BlJ,EAD+DqE,EAC/DrE,KAAME,EADyDmE,EACzDnE,KACRC,EAAQ,IAAIC,MAAMJ,GAAMK,KAAK,GAAG5Q,IAAI,kBAAM,IAAI2Q,MAAMF,GAAMG,KAAK,MAErE,OADAW,GAAgBb,EAAOQ,IAChBR,GAGLgB,GAAgB,SAAC+H,GAGnB,IAFA,IAAMpI,EAAUjB,GAAcqJ,GACxBvS,EAAM,IAAIyK,IACPkC,EAAI,EAAGA,EAAIxC,EAAQb,OAAQqD,IAChC3M,EAAI0K,IAAIP,EAAQwC,IAEpB,OAAOlD,MAAMkB,KAAK3K,GAAK4K,KAAK,SAAC1M,EAAG2P,GAAJ,OAAU3P,EAAI2P,KAGxChD,GAAsB,SAAC0H,GACzB,OAAO/H,GAAc+H,GAAQzZ,IAAI,iBAAO,CAAEoC,MAAO,WCpDxC4P,GAAuB,CAChC3R,GAAI,GACJiF,MAAO,gBAGL2M,GAAoBrR,OAAAgN,EAAA,EAAAhN,CAAA,GACnBoR,GADmB,CAEtBE,aAAa,EACbC,aAAcrO,EAAasO,MAC3BC,QJdgB,kNIehBC,wBAAyBpC,KAGvBqC,GAAc3R,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBQ,YAAY,EACZC,YAAa3O,EAAasO,MAC1BM,YJVoB,ghBIWpBC,QJCgB,wVIAhBC,WJDsB,GIEtBC,uBAAwB7C,KAGtB8C,GAAclS,OAAAgN,EAAA,EAAAhN,CAAA,GACboR,GADa,CAEhBe,SAAS,EACTC,SAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,WAAYxP,EAAWyP,KACvBC,mBAAoB7D,GACpB8D,sBAAuBvD,GACvBwD,uBAAwBtD,KAGtBuD,GAAS,SAACC,GAAD,OAAiB1C,KAAK2C,MAAM3C,KAAKyC,SAAWC,GAAO,GAErD1F,GAAS,WAClB,IAAMwL,EAAS9I,MAAM,GAAGC,KAAK,IAAI5Q,IAAI0T,IACrC,OAAO9S,OAAAgN,EAAA,EAAAhN,CAAA,GACAkS,GACAP,GACAN,GAHP,CAII6B,aAAcC,GACdC,cAAeD,GAA2B0F,GAC1C/I,MAAOqD,GAAyB0F,GAChCxF,YAAaF,GAAyB0F,GACtCvF,QAASH,GAAqB0F,GAC9BtF,cAAeJ,GAA2B0F,GAC1CrF,kBAAmBvE,MAIC5B,eHtCvBuL,kgCAwBE,II/BKG,GJ0DGH,MKtEFI,GAAiB5T,wBAAgC,ICAjD6T,GAAe7T,wBAAmC,ICsCzD8T,GAAiC,CACnCC,eAAgB,OAChB3X,MAAO,UACPG,MAAO,OACPyX,cAAe,UACfrX,UAAW,QAGTsX,GAAiC,CACnCC,WAAY,EACZC,cAAe,EACfxW,YAAa,EACbb,aAAc,EACdP,MAAO,OACPI,UAAW,QAGTyX,GAAmC,CACrC5X,aAAc,EACdD,MAAO,OACPI,UAAW,QAGT0X,GAAiC,CACnCjY,MAAO,QACPU,aAAc,GAGZwX,GAAiC,CACnClY,MAAO,OACPU,aAAc,GASZyX,GAAgB,SAAAvS,GAClB,OAD2CA,EAAtBwS,KACPvW,EAAA,cAACwW,GAAArV,EAAD,CAAMsV,MAAOL,KAAgBpW,EAAA,cAACA,EAAA,SAAD,OAOzC0W,GAAgB,SAAApR,GAClB,OAD+CA,EAA1BqR,QACJ3W,EAAA,cAAC4W,GAAAzV,EAAD,CAAMsV,MAAOJ,KAAgBrW,EAAA,cAACA,EAAA,SAAD,OAG5C6W,GAAa,SAACC,EAAmBC,GAApB,OAAsCpa,OAAOD,KAAK6Y,IAAOxZ,IAAI,SAAAib,GAE5E,IAAMzU,EAAQgT,GAAcyB,GACtB5a,EPjDW,SAACmG,GAClB,OAAQA,GACJ,KAAKgT,GAAM0B,cAAe,OAAOC,GAAa9a,GAC9C,KAAKmZ,GAAM4B,iBAAkB,OAAOC,GAAgBhb,GACpD,KAAKmZ,GAAM8B,mBAAoB,OAAOC,GAAkBlb,GACxD,KAAKmZ,GAAMgC,kBAAmB,OAAOC,GAAiBpb,GACtD,KAAKmZ,GAAMkC,mBAAoB,OAAOC,GAAkBtb,GACxD,KAAKmZ,GAAMoC,0BAA2B,OAAOC,GAAuBxb,GACpE,KAAKmZ,GAAMsC,0BAA2B,OAAOC,GAAsB1b,GACnE,KAAKmZ,GAAMwC,eAAgB,OAAOC,GAAc5b,GAChD,KAAKmZ,GAAM0C,2BAA4B,OAAOC,GAAyB9b,GACvE,KAAKmZ,GAAM4C,yBAA0B,OAAOC,GAAuBhc,GACnE,KAAKmZ,GAAM8C,mBAAoB,OAAOC,GAAiBlc,GACvD,KAAKmZ,GAAMgD,qBAAsB,OAAOC,GAAyBpc,GACjE,KAAKmZ,GAAMkD,+BAAgC,OAAOC,GAA6Btc,GAC/E,KAAKmZ,GAAMoD,iBAAkB,OAAOC,GAAexc,GACnD,KAAKmZ,GAAMsD,WAAY,OAAOC,GAAU1c,GACxC,KAAKmZ,GAAMwD,yBAA0B,OAAOC,GAAuB5c,GACnE,KAAKmZ,GAAM0D,oBAAqB,OAAOC,GAAmB9c,GAC1D,KAAKmZ,GAAM4D,8BAA+B,OAAOC,GAA4Bhd,GAC7E,KAAKmZ,GAAM8D,gCAAiC,OAAOC,GAA8Bld,GACjF,KAAKmZ,GAAMgE,wBAAyB,OAAOC,GAAuBpd,GAClE,KAAKmZ,GAAMkE,aAAc,OAAOC,GAAYtd,GAC5C,QAAS,OAAQ,GO0BVud,CAAMpX,GACXgU,EAAOO,EAAQ/a,IAAI,SAAA6d,GAAM,OAAIA,EAAOC,cAAatG,SAASnX,GAC1D0d,EAAW/C,EAAMgD,OAAO,SAAAC,GAAI,OAAIA,EAAKrD,UAAS5a,IAAI,SAAAie,GAAI,OAAIA,EAAKH,cAAatG,SAASnX,GAC3F,OACI4D,EAAA,cAACsG,GAAA,EAAD,CAAU0Q,IAAKA,EAAKP,MAAOT,IACvBhW,EAAA,cAACia,GAAA,EAAD,CAAQxD,MAAON,IACXnW,EAAA,cAACka,GAAD,CAAe3D,KAAMA,IACrBvW,EAAA,cAAC4B,EAAA,EAAD,CAAMC,GAAE,eAAAqB,OAAiBX,GAAQkU,MAAOZ,IA5BxC,SAACtT,GAAD,OAAkBA,EAAKsB,MAAM,IAAI9H,IAAI,SAAAoe,GAAE,MAAY,MAAPA,EAAc,IAAMA,IAAIzc,KAAK,IA6BpE0c,CAAQpD,IAEbhX,EAAA,cAACqa,GAAD,CAAe1D,QAASmD,SAwCzBrZ,eA3HA,SAACnD,GAAD,OAAkB8C,YAAa,CAC1Cka,YAAa,CACTzQ,SAAU,WACVvL,M1IhB2B,K0IkB/Bic,aAAa5d,OAAAgN,EAAA,EAAAhN,CAAA,CACT6B,QAAS,OACTgc,WAAY,SACZC,eAAgB,WAChBC,QAAS,SACNpd,EAAMqd,OAAOC,YAiHTna,CAlCC,SAACV,GAAiB,IACtBW,EAA+BX,EAA/BW,QAASE,EAAsBb,EAAtBa,KAAMia,EAAgB9a,EAAhB8a,YAEjB/D,EADe/O,aAAmC4N,IAC3BmB,SAAW,GAElCC,EADahP,aAAsC6N,IAChCmB,OAAS,GAClC,OACI/W,EAAA,cAAC8a,GAAA,EAAD,CACIpZ,QAAQ,aACRqZ,OAAO,OACPna,KAAMA,EACNF,QAAS,CACLnB,MAAOmB,EAAQ4Z,cAGnBta,EAAA,qBACIgb,SAAU,EACVC,KAAK,SACLha,QAAS4Z,EACTK,UAAWL,GAEX7a,EAAA,qBAAKc,UAAWJ,EAAQ6Z,cACpBva,EAAA,cAACa,EAAA,EAAD,CAAYI,QAAS4Z,GACjB7a,EAAA,cAACmb,GAAAha,EAAD,QAGRnB,EAAA,cAACmG,GAAA,EAAD,MACAnG,EAAA,cAACoG,GAAA,EAAD,KAAOyQ,GAAWC,EAASC,8LCvIrCqE,GAAa,yDAENC,GAAI,eAAAtX,EAAApH,OAAAqH,GAAA,EAAArH,CAAAsH,GAAA9C,EAAA+C,KAAG,SAAAC,EAAO0V,GAAP,IAAAzV,EAAAkX,EAAAjX,EAAA,OAAAJ,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACVL,EAAc3B,KADJ,CAAA8B,EAAAE,KAAA,eAAAF,EAAAG,OAAA,SAGL,MAHK,cAMV4W,EAAW,CAAEzB,YAAaA,GAE1BxV,EAA2B,CAC7BM,OAAQ,OACR5B,QAASqB,EACTtF,KAAMyc,KAAKC,UAAUF,IAXT/W,EAAAE,KAAA,EAcHG,MAAMwW,GAAY/W,GAC1BQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAIA,IAhBF,cAAAR,EAAAG,OAAA,SAAAH,EAAAS,MAAA,wBAAAT,EAAAU,SAAAd,MAAH,gBAAAuB,GAAA,OAAA3B,EAAAmB,MAAAC,KAAAC,YAAA,GAmBJqW,GAAU,eAAAnW,EAAA3I,OAAAqH,GAAA,EAAArH,CAAAsH,GAAA9C,EAAA+C,KAAG,SAAAqB,IAAA,IAAAnB,EAAAC,EAAA,OAAAJ,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,UAChBL,EAAc3B,KADE,CAAAgD,EAAAhB,KAAA,eAAAgB,EAAAf,OAAA,SAGX,IAHW,cAMhBL,EAA2B,CAC7BM,OAAQ,MACR5B,QAASqB,GARSqB,EAAAhB,KAAA,EAWTG,MAAMwW,GAAY/W,GAC1BQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAIA,IAbI,cAAAU,EAAAf,OAAA,SAAAe,EAAAT,MAAA,wBAAAS,EAAAR,SAAAM,MAAH,yBAAAD,EAAAJ,MAAAC,KAAAC,YAAA,GCuCjBsW,GAAQ,SAAA3X,GAAkD,IAA/C+K,EAA+C/K,EAA/C+K,QAAS+K,EAAsC9V,EAAtC8V,YAAaxY,EAAyB0C,EAAzB1C,MAAyBsa,EAE5B5T,aAAmC4N,IAA3DmB,EAFoD6E,EAEpD7E,QAAS8E,EAF2CD,EAE3CC,WAEXC,IAAgB/E,GAAUA,EAAQ/a,IAAI,SAAA6d,GAAM,OAAIA,EAAOC,cAAatG,SAASsG,GA8BnF,OAbI/K,GAAW8M,GAAc9E,IAAY+E,GACrCC,GAAWjC,GAAahV,KAAK,SAAAkX,GACpBA,GAGLN,KAAa5W,KAAK,SAAAmX,GACVlF,GAAWkF,GArBA,SAACC,EAA0BD,GAClD,GAAKJ,EAAL,CAGA,IAAMM,EAAaD,EAAelgB,IAAI,SAAA6d,GAAM,OAAIA,EAAOC,cAAahM,OAC9DsO,EAASH,EAAWjgB,IAAI,SAAA6d,GAAM,OAAIA,EAAOC,cAAahM,OAE/C0N,KAAKC,UAAUU,KACfX,KAAKC,UAAUW,IAGxBP,EAAWI,IAWHI,CAAmBtF,EAASkF,OAOxChc,EAAA,cAACA,EAAA,SAAD,KACKqB,EAAMgb,gBAKbC,GAAc,SAAAhX,GAAA,IAAGjE,EAAHiE,EAAGjE,MAAOyN,EAAVxJ,EAAUwJ,QAAS1S,EAAnBkJ,EAAmBlJ,GAAImT,EAAvBjK,EAAuBiK,sBAAuBC,EAA9ClK,EAA8CkK,uBAAwBF,EAAtEhK,EAAsEgK,mBAAtE,OAChBtP,EAAA,qBAAKyW,MAAO,CAAE8F,UAAW,OAAQrd,SAAU,SACvCc,EAAA,cAACwc,GAAD,CAAO3C,YAAazd,EAAI0S,QAASA,EAASzN,MAAOA,IACjDrB,EAAA,cAACyc,GAAA,EAAD,CAASpb,MAAM,cAAcqb,UAAU,OACnC1c,EAAA,cAACa,EAAA,EAAD,CAAYI,QAASsO,GAChBT,EAAU9O,EAAA,cAAC2c,GAAAxb,EAAD,CAAWsV,MAAO,CAAEtY,MAAO,WAAgB6B,EAAA,cAAC4c,GAAAzb,EAAD,CAAgBsV,MAAO,CAAEtY,MAAO,QAG9F6B,EAAA,cAACyc,GAAA,EAAD,CAASpb,MAAM,OAAOqb,UAAU,OAC5B1c,EAAA,cAACa,EAAA,EAAD,CAAYI,QAASuO,GACjBxP,EAAA,cAAC6c,GAAA1b,EAAD,QAIRnB,EAAA,cAACyc,GAAA,EAAD,CAASpb,MAAM,UAAUqb,UAAU,OAC/B1c,EAAA,cAACa,EAAA,EAAD,CAAYI,QAASqO,GACjBtP,EAAA,cAAC8c,GAAA3b,EAAD,UAMV4b,GAAgB,SAAAC,GAAA,IAAGhO,EAAHgO,EAAGhO,MAAOC,EAAV+N,EAAU/N,OAAQvO,EAAlBsc,EAAkBtc,QAAlB,OAClBV,EAAA,yBACIA,EAAA,cAACid,GAAA,EAAD,CACIxG,MAAO,CAAEyG,OAAQ,QACjBxb,QAAQ,WACRyb,KAAMnd,EAAA,cAACod,GAAAjc,EAAD,MACNkc,MAAK,UAAAna,OAAY8L,GACjBlO,UAAWJ,EAAQlB,SAEvBQ,EAAA,cAACid,GAAA,EAAD,CACIxG,MAAO,CAAEyG,OAAQ,QACjBxb,QAAQ,WACRyb,KAAMnd,EAAA,cAACsd,GAAAnc,EAAD,MACNkc,MAAK,WAAAna,OAAa+L,GAClBnO,UAAWJ,EAAQlB,WAYhBiB,eAnIA,SAACnD,GAAD,OAAkB8C,YAAa,CAC1C/B,KAAM,CACFqL,SAAU,EACVgR,QAAS,GAEb6C,YAAa,CACTpf,MAAOqf,IAAM,KACb3T,SAAU,WACV4T,OAAQ,GAEZje,OAAQ,CACJgB,YAAalD,EAAM8L,QAAQ,GAC3BsU,aAAcpgB,EAAM8L,QAAQ,OAuHrB3I,CAPA,SAACV,GAAD,OACXC,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,cAAC2d,GAAgB5d,GACjBC,EAAA,cAAC4d,GAAkB7d,8CChIrB8d,GAAY,SAAC7G,EAAa/F,EAA+B6M,GAC3D,GAAI7M,EAAM1E,SAAWuR,EAAUvR,OAC3B,MAAM,IAAI/P,MAAM,8DAEpB,OACIwD,EAAA,cAAC+d,GAAA,EAAD,CAAU/G,IAAKA,GACV/F,EAAMlV,IAAI,SAAC8P,EAAMsI,GAAP,OAZJ,SAAC6C,EAAanL,EAAuB4K,GAArC,OACfzW,EAAA,cAACge,GAAA,EAAD,CAAWtD,QAAQ,OAAO1D,IAAKA,EAAKP,MAAOA,GACtC5K,GAU+BoS,CAAW9J,EAAOtI,EAAMiS,EAAU3J,QAmB3D1T,eAnCA,SAACnD,GAAD,OAAkB8C,YAAa,KAmC/BK,CAdM,SAACV,GAAiB,IAC3B0M,EAAuB1M,EAAvB0M,MAAOuD,EAAgBjQ,EAAhBiQ,YACf,GAAIvD,EAAMF,SAAWyD,EAAYzD,OAC7B,MAAM,IAAI/P,MAAM,+DAEpB,OACIwD,EAAA,cAACke,GAAA,EAAD,KACIle,EAAA,cAACme,GAAA,EAAD,KACK1R,EAAM1Q,IAAI,SAAC8Q,EAAKsH,GAAN,OAAgB0J,GAAU1J,EAAOtH,EAAKmD,EAAYmE,oBCY9D1T,eA3CM,SAACnD,GAAD,OAAkB8C,YAAa,CAChDge,KAAM,CACFC,UAAW,CACPC,OAAQ,UACRthB,gBAAiBM,EAAMK,QAAQC,QAAQ2gB,OAE3CjV,SAAU,GACVkV,UAAW,GACXtf,SAAU,GACVwb,QAAS,MAkCFja,CAZC,SAACV,GAAiB,IACtBkQ,EAA2BlQ,EAA3BkQ,QAASC,EAAkBnQ,EAAlBmQ,cACjB,GAAID,EAAQ1D,SAAW2D,EAAc3D,OACjC,MAAM,IAAI/P,MAAM,wDAEpB,OACIwD,EAAA,cAACye,GAAA,EAAD,CAAaC,KAAK,QAAQ1H,IAAK,EAAGP,MAAO,CAAE8F,UAAW,SACjDtM,EAAQlU,IAAI,SAAC8P,EAAMsI,GAAP,OAjBZ,SACT6C,EACAnL,EACA4K,EAHS1S,GAAA,IAIPoM,EAJOpM,EAIPoM,kBAAmBzP,EAJZqD,EAIYrD,QAJZ,OAKLV,EAAA,cAACia,GAAA,EAAD,CAAQyE,KAAK,QAAQ1H,IAAKA,EAAKP,MAAOA,EAAOxV,QAAS,kBAAMkP,EAAkBtE,IAAO/K,UAAWJ,EAAQ0d,MAT5F,SAACvS,GACjB,MAAwB,mBAATA,EAHK,SAACA,GAAD,OAA2BA,EAAO,OAAS,QAG1B8S,CAAgB9S,GAAQA,EASpD+S,CAAY/S,IAWiBuS,CAAKjK,EAAOtI,EAAMqE,EAAciE,GAA5BxX,OAAAgN,EAAA,EAAAhN,CAAA,GAAyCoD,yDP/B3E2V,iEAUZ,IQpBYmJ,GR0BGpe,eAtBA,SAACnD,GAAD,OAAkB8C,YAAa,CAC1C3D,KAAM,CACFyC,SAAU,WAoBHuB,CANF,SAACV,GAAD,OACTC,EAAA,cAAC8e,GAAA3d,EAAD,CAAWL,UAAS,GAAAoC,OAAKnD,EAAMgf,SAAX,KAAA7b,OAAuBnD,EAAMW,QAAQjE,OACpDsD,EAAMtD,QS+BAgE,eA3CA,SAACnD,GAAD,OAAkB8C,YAAa,KA2C/BK,CAjBG,SAACV,GAAD,OACdC,EAAA,cAAC+F,EAAA,EAAD,CAAQnF,KAAMb,EAAMwO,WAAYvI,QAASjG,EAAMif,oBAAqBC,OAAQlf,EAAMyO,aAC9ExO,EAAA,cAACkG,EAAA,EAAD,KACIlG,EAAA,cAACyB,EAAA,EAAD,KAAa1B,EAAMsB,QAEvBrB,EAAA,cAACmG,GAAA,EAAD,MACAnG,EAAA,cAACkf,GAAA,EAAD,KACKnf,EAAM0O,aA7BC,SAAC1O,GAAD,OAChBC,EAAA,cAACA,EAAA,SAAD,KAGIA,EAAA,cAACmf,GAAD,CAAW1iB,KAAMsD,EAAM0O,YAAasQ,SAAUrJ,GAAU0J,YAyB9B3Q,CAAY1O,GACjCA,EAAM4O,YAtBA,SAAC5O,GAAD,OACfC,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,cAACyB,EAAA,EAAD,kBACAzB,EAAA,cAACmf,GAAD,CAAW1iB,KAAMsD,EAAM4O,WAAYoQ,SAAUrJ,GAAU0J,YAmB9BzQ,CAAW5O,GAC/BA,EAAM2O,SAhBH,SAAC3O,GAAD,OACZC,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,cAACyB,EAAA,EAAD,gBACAzB,EAAA,cAACmf,GAAD,CAAW1iB,KAAMsD,EAAM2O,QAASqQ,SAAUrJ,GAAU0J,YAa9B1Q,CAAQ3O,IAE9BC,EAAA,cAAC+G,GAAA,EAAD,KACI/G,EAAA,cAACia,GAAA,EAAD,CAAQhZ,QAASlB,EAAM6O,wBAAvB,aCXGnO,eA7BA,SAACnD,GAAD,OAAkB8C,YAAa,CAC1CiB,MAAO,CACHqZ,QAASpd,EAAM8L,QAAQ,GACvB8M,cAAe,GAEnBmJ,QAAS,CACLpJ,WAAY,GAEhBqJ,QAAS,CACLrJ,WAAY,MAoBLxV,CAdG,SAACV,GAAD,OACdC,EAAA,cAAC+F,EAAA,EAAD,CAAQnF,KAAMb,EAAMkO,YAAajI,QAASjG,EAAMwf,qBAAsBN,OAAQlf,EAAMmO,cAChFlO,EAAA,cAACkG,EAAA,EAAD,CAAapF,UAAWf,EAAMW,QAAQW,OAClCrB,EAAA,cAACyB,EAAA,EAAD,CAAYC,QAAQ,SAApB,YAEJ1B,EAAA,cAACkf,GAAA,EAAD,CAAepe,UAAWf,EAAMW,QAAQ2e,SACpCrf,EAAA,cAACmf,GAAD,CAAW1iB,KAAMsD,EAAMqO,QAAS2Q,SAAUrJ,GAAU8J,cAExDxf,EAAA,cAAC+G,GAAA,EAAD,CAAejG,UAAWf,EAAMW,QAAQ4e,SACpCtf,EAAA,cAACia,GAAA,EAAD,CAAQwF,WAAS,EAACxe,QAASlB,EAAMsO,yBAAjC,iEClCNqR,GAAW,2DAEJC,GAAQ,eAAA5b,EAAApH,OAAAqH,GAAA,EAAArH,CAAAsH,GAAA9C,EAAA+C,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACdL,EAAc3B,KADA,CAAA8B,EAAAE,KAAA,eAAAF,EAAAG,OAAA,SAGT,IAHS,cAMdL,EAA2B,CAC7BM,OAAQ,MACR5B,QAASqB,GAROG,EAAAE,KAAA,EAWPG,MAAM8a,GAAUrb,GACxBQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAIA,IAbE,cAAAR,EAAAG,OAAA,SAAAH,EAAAS,MAAA,wBAAAT,EAAAU,SAAAd,MAAH,yBAAAJ,EAAAmB,MAAAC,KAAAC,YAAA,GAgBRiW,GAAI,eAAA/V,EAAA3I,OAAAqH,GAAA,EAAArH,CAAAsH,GAAA9C,EAAA+C,KAAG,SAAAqB,EAAOsU,GAAP,IAAAzV,EAAAkX,EAAAjX,EAAA,OAAAJ,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,UACVL,EAAc3B,KADJ,CAAAgD,EAAAhB,KAAA,eAAAgB,EAAAf,OAAA,SAGL,MAHK,cAMV4W,EAAW,CAAEzB,YAAaA,GAE1BxV,EAA2B,CAC7BM,OAAQ,OACR5B,QAASqB,EACTtF,KAAMyc,KAAKC,UAAUF,IAXT7V,EAAAhB,KAAA,EAcHG,MAAM8a,GAAUrb,GAAaQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAdpD,cAAAU,EAAAf,OAAA,SAAAe,EAAAT,MAAA,wBAAAS,EAAAR,SAAAM,MAAH,gBAAAG,GAAA,OAAAJ,EAAAJ,MAAAC,KAAAC,YAAA,GAiBJwa,GAAM,eAAA5C,EAAArgB,OAAAqH,GAAA,EAAArH,CAAAsH,GAAA9C,EAAA+C,KAAG,SAAA2b,EAAO7F,GAAP,IAAA5V,EAAAC,EAAA,OAAAJ,GAAA9C,EAAAmD,KAAA,SAAAwb,GAAA,cAAAA,EAAAtb,KAAAsb,EAAArb,MAAA,UACZL,EAAc3B,KADF,CAAAqd,EAAArb,KAAA,eAAAqb,EAAApb,OAAA,SAGP,MAHO,cAMZL,EAA2B,CAC7BM,OAAQ,MACR5B,QAASqB,EACTtF,KAAMyc,KAAKC,UAAUxB,IATP8F,EAAArb,KAAA,EAYLG,MAAM8a,GAAUrb,GACxBQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAbb,cAAA+a,EAAApb,OAAA,SAAAob,EAAA9a,MAAA,wBAAA8a,EAAA7a,SAAA4a,MAAH,gBAAAE,GAAA,OAAA/C,EAAA9X,MAAAC,KAAAC,YAAA,GCoCJ3E,eA9DA,SAACnD,GAAD,OAAkB8C,YAAa,KA8D/BK,CAxDE,SAAAsD,GAA4B,IAAzB8V,EAAyB9V,EAAzB8V,YAAyB8B,EACb5T,aAAsC6N,IAA1DmB,EADiC4E,EACjC5E,MAAOiJ,EAD0BrE,EAC1BqE,SACThG,EAAoBjD,EAAQA,EAAMgD,OAAO,SAAAxJ,GAAI,OAAIA,EAAKsJ,cAAgBA,IAAa,GAAK,KACxFlD,IAAmBqD,GAAOA,EAAKrD,QAQ/BsJ,EAAe,SAACC,GAClBC,GAAWD,GAASrb,KAAK,SAAA4N,GACjBA,GAAUuN,GACVA,EATa,SAACI,GACtB,IAAMC,EAAsBtJ,EAAQA,EAAMgD,OAAO,SAAAxJ,GAAI,OAAIA,EAAKnU,KAAOgkB,EAAShkB,KAAM,GAEpF,OADAikB,EAAY5O,KAAK2O,GACVC,EAMUC,CAAiBJ,OA2BtC,OAAIvJ,EAEI3W,EAAA,cAACa,EAAA,EAAD,CAAYI,QARM,WAClB+Y,GAAQrD,GACRsJ,EAAatjB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKqd,EAAN,CAAYrD,SAAS,OAO7B3W,EAAA,cAACugB,GAAApf,EAAD,CAAcsV,MAAO,CAAEtY,MAAO,uBAKlC6B,EAAA,cAACa,EAAA,EAAD,CAAYI,QA9BK,WACjB+Y,EACAiG,EAAatjB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKqd,EAAN,CAAYrD,SAAS,KAEjC6J,GAAS3G,GAAahV,KAAK,SAAA4b,GACnBA,GAAST,GACTL,KAAW9a,KAAK,SAAA6b,GACRV,GACAA,EAASU,SAuBrB1gB,EAAA,cAAC2gB,GAAAxf,EAAD,uGJ/DJ0d,sEKFZ,IAAM+B,GAAY,uDAELC,GAAS,eAAA9c,EAAApH,OAAAqH,GAAA,EAAArH,CAAAsH,GAAA9C,EAAA+C,KAAG,SAAAC,EAAO0V,GAAP,IAAAxV,EAAA,OAAAJ,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEfJ,EAA2B,CAAEM,OAAQ,OAFtBJ,EAAAE,KAAA,EAIRG,MAAK,GAAA1B,OAAI0d,GAAJ,KAAA1d,OAAiB2W,EAAjB,UAAsCxV,GACnDQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAIA,IANG,cAAAR,EAAAG,OAAA,SAAAH,EAAAS,MAAA,wBAAAT,EAAAU,SAAAd,MAAH,gBAAAuB,GAAA,OAAA3B,EAAAmB,MAAAC,KAAAC,YAAA,GAST0b,GAAS,eAAAxb,EAAA3I,OAAAqH,GAAA,EAAArH,CAAAsH,GAAA9C,EAAA+C,KAAG,SAAAqB,EAAOsU,EAAqBkH,GAA5B,IAAA3c,EAAAkX,EAAAjX,EAAA,OAAAJ,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,UACfL,EAAc3B,KADC,CAAAgD,EAAAhB,KAAA,eAAAgB,EAAAf,OAAA,SAGV,MAHU,cAMf4W,EAAkB,CAAEzB,cAAakH,SAEjC1c,EAA2B,CAC7BM,OAAQ,OACR5B,QAASqB,EACTtF,KAAMyc,KAAKC,UAAUF,IAXJ7V,EAAAhB,KAAA,EAcRG,MAAMgc,GAAWvc,GACzBQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAIA,IAhBG,cAAAU,EAAAf,OAAA,SAAAe,EAAAT,MAAA,wBAAAS,EAAAR,SAAAM,MAAH,gBAAAwa,EAAAiB,GAAA,OAAA1b,EAAAJ,MAAAC,KAAAC,YAAA,GAmBT6b,GAAQ,eAAAjE,EAAArgB,OAAAqH,GAAA,EAAArH,CAAAsH,GAAA9C,EAAA+C,KAAG,SAAA2b,EAAOhG,GAAP,IAAAzV,EAAAC,EAAA,OAAAJ,GAAA9C,EAAAmD,KAAA,SAAAwb,GAAA,cAAAA,EAAAtb,KAAAsb,EAAArb,MAAA,UAEdL,EAAc3B,KAFA,CAAAqd,EAAArb,KAAA,eAAAqb,EAAApb,OAAA,SAIT,CAAEmV,cAAakH,MAAOlC,GAAUqC,OAJvB,cAOd7c,EAA2B,CAC7BM,OAAQ,MACR5B,QAASqB,GATO0b,EAAArb,KAAA,EAYPG,MAAK,GAAA1B,OAAI0d,GAAJ,KAAA1d,OAAiB2W,GAAexV,GAC7CQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAIA,IAdE,cAAA+a,EAAApb,OAAA,SAAAob,EAAA9a,MAAA,wBAAA8a,EAAA7a,SAAA4a,MAAH,gBAAAsB,GAAA,OAAAnE,EAAA9X,MAAAC,KAAAC,YAAA,GCHfgc,GAAiB,SAACrhB,GACpB,OAAQA,EAAMghB,OACV,KAAKlC,GAAUqC,KAAM,OAAOlhB,EAAA,cAACqhB,GAAwBthB,GACrD,KAAK8e,GAAUyC,GAAI,OAAOthB,EAAA,cAACuhB,GAAsBxhB,GACjD,KAAK8e,GAAU2C,KAAM,OAAOxhB,EAAA,cAACyhB,GAAwB1hB,GACrD,QAAS,OAAOC,EAAA,cAACqhB,GAAwBthB,KAI3C2hB,GAAqB,SAAA3d,GAAA,IAAGrD,EAAHqD,EAAGrD,QAASihB,EAAZ5d,EAAY4d,OAAQC,EAApB7d,EAAoB6d,cAAeC,EAAnC9d,EAAmC8d,gBAAnC,OACvB7hB,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,cAACid,GAAA,EAAD,CACIxG,MAAO,CAAEyG,OAAQ,QACjBxb,QAAQ,WACRyb,KAAMnd,EAAA,cAAC8hB,GAAA3gB,EAAD,MACNkc,MAAOsE,EAAOI,IACdjhB,UAAWJ,EAAQlB,OACnByB,QAAS2gB,IAEb5hB,EAAA,cAACid,GAAA,EAAD,CACIxG,MAAO,CAAEyG,OAAQ,QACjBxb,QAAQ,WACRyb,KAAMnd,EAAA,cAACgiB,GAAA7gB,EAAD,MACNkc,MAAOsE,EAAOM,MACdnhB,UAAWJ,EAAQlB,OACnByB,QAAS4gB,MAKfK,GAAmB,SAAA5c,GAAA,IAAG5E,EAAH4E,EAAG5E,QAASihB,EAAZrc,EAAYqc,OAAQQ,EAApB7c,EAAoB6c,kBAAmBN,EAAvCvc,EAAuCuc,gBAAvC,OACrB7hB,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,cAACid,GAAA,EAAD,CACIxG,MAAO,CAAEyG,OAAQ,QACjBxb,QAAQ,WACRyb,KAAMnd,EAAA,cAACoiB,GAAAjhB,EAAD,MACNkc,MAAOsE,EAAOI,IACdjhB,UAAWJ,EAAQlB,OACnByB,QAASkhB,IAEbniB,EAAA,cAACid,GAAA,EAAD,CACIxG,MAAO,CAAEyG,OAAQ,QACjBxb,QAAQ,WACRyb,KAAMnd,EAAA,cAACgiB,GAAA7gB,EAAD,MACNkc,MAAOsE,EAAOM,MACdnhB,UAAWJ,EAAQlB,OACnByB,QAAS4gB,MAKfQ,GAAqB,SAAArF,GAAA,IAAGtc,EAAHsc,EAAGtc,QAASihB,EAAZ3E,EAAY2E,OAAQQ,EAApBnF,EAAoBmF,kBAAmBP,EAAvC5E,EAAuC4E,cAAvC,OACvB5hB,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,cAACid,GAAA,EAAD,CACIxG,MAAO,CAAEyG,OAAQ,QACjBxb,QAAQ,WACRyb,KAAMnd,EAAA,cAAC8hB,GAAA3gB,EAAD,MACNkc,MAAOsE,EAAOI,IACdjhB,UAAWJ,EAAQlB,OACnByB,QAAS2gB,IAEb5hB,EAAA,cAACid,GAAA,EAAD,CACIxG,MAAO,CAAEyG,OAAQ,QACjBxb,QAAQ,WACRyb,KAAMnd,EAAA,cAACsiB,GAAAnhB,EAAD,MACNkc,MAAOsE,EAAOM,MACdnhB,UAAWJ,EAAQlB,OACnByB,QAASkhB,MA4DN1hB,eAjJA,SAACnD,GAAD,OAAkB8C,YAAa,CAC1CZ,OAAQ,CACJA,OAAQlC,EAAM8L,QAAQ,OA+If3I,CAvDA,SAAA8hB,GAAqC,IAAlC1I,EAAkC0I,EAAlC1I,YAAanZ,EAAqB6hB,EAArB7hB,QAAqBsH,EAEpBD,WAA4B,CAAEga,IAAK,EAAGE,MAAO,IAFzBha,EAAAtL,OAAAuL,EAAA,EAAAvL,CAAAqL,EAAA,GAEzC2Z,EAFyC1Z,EAAA,GAEjCua,EAFiCva,EAAA,GAAAI,EAGtBN,WAAsB,CAAE8R,cAAakH,MAAOlC,GAAUqC,OAHhC5Y,EAAA3L,OAAAuL,EAAA,EAAAvL,CAAA0L,EAAA,GAGzC0Y,EAHyCzY,EAAA,GAGlCma,EAHkCna,EAAA,GAK1Coa,EAAmB,SAACjQ,GAClBA,GACAgQ,EAAShQ,IAgBXkQ,EAAe,WACjB9B,GAAUhH,GAAahV,KAAK,SAAA+d,GACpBA,GACAJ,EAAUI,MAiBtB,OAJA7a,YAAgB4a,EAAc,IAC9B5a,YAToB,WAChBkZ,GAASpH,GAAahV,KAAK,SAAA4N,GACnBA,GAAW8I,KAAKC,UAAU/I,KAAY8I,KAAKC,UAAUuF,IACrD0B,EAAShQ,MAMQ,IAC7B1K,YAAgB4a,EAAc,CAAC5B,IAG3B/gB,EAAA,cAAC6iB,GAAD,CACIlB,OAAQA,EACRZ,MAAOA,EAAMA,MACbrgB,QAASA,EACTkhB,cAjCc,WAClBd,GAAUjH,EAAa,GAAGhV,KAAK,SAAA4N,GAAM,OAAIiQ,EAAiBjQ,MAiCtDoP,gBAtCgB,WACpBf,GAAUjH,EAAa,GAAGhV,KAAK,SAAA4N,GAAM,OAAIiQ,EAAiBjQ,MAsCtD0P,kBA/BkB,WACtBrB,GAAUjH,EAAa,GAAGhV,KAAK,SAAA4N,GAAM,OAAIiQ,EAAiBjQ,wGCtH5DqQ,GAAc,+CAEPC,GAAW,eAAAhf,EAAApH,OAAAqH,GAAA,EAAArH,CAAAsH,GAAA9C,EAAA+C,KAAG,SAAAC,EAAO0V,EAAqBmJ,GAA5B,IAAA3e,EAAA,OAAAJ,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEjBJ,EAA2B,CAAEM,OAAQ,OAFpBJ,EAAAE,KAAA,EAIVG,MAAK,GAAA1B,OAAI4f,GAAJ,gBAAA5f,OAA8B2W,EAA9B,UAAA3W,OAAkD8f,GAAQ3e,GACvEQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAIA,IANK,cAAAR,EAAAG,OAAA,SAAAH,EAAAS,MAAA,wBAAAT,EAAAU,SAAAd,MAAH,gBAAAuB,EAAAqa,GAAA,OAAAhc,EAAAmB,MAAAC,KAAAC,YAAA,GASX6d,GAAa,eAAA3d,EAAA3I,OAAAqH,GAAA,EAAArH,CAAAsH,GAAA9C,EAAA+C,KAAG,SAAAqB,EAAO2d,GAAP,IAAA9e,EAAAC,EAAA,OAAAJ,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,UACnBL,EAAc3B,KADK,CAAAgD,EAAAhB,KAAA,eAAAgB,EAAAf,OAAA,UAGd,GAHc,cAMnBL,EAA2B,CAC7BM,OAAQ,SACR5B,QAASqB,GARYqB,EAAAhB,KAAA,EAWZG,MAAK,GAAA1B,OAAI4f,GAAJ,KAAA5f,OAAmBggB,GAAa7e,GAC7CQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAIA,IAbO,cAAAU,EAAAf,OAAA,SAAAe,EAAAT,MAAA,wBAAAS,EAAAR,SAAAM,MAAH,gBAAAyb,GAAA,OAAA1b,EAAAJ,MAAAC,KAAAC,YAAA,GAgBb+d,GAAmB,eAAAnG,EAAArgB,OAAAqH,GAAA,EAAArH,CAAAsH,GAAA9C,EAAA+C,KAAG,SAAA2b,EAAOuD,GAAP,IAAAhf,EAAAC,EAAA,OAAAJ,GAAA9C,EAAAmD,KAAA,SAAAwb,GAAA,cAAAA,EAAAtb,KAAAsb,EAAArb,MAAA,UACzBL,EAAc3B,KADW,CAAAqd,EAAArb,KAAA,eAAAqb,EAAApb,OAAA,SAGpB,MAHoB,cAMzBL,EAA2B,CAC7BM,OAAQ,OACR5B,QAASqB,EACTtF,KAAMyc,KAAKC,UAAU4H,IATMtD,EAAArb,KAAA,EAYlBG,MAAK,GAAA1B,OAAI4f,IAAeze,GAChCQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAIA,IAda,cAAA+a,EAAApb,OAAA,SAAAob,EAAA9a,MAAA,wBAAA8a,EAAA7a,SAAA4a,MAAH,gBAAAsB,GAAA,OAAAnE,EAAA9X,MAAAC,KAAAC,YAAA,GCe1Bie,GAAkB,CAAE9gB,KAAM,GAAIiB,YAAQoF,EAAWxM,IAAK,GAEtDknB,GAAU,SAAAvf,GAA8F,IAA3Fsb,EAA2Ftb,EAA3Fsb,QAAS3e,EAAkFqD,EAAlFrD,QAAS8E,EAAyEzB,EAAzEyB,OAAQ+d,EAAiExf,EAAjEwf,KAAMnnB,EAA2D2H,EAA3D3H,GAAIonB,EAAuDzf,EAAvDyf,SAAUC,EAA6C1f,EAA7C0f,YAAaC,EAAgC3f,EAAhC2f,YAAgC1b,EAClFD,WAAApL,OAAAgN,EAAA,EAAAhN,CAAA,GAA0B0mB,KADwDpb,EAAAtL,OAAAuL,EAAA,EAAAvL,CAAAqL,EAAA,GACnGP,EADmGQ,EAAA,GAC7Fe,EAD6Ff,EAAA,GAEpG0b,IAAwBJ,GAAQA,IAAS/d,EAE3CiC,EAAKrL,KAAOinB,GAAUjnB,KACtB4M,EAAQrM,OAAAgN,EAAA,EAAAhN,CAAA,GAAK8K,EAAN,CAAYrL,IAAK,KACxBiJ,GAAQG,GAAQX,KAAK,SAAA4N,GACbA,GAAQzJ,EAAQyJ,MAI5B,IAX0GpK,EAqB1EN,WAAmC,MArBuCO,EAAA3L,OAAAuL,EAAA,EAAAvL,CAAA0L,EAAA,GAqBnGlB,EArBmGmB,EAAA,GAqBzFC,EArByFD,EAAA,GA+BpGsb,EAAW7a,QAAQ5B,GACzB,OACInH,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,cAAC6jB,GAAA,EAAD,CAAMC,WAAS,EAAC1a,QAAS,EAAGtI,UAAWJ,EAAQqjB,aAC3C/jB,EAAA,cAAC6jB,GAAA,EAAD,CAAMtT,MAAI,EAACyT,GAAI,GACXhkB,EAAA,cAAC0G,GAAA,EAAD,CACI+P,MAAO,CAAE8F,UAAW,OACpB5T,IAAKlB,EAAKlF,KACVoE,IAAKc,EAAKjE,aAAUoF,KAG5B5I,EAAA,cAAC6jB,GAAA,EAAD,CAAMtT,MAAI,EAACyT,GAAI,GAAIvN,MAAO,CAAE/W,YAAa,SACrCM,EAAA,cAACikB,GAAA,EAAD,CACI5G,MAAK,GAAAna,OAAKuE,EAAKlF,KAAV,KAAAW,OAAkBwgB,GACvBQ,WAAS,EACTC,QAAS,EACT1T,MAAO4O,EACPve,UAAS,GAAAoC,OAAKxC,EAAQ0jB,UAAb,KAAAlhB,OAA0BxC,EAAQ2jB,iBAC3CC,UAAQ,KAGhBtkB,EAAA,cAAC6jB,GAAA,EAAD,CAAMtT,MAAI,EAACyT,GAAI,GACVL,GACG3jB,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,cAACa,EAAA,EAAD,CACII,QAjCF,SAACwH,GACvBF,EAAYE,EAAMC,iBAkCM1I,EAAA,cAACukB,GAAApjB,EAAD,QAIZnB,EAAA,cAACkH,GAAA,EAAD,CACItG,KAAMgjB,EACNzc,SAAUA,EACVnB,QAtCO,WACvBuC,EAAY,OAsCInB,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAGhBtH,EAAA,cAACia,GAAA,EAAD,CACIvY,QAAQ,WACR8iB,UAAWxkB,EAAA,cAACykB,GAAAtjB,EAAD,MACXF,QAnEH,WACb0iB,GACAV,GAAc7mB,GAAIyI,KAAK,SAAA4N,GACfA,GACAgR,EAAYD,EAASzJ,OAAO,SAAAqJ,GAAO,OAAIA,EAAQhnB,KAAOA,SA4DlD,eAwBlBsoB,GAAmB,SAAApf,GAA0G,IAAvGuU,EAAuGvU,EAAvGuU,YAAarU,EAA0FF,EAA1FE,OAAQmf,EAAkFrf,EAAlFqf,SAAUC,EAAwEtf,EAAxEsf,WAAYlkB,EAA4D4E,EAA5D5E,QAAS8iB,EAAmDle,EAAnDke,SAAUC,EAAyCne,EAAzCme,YAAyCoB,EACjG9c,WAAuB,IAD0E+c,EAAAnoB,OAAAuL,EAAA,EAAAvL,CAAAkoB,EAAA,GACxHxF,EADwHyF,EAAA,GAC/GC,EAD+GD,EAAA,GAiB/H,OACI9kB,EAAA,cAAC6jB,GAAA,EAAD,CAAMC,WAAS,EAAC1a,QAAS,EAAGtI,UAAWJ,EAAQqjB,aAC3C/jB,EAAA,cAAC6jB,GAAA,EAAD,CAAMtT,MAAI,EAACyT,GAAI,GACXhkB,EAAA,cAAC0G,GAAA,EAAD,CACI+P,MAAO,CAAE8F,UAAW,OACpB5T,IAAKgc,EACLhe,IAAKie,KAGb5kB,EAAA,cAAC6jB,GAAA,EAAD,CAAMtT,MAAI,EAACyT,GAAI,GAAIvN,MAAO,CAAE/W,YAAa,SAEhCilB,GAAYnf,EACTxF,EAAA,cAACikB,GAAA,EAAD,CACInjB,UAAWJ,EAAQ0jB,UACnBF,WAAS,EACT7G,MAAK,iBAAAna,OAAmByhB,GACxBlU,MAAO4O,EACP2F,SAAU,SAACC,GAAD,OAAsDF,EAAWE,EAAGnS,OAAOrC,UAEzFzQ,EAAA,cAACikB,GAAA,EAAD,CACInjB,UAAWJ,EAAQ0jB,UACnB/G,MAAM,sBACNiH,UAAQ,KAKxBtkB,EAAA,cAAC6jB,GAAA,EAAD,CAAMtT,MAAI,EAACyT,GAAI,GAENW,GAAYnf,EACTxF,EAAA,cAACyc,GAAA,EAAD,CAASpb,MAAM,eAAeqb,UAAU,SACpC1c,EAAA,cAACa,EAAA,EAAD,CAAYI,QA7CjB,WACVuE,GAA6B,IAAnB6Z,EAAQ9S,QAInB4W,GAD8B,CAAE/mB,GAAI,EAAGoJ,SAAQqU,cAAawF,UAAS6F,cAAUtc,EAAW8a,YAAa,OAC1E7e,KAAK,SAAA4N,GAC1BA,IACAsS,EAAW,IACXtB,EAAW,CAAEhR,GAAFvP,OAAAvG,OAAA4V,GAAA,EAAA5V,CAAa6mB,UAsCZxjB,EAAA,cAACmlB,GAAAhkB,EAAD,QAGRnB,EAAA,cAACa,EAAA,EAAD,CAAYyjB,UAAQ,GAChBtkB,EAAA,cAACmlB,GAAAhkB,EAAD,UAoEbV,eA7PA,SAACnD,GAAD,OAAkB8C,YAAa,CAC1C2jB,YAAa,CACTxH,UAAW,OACX7S,SAAU,GAEd2a,gBAAiB,CACbe,+BAAgC,CAC5BlI,OAAQ,QAEZmI,wBAAyB,CACrBlnB,MAAO,UAGfimB,UAAW,CACP9lB,MAAO,QAEXkB,OAAQ,CACJA,OAAQlC,EAAM8L,QAAQ,OA4Of3I,CA5DE,SAACV,GAAiB,IACvB8Z,EAAgB9Z,EAAhB8Z,YACApS,EAASM,aAAiBjG,IAA1B2F,KAFuB6d,EAICvd,WAA+B,IAJhCwd,EAAA5oB,OAAAuL,EAAA,EAAAvL,CAAA2oB,EAAA,GAIxB9B,EAJwB+B,EAAA,GAId9B,EAJc8B,EAAA,GAAAC,EAKSzd,YAAwB,GALjC0d,EAAA9oB,OAAAuL,EAAA,EAAAvL,CAAA6oB,EAAA,GAKxBE,EALwBD,EAAA,GAKVE,EALUF,EAAA,GAAAG,EAMP7d,WAAuB,GANhB8d,EAAAlpB,OAAAuL,EAAA,EAAAvL,CAAAipB,EAAA,GAMxB5C,EANwB6C,EAAA,GAMlBC,EANkBD,EAAA,GAQzBE,EAAkB,WACpBhD,GAAYlJ,EAAamJ,GAAMne,KAAK,SAAAmhB,GAChCF,EAAQ,SAAAhqB,GAAC,OAAIA,EAAI,IC9MH,SAACkqB,GACvB,OAAOA,EAAWhD,KAAKiD,QAAUD,EAAWhD,KAAKkD,YAA4C,IAA9BF,EAAW3G,QAAQ9S,OD+MtE4Z,CAAWH,GACXL,GAAgB,GAEhBA,GAAgB,GAGhBK,EAAW3G,QAAQ9S,OAAS,GAC5BkX,EAAY,SAAA2C,GAAO,SAAAljB,OAAAvG,OAAA4V,GAAA,EAAA5V,CAAQypB,GAARzpB,OAAA4V,GAAA,EAAA5V,CAAoBqpB,EAAW3G,eAO9D,OAFAtX,YAAgBge,EAAiB,IAG7B/lB,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,cAACqmB,GAAD1pB,OAAAmM,OAAA,GACQ/I,EADR,CAEIyF,OAAQiC,EAAOA,EAAKrL,QAAKwM,EACzB+b,SAAUld,EAAOA,EAAKlF,UAAOqG,EAC7Bgc,WAAYnd,GAAQA,EAAKjE,aAAuBoF,EAChD4a,SAAUA,EACVC,YAAaA,KAGbD,EAASznB,IAAI,SAACqnB,EAASjP,GAAV,OAAoBnU,EAAA,cAACsmB,GAAD3pB,OAAAmM,OAAA,CAC7BkO,IAAK7C,GACDpU,EACAqjB,EAHyB,CAI7BG,KAAO9b,GAAQA,EAAKrL,IAAO,KAC3BonB,SAAUA,EACVC,YAAaA,OAGrBzjB,EAAA,cAAC6jB,GAAA,EAAD,CAAM0C,QAAQ,gBAAgBzC,WAAS,EAAChjB,UAAWf,EAAMW,QAAQqjB,aAEzD2B,GAAgB1lB,EAAA,cAACyc,GAAA,EAAD,CAASpb,MAAM,gBAAgBqb,UAAU,SACrD1c,EAAA,cAAC0G,GAAA,EAAD,CAAQzF,QAAS8kB,GACb/lB,EAAA,cAACwmB,GAAArlB,EAAD,YE/NtBslB,GAAU,SAAC1mB,GAAD,OACZC,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,cAAC6jB,GAAA,EAAD,CAAMC,WAAS,GACX9jB,EAAA,cAAC6jB,GAAA,EAAD,CAAMtT,MAAI,EAACyT,GAAI,GAAI0C,GAAI,GACnB1mB,EAAA,cAAC6jB,GAAA,EAAD,CAAMC,WAAS,EAACtJ,WAAW,aAAa+L,QAAQ,cAC5CvmB,EAAA,cAAC2mB,GAAD,CAAU9M,YAAa9Z,EAAM3D,KAC7B4D,EAAA,cAAC4mB,GAAD,CAAQ/M,YAAa9Z,EAAM3D,OAGnC4D,EAAA,cAAC6jB,GAAA,EAAD,CAAMtT,MAAI,EAACyT,GAAI,GAAI0C,GAAI,GACnB1mB,EAAA,cAAC6jB,GAAA,EAAD,CAAMC,WAAS,EAACtJ,WAAW,aAAa+L,QAAQ,eAIxDvmB,EAAA,cAACmG,GAAA,EAAD,MACAnG,EAAA,cAAC6mB,GAAD,CAAUhN,YAAa9Z,EAAM3D,OAetBqE,eAtDA,SAACnD,GAAD,OAAkB8C,YAAa,CAC1C8I,eAAevM,OAAA2E,EAAA,EAAA3E,CAAA,CACX6B,QAAS,OACTF,MAAO,OACNhB,EAAMiE,YAAYC,GAAG,MAAQ,CAC1BhD,QAAS,UAGjB2K,cAAcxM,OAAA2E,EAAA,EAAA3E,CAAA,CACV6B,QAAS,QACTF,MAAO,OACNhB,EAAMiE,YAAYC,GAAG,MAAQ,CAC1BhD,QAAS,SAGjBH,KAAM,CACFK,UAAW,SACXc,OAAQ,OACR+c,UAAW,WAoCJ9b,CAXA,SAACV,GAAD,OACXC,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,qBAAKc,UAAS,GAAAoC,OAAKnD,EAAMW,QAAQrC,KAAnB,KAAA6E,OAA2BnD,EAAMW,QAAQwI,iBACnDlJ,EAAA,cAAC8mB,GAAY/mB,IAEjBC,EAAA,qBAAKc,UAAS,GAAAoC,OAAKnD,EAAMW,QAAQrC,KAAnB,KAAA6E,OAA2BnD,EAAMW,QAAQyI,gBACnDnJ,EAAA,cAAC8mB,GAAY/mB,OC9BVU,eAhBA,SAACnD,GAAD,OAAkB8C,YAAa,KAgB/BK,CAbG,SAACV,GAAD,OACdC,EAAA,qBAAKyW,MAAO,CAAEjX,OAAQ,OAAQd,UAAW,WACrCsB,EAAA,cAAC+mB,GAAWhnB,GACZC,EAAA,cAACgnB,GAAUjnB,GACXC,EAAA,cAACinB,GAAA,EAAD,KACIjnB,EAAA,cAACknB,GAAYnnB,IAEjBC,EAAA,cAACmnB,GAAapnB,GACdC,EAAA,cAAConB,GAAYrnB,GACbC,EAAA,cAACqnB,GAAYtnB,MCWNunB,eA9BS,SAAAvjB,GAAA,IAAGwjB,EAAHxjB,EAAGwjB,aAAH,OAAA5qB,OAAAgN,EAAA,EAAAhN,CAAA,GACjB4qB,IAGoB,SAACC,GAAD,MAAyC,CAChErX,kBAAmB,SAACtE,GAChB2b,EAASlI,GAAoBzT,KAGjCyD,mBAAoB,WAChBkY,EAASlI,OAGb/P,sBAAuB,WACnBiY,EAASlI,OAGb1Q,uBAAwB,WACpB4Y,EAASlI,OAGb9P,uBAAwB,WACpBgY,EAASlI,OAGbjR,wBAAyB,WACrBmZ,EAASlI,SAIFgI,CAA6CG,IC/BtDC,GAAU,SAAA3jB,EAAsBlH,EAAW8qB,GAAjC,IAAG9a,EAAH9I,EAAG8I,IAAKD,EAAR7I,EAAQ6I,IAAR,OAAgDC,IAAQhQ,GAAK+P,IAAQ+a,GAa/EC,GAAc,SAACnb,GACjB,IAAMI,EAAMJ,EAAMF,OAAS,EAE3B,MAAO,CAAEM,MAAKD,IADFH,EAAMI,GAAKN,OAAS,IA8CrBqT,GAlCA,SAACnP,EAAeoX,GAAwB,IAE3ChY,EAAkCgY,EAAlChY,aAAcZ,EAAoB4Y,EAApB5Y,OAAQH,EAAY+Y,EAAZ/Y,QAExBI,EAAqB2Y,EAAM3Y,UAAa2Y,EAAM3Y,WAAY,IAAI4Y,MAAOC,UAE3E,GAAIjZ,EACA,OAAO+Y,EAGX,IAAM7Y,EAAQ6Y,EAAM7Y,MAAQ,EACtBvC,EAjCU,SAACA,EAA8Bc,EAAckD,GAA7C,OAChBhE,EAAM1Q,IAAI,SAAC8Q,EAAKmb,GACZ,OAAOnb,EAAI9Q,IAAI,SAACqiB,EAAM6J,GAAP,OAAoBP,GAAQna,EAAOya,EAAUC,GAAYxX,EAAQ2N,MA+BtE8J,CAAYL,EAAMpb,MAAOoD,EAAcY,GAC/CT,EArCa,SAACvD,GAAD,OACnBA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,iBAAO,OAoCZosB,CAAeN,EAAM7X,aAEzC,GA/Be,SAACD,EAADzK,EAA4DmL,GAA5D,IAAyC5D,EAAzCvH,EAAyCuH,IAAKD,EAA9CtH,EAA8CsH,IAA9C,OACdmD,EAAclD,GAAKD,KAAS6D,EA8BzB2X,CAAWP,EAAM9X,cAAeF,EAAcY,GAG9C,OAFAT,EAAYH,EAAahD,KAAKgD,EAAajD,KAAO,CAAE5P,gB5JnCxC,W4JoCZsQ,GAAgB0C,EAAaH,GACtBlT,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWF,QAAOC,OAAQA,EAAS,EAAGxC,QAAOuD,gBAGpE,GA5Be,SAACvD,EAA8Bc,GAA0B,IAAA8a,EACnDT,GAAYnb,GAAzBI,EADgEwb,EAChExb,IAAKD,EAD2Dyb,EAC3Dzb,IACb,OAAO8a,GAAQna,EAAOV,EAAKD,GA0BvB0b,CAAW7b,EAAOoD,GAAe,CACjC,IAAMV,GAAa,IAAI2Y,MAAOC,UACxBQ,EAAWX,GAAYnb,GAE7B,OADAuD,EAAYuY,EAAS1b,KAAK0b,EAAS3b,KAAO7P,EACnCJ,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWC,aAAYH,QAAOvC,QAAOuD,cAAalB,SAAS,IAGlF,IAAM0Z,EA9BW,SAAC/b,EAADuQ,GAAA,IAAiCnQ,EAAjCmQ,EAAiCnQ,IAAKD,EAAtCoQ,EAAsCpQ,IAAtC,OAChBA,IAAQH,EAAMI,GAAKN,OAAS,EAAK,CAAEM,IAAKA,EAAM,EAAGD,IAAK,GAAM,CAAEC,MAAKD,IAAKA,EAAM,GA6B7D6b,CAAahc,EAAOoD,GAItC,OAHApD,EAAM+b,EAAU3b,KAAK2b,EAAU5b,KAAO,IACtCU,GAAgB0C,EAAawY,GAEtB7rB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB7Y,QAAOE,YAAWzC,QAAOuD,cAAaH,aAAc2Y,KCpC5DE,GArBiB,WAA6C,IAA5Cb,EAA4CziB,UAAAmH,OAAA,QAAA3D,IAAAxD,UAAA,GAAAA,UAAA,GAA7B4E,KAAU2e,EAAmBvjB,UAAAmH,OAAA,EAAAnH,UAAA,QAAAwD,EACzE,OAAQ+f,EAAOjd,MACX,KAAKkd,GACD,OAAOhJ,GAAO9N,OAAO6W,EAAO7c,SAAU+b,GAC1C,KAAKe,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAO5e,KACX,KAAK4e,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB9Y,SAAS,EAAO8Z,MAAOF,EAAO7c,SAAW,IAChE,QACI,OAAO+b,qCCjBTiB,iBAKOC,IALjB,SAAUD,KAAV,IAAAhkB,EAAA,OAAAb,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OADrBF,EAAAE,KAAA,EAC2BukB,aAAKC,KAAMzmB,IAAP,qBAAAU,OAAiC6K,GAAU3R,KAD1E,OAEI,OADM0I,EADVP,EAAAS,KAAAT,EAAAE,KAAA,EAEUykB,crJsCmBrd,EqJtCF/G,EAAS+G,KrJuCzB,CAAEH,KAAMC,GAA2BG,QAASD,KqJzCvD,wBAAAtH,EAAAU,OrJwCO,IAAsB4G,GqJxC7Bsd,IAKO,SAAUJ,KAAV,OAAA9kB,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACH,OADGgB,EAAAhB,KAAA,EACG2kB,aAAK7d,IADR,OAEH,OAFG9F,EAAAhB,KAAA,EAEG4kB,aAAKP,IAFR,wBAAArjB,EAAAR,SAAAqkB,ICLP,IA8BehC,eA9BS,SAAAvjB,GAAA,IAAGwlB,EAAHxlB,EAAGwlB,gBAAH,OAAA5sB,OAAAgN,EAAA,EAAAhN,CAAA,GACjB4sB,IAGoB,SAAC/B,GAAD,MAAyC,CAChErX,kBAAmB,SAACtE,GAChB2b,EAASlI,GAAoBzT,KAGjCyD,mBAAoB,WAChBkY,EAASlI,OAGb/P,sBAAuB,WACnBiY,EAASlI,OAGb1Q,uBAAwB,WACpB4Y,EAASlI,OAGb9P,uBAAwB,WACpBgY,EAASlI,OAGbjR,wBAAyB,WACrBmZ,EAASlI,SAIFgI,CAA6CG,IClCtDna,GAAkB,SAACnN,EAAD4D,EAAuD8jB,GAAiB,IAApChb,EAAoC9I,EAApC8I,IAAKD,EAA+B7I,EAA/B6I,IACrDmD,EAAkB8X,EAAlB9X,cACFyZ,EAAqB1X,OAAO/B,EAAclD,GAAK,IAC/C4c,EAAwB7c,EAAM,EAEpCzM,EAAO,GAAGyM,GAAOxP,EACjB+C,EAAO0M,GAAK,GAAKzP,EAEjB+C,EAAO0M,EAAM,GAAGD,GAAO1P,EACvBiD,EAAO0M,GAAK,GAAK9P,EACbysB,GAAcC,IACdtpB,EAAO0M,EAAM,GAAGD,EAAM4c,GAAczsB,IAItC6qB,GAAc,SAACnb,GACjB,IAAMI,EAAMJ,EAAMF,OAAS,EAE3B,MAAO,CAAEM,MAAKD,IADFH,EAAMI,GAAKN,OAAS,IAI9Bmb,GAAU,SAAApiB,EAAsBzI,EAAW8qB,GAAjC,IAAG9a,EAAHvH,EAAGuH,IAAKD,EAARtH,EAAQsH,IAAR,OAAgDC,IAAQhQ,GAAK+P,IAAQ+a,GAsDtE/H,GAjCA,SAACnP,EAAeoX,GAAwB,IAC3ChY,EAAkCgY,EAAlChY,aAAcZ,EAAoB4Y,EAApB5Y,OAAQH,EAAY+Y,EAAZ/Y,QAExBI,EAAqB2Y,EAAM3Y,UAAa2Y,EAAM3Y,WAAY,IAAI4Y,MAAOC,UAE3E,GAAIjZ,EACA,OAAO+Y,EAGX,IAAM7Y,EAAQ6Y,EAAM7Y,MAAQ,EACtBvC,EA1BU,SAACA,EAA8Bc,EAAckD,GAA7C,OAChBhE,EAAM1Q,IAAI,SAAC8Q,EAAKmb,GACZ,OAAOnb,EAAI9Q,IAAI,SAACqiB,EAAM6J,GAAP,OAAoBP,GAAQna,EAAOya,EAAUC,GAAYxX,EAAQ2N,MAwBtE8J,CAAYL,EAAMpb,MAAOoD,EAAcY,GAC/CT,EA9Ba,SAACvD,GAAD,OACnBA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,iBAAO,OA6BZosB,CAAeN,EAAM7X,aAEzC,GAxBe,SAACD,EAADiN,EAA4DvM,GAA5D,IAAyC5D,EAAzCmQ,EAAyCnQ,IAAKD,EAA9CoQ,EAA8CpQ,IAA9C,OACdmD,EAAclD,GAAKD,KAAS6D,EAuBzB2X,CAAWP,EAAM9X,cAAeF,EAAcY,GAG9C,OAFAT,EAAYH,EAAahD,KAAKgD,EAAajD,KAAO,CAAE5P,gBAAiB,OACrEsQ,GAAgB0C,EAAaH,EAAcgY,GACpClrB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWF,QAAOC,OAAQA,EAAS,EAAGxC,QAAOuD,gBAGpE,GA3Be,SAACvD,EAA8Bc,GAA0B,IAAA8a,EACnDT,GAAYnb,GAAzBI,EADgEwb,EAChExb,IAAKD,EAD2Dyb,EAC3Dzb,IACb,OAAO8a,GAAQna,EAAOV,EAAKD,GAyBvB0b,CAAW7b,EAAOoD,GAAe,CACjC,IAAMV,GAAa,IAAI2Y,MAAOC,UACxBQ,EAAWX,GAAYnb,GAE7B,OADAuD,EAAYuY,EAAS1b,KAAK0b,EAAS3b,KAAO7P,EACnCJ,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWC,aAAYH,QAAOvC,QAAOuD,cAAalB,SAAS,IAGlF,IAAM0Z,EA7BW,SAAC/b,EAAD8V,GAAA,IAAiC1V,EAAjC0V,EAAiC1V,IAAKD,EAAtC2V,EAAsC3V,IAAtC,OAChBA,IAAQH,EAAMI,GAAKN,OAAS,EAAK,CAAEM,IAAKA,EAAM,EAAGD,IAAK,GAAM,CAAEC,MAAKD,IAAKA,EAAM,GA4B7D6b,CAAahc,EAAOoD,GAItC,OAHApD,EAAM+b,EAAU3b,KAAK2b,EAAU5b,KAAO,IACtCU,GAAgB0C,EAAawY,EAAWX,GAEjClrB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB7Y,QAAOE,YAAWzC,QAAOuD,cAAaH,aAAc2Y,KC/C5DE,GArBiB,WAA6C,IAA5Cb,EAA4CziB,UAAAmH,OAAA,QAAA3D,IAAAxD,UAAA,GAAAA,UAAA,GAA7B4E,KAAU2e,EAAmBvjB,UAAAmH,OAAA,EAAAnH,UAAA,QAAAwD,EACzE,OAAQ+f,EAAOjd,MACX,KAAKkd,GACD,OAAOhJ,GAAO9N,OAAO6W,EAAO7c,SAAU+b,GAC1C,KAAKe,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAO5e,KACX,KAAK4e,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB9Y,SAAS,EAAO8Z,MAAOF,EAAO7c,SAAW,IAChE,QACI,OAAO+b,iBCjBTiB,iBAKOC,IALjB,SAAUD,KAAV,IAAAhkB,EAAA,OAAAb,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OADrBF,EAAAE,KAAA,EAC2BukB,aAAKC,KAAMzmB,IAAP,qBAAAU,OAAiC6K,GAAU3R,KAD1E,OAEI,OADM0I,EADVP,EAAAS,KAAAT,EAAAE,KAAA,EAEUykB,cnJsCmBrd,EmJtCF/G,EAAS+G,KnJuCzB,CAAEH,KAAMC,GAA2BG,QAASD,KmJzCvD,wBAAAtH,EAAAU,OnJwCO,IAAsB4G,GmJxC7B6d,IAKO,SAAUX,KAAV,OAAA9kB,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACH,OADGgB,EAAAhB,KAAA,EACG2kB,aAAK7d,IADR,OAEH,OAFG9F,EAAAhB,KAAA,EAEG4kB,aAAKP,IAFR,wBAAArjB,EAAAR,SAAA0kB,ICLP,IA8BerC,eA9BS,SAAAvjB,GAAA,IAAG6lB,EAAH7lB,EAAG6lB,kBAAH,OAAAjtB,OAAAgN,EAAA,EAAAhN,CAAA,GACjBitB,IAGoB,SAACpC,GAAD,MAAyC,CAChErX,kBAAmB,SAACtE,GAChB2b,EAASlI,GAAoBzT,KAGjCyD,mBAAoB,WAChBkY,EAASlI,OAGb/P,sBAAuB,WACnBiY,EAASlI,OAGb1Q,uBAAwB,WACpB4Y,EAASlI,OAGb9P,uBAAwB,WACpBgY,EAASlI,OAGbjR,wBAAyB,WACrBmZ,EAASlI,SAIFgI,CAA6CG,IClCtDna,GAAkB,SAACnN,EAAD4D,EAAuD8jB,GAAiB,IAApChb,EAAoC9I,EAApC8I,IAAKD,EAA+B7I,EAA/B6I,IACrDmD,EAAkB8X,EAAlB9X,cACFyZ,EAAqB1X,OAAO/B,EAAclD,GAAK,IAC/C4c,EAAwB7c,EAAM,EAEpCzM,EAAO,GAAGyM,GAAOxP,EACjB+C,EAAO0M,GAAK,GAAKzP,EAEjB+C,EAAO0M,EAAM,GAAGD,GAAO1P,EACvBiD,EAAO0M,GAAK,GAAK9P,EACbysB,GAAcC,IACdtpB,EAAO0M,GAAKD,EAAM4c,GAAczsB,IAIlC6qB,GAAc,SAACnb,GACjB,IAAMI,EAAMJ,EAAMF,OAAS,EAE3B,MAAO,CAAEM,MAAKD,IADFH,EAAMI,GAAKN,OAAS,IAI9Bmb,GAAU,SAAApiB,EAAsBzI,EAAW8qB,GAAjC,IAAG9a,EAAHvH,EAAGuH,IAAKD,EAARtH,EAAQsH,IAAR,OAAgDC,IAAQhQ,GAAK+P,IAAQ+a,GAuDtE/H,GAlCA,SAACnP,EAAeoX,GAAwB,IAE3ChY,EAAkCgY,EAAlChY,aAAcZ,EAAoB4Y,EAApB5Y,OAAQH,EAAY+Y,EAAZ/Y,QAExBI,EAAqB2Y,EAAM3Y,UAAa2Y,EAAM3Y,WAAY,IAAI4Y,MAAOC,UAE3E,GAAIjZ,EACA,OAAO+Y,EAGX,IAAM7Y,EAAQ6Y,EAAM7Y,MAAQ,EACtBvC,EA3BU,SAACA,EAA8Bc,EAAckD,GAA7C,OAChBhE,EAAM1Q,IAAI,SAAC8Q,EAAKmb,GACZ,OAAOnb,EAAI9Q,IAAI,SAACqiB,EAAM6J,GAAP,OAAoBP,GAAQna,EAAOya,EAAUC,GAAYxX,EAAQ2N,MAyBtE8J,CAAYL,EAAMpb,MAAOoD,EAAcY,GAC/CT,EA/Ba,SAACvD,GAAD,OACnBA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,iBAAO,OA8BZosB,CAAeN,EAAM7X,aAEzC,GAzBe,SAACD,EAADiN,EAA4DvM,GAA5D,IAAyC5D,EAAzCmQ,EAAyCnQ,IAAKD,EAA9CoQ,EAA8CpQ,IAA9C,OACdmD,EAAclD,GAAKD,KAAS6D,EAwBzB2X,CAAWP,EAAM9X,cAAeF,EAAcY,GAG9C,OAFAT,EAAYH,EAAahD,KAAKgD,EAAajD,KAAO,CAAE5P,gBAAiB,OACrEsQ,GAAgB0C,EAAaH,EAAcgY,GACpClrB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWF,QAAOC,OAAQA,EAAS,EAAGxC,QAAOuD,gBAGpE,GA5Be,SAACvD,EAA8Bc,GAA0B,IAAA8a,EACnDT,GAAYnb,GAAzBI,EADgEwb,EAChExb,IAAKD,EAD2Dyb,EAC3Dzb,IACb,OAAO8a,GAAQna,EAAOV,EAAKD,GA0BvB0b,CAAW7b,EAAOoD,GAAe,CACjC,IAAMV,GAAa,IAAI2Y,MAAOC,UACxBQ,EAAWX,GAAYnb,GAE7B,OADAuD,EAAYuY,EAAS1b,KAAK0b,EAAS3b,KAAO7P,EACnCJ,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWC,aAAYH,QAAOvC,QAAOuD,cAAalB,SAAS,IAGlF,IAAM0Z,EA9BW,SAAC/b,EAAD8V,GAAA,IAAiC1V,EAAjC0V,EAAiC1V,IAAKD,EAAtC2V,EAAsC3V,IAAtC,OAChBA,IAAQH,EAAMI,GAAKN,OAAS,EAAK,CAAEM,IAAKA,EAAM,EAAGD,IAAK,GAAM,CAAEC,MAAKD,IAAKA,EAAM,GA6B7D6b,CAAahc,EAAOoD,GAItC,OAHApD,EAAM+b,EAAU3b,KAAK2b,EAAU5b,KAAO,IACtCU,GAAgB0C,EAAawY,EAAWX,GAEjClrB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB7Y,QAAOE,YAAWzC,QAAOuD,cAAaH,aAAc2Y,KChD5DE,GArBiB,WAA6C,IAA5Cb,EAA4CziB,UAAAmH,OAAA,QAAA3D,IAAAxD,UAAA,GAAAA,UAAA,GAA7B4E,KAAU2e,EAAmBvjB,UAAAmH,OAAA,EAAAnH,UAAA,QAAAwD,EACzE,OAAQ+f,EAAOjd,MACX,KAAKkd,GACD,OAAOhJ,GAAO9N,OAAO6W,EAAO7c,SAAU+b,GAC1C,KAAKe,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAO5e,KACX,KAAK4e,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB9Y,SAAS,EAAO8Z,MAAOF,EAAO7c,SAAW,IAChE,QACI,OAAO+b,iBCjBTiB,iBAKOC,IALjB,SAAUD,KAAV,IAAAhkB,EAAA,OAAAb,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OADrBF,EAAAE,KAAA,EAC2BukB,aAAKC,KAAMzmB,IAAP,qBAAAU,OAAiC6K,GAAU3R,KAD1E,OAEI,OADM0I,EADVP,EAAAS,KAAAT,EAAAE,KAAA,EAEUykB,cjJsCmBrd,EiJtCF/G,EAAS+G,KjJuCzB,CAAEH,KAAMC,GAA2BG,QAASD,KiJzCvD,wBAAAtH,EAAAU,OjJwCO,IAAsB4G,GiJxC7Bge,IAKO,SAAUd,KAAV,OAAA9kB,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACH,OADGgB,EAAAhB,KAAA,EACG2kB,aAAK7d,IADR,OAEH,OAFG9F,EAAAhB,KAAA,EAEG4kB,aAAKP,IAFR,wBAAArjB,EAAAR,SAAA6kB,ICLP,IA8BexC,eA9BS,SAAAvjB,GAAA,IAAGgmB,EAAHhmB,EAAGgmB,iBAAH,OAAAptB,OAAAgN,EAAA,EAAAhN,CAAA,GACjBotB,IAGoB,SAACvC,GAAD,MAAyC,CAChErX,kBAAmB,SAACtE,GAChB2b,EAASlI,GAAoBzT,KAGjCyD,mBAAoB,WAChBkY,EAASlI,OAGb/P,sBAAuB,WACnBiY,EAASlI,OAGb1Q,uBAAwB,WACpB4Y,EAASlI,OAGb9P,uBAAwB,WACpBgY,EAASlI,OAGbjR,wBAAyB,WACrBmZ,EAASlI,SAIFgI,CAA6CG,ICjCtDG,GAAc,SAACnb,GACjB,IAAMI,EAAMJ,EAAMF,OAAS,EAE3B,MAAO,CAAEM,MAAKD,IADFH,EAAMI,GAAKN,OAAS,IAI9Bmb,GAAU,SAAA3jB,EAAsBlH,EAAW8qB,GAAjC,IAAG9a,EAAH9I,EAAG8I,IAAKD,EAAR7I,EAAQ6I,IAAR,OAAgDC,IAAQhQ,GAAK+P,IAAQ+a,GA2DtE/H,GAjCA,SAACnP,EAAgBoX,GAAwB,IAC5ChY,EAAkCgY,EAAlChY,aAAcZ,EAAoB4Y,EAApB5Y,OAAQH,EAAY+Y,EAAZ/Y,QAExBI,EAAqB2Y,EAAM3Y,UAAa2Y,EAAM3Y,WAAY,IAAI4Y,MAAOC,UAE3E,GAAIjZ,EACA,OAAO+Y,EAGX,IAAM7Y,EAAQ6Y,EAAM7Y,MAAQ,EACtBvC,EA1BU,SAACA,EAA+Bc,EAAckD,GAA9C,OAChBhE,EAAM1Q,IAAI,SAAC8Q,EAAKmb,GACZ,OAAOnb,EAAI9Q,IAAI,SAACqiB,EAAM6J,GAAP,OAAoBP,GAAQna,EAAOya,EAAUC,GAN5C,SAACxX,GACrB,OAAOA,EAAQ,IAAM,IAKuDkO,CAAgBlO,GAAS2N,MAwBvF8J,CAAYL,EAAMpb,MAAOoD,EAAcY,GAC/CT,EAnCa,SAACvD,GACpB,OAAOA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,iBAAO,OAkCnBosB,CAAeN,EAAM7X,aAEzC,GAxBe,SAACD,EAADzK,EAA6DmL,GAA7D,IAA0C5D,EAA1CvH,EAA0CuH,IAAKD,EAA/CtH,EAA+CsH,IAA/C,OACdmD,EAAclD,GAAKD,KAAS6D,EAuBzB2X,CAAWP,EAAM9X,cAAeF,EAAcY,GAG9C,OAFAT,EAAYH,EAAahD,KAAKgD,EAAajD,KAAO,CAAE5P,gBAAiB,OACrEsQ,GAAgB0C,EAAaH,GACtBlT,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWF,QAAOC,OAAQA,EAAS,EAAGxC,QAAOuD,gBAGpE,GA3Be,SAACvD,EAA+Bc,GAA0B,IAAA8a,EACpDT,GAAYnb,GAAzBI,EADiEwb,EACjExb,IAAKD,EAD4Dyb,EAC5Dzb,IACb,OAAO8a,GAAQna,EAAOV,EAAKD,GAyBvB0b,CAAW7b,EAAOoD,GAAe,CACjC,IAAMV,GAAa,IAAI2Y,MAAOC,UACxBQ,EAAWX,GAAYnb,GAE7B,OADAuD,EAAYuY,EAAS1b,KAAK0b,EAAS3b,KAAO7P,EACnCJ,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWC,aAAYH,QAAOvC,QAAOuD,cAAalB,SAAS,IAGlF,IAAM0Z,EA7BW,SAAC/b,EAADuQ,GAAA,IAAkCnQ,EAAlCmQ,EAAkCnQ,IAAKD,EAAvCoQ,EAAuCpQ,IAAvC,OAChBA,IAAQH,EAAMI,GAAKN,OAAS,EAAK,CAAEM,IAAKA,EAAM,EAAGD,IAAK,GAAM,CAAEC,MAAKD,IAAKA,EAAM,GA4B7D6b,CAAahc,EAAOoD,GAItC,OAHApD,EAAM+b,EAAU3b,KAAK2b,EAAU5b,KAAO,IACtCU,GAAgB0C,EAAawY,GAEtB7rB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB7Y,QAAOE,YAAWzC,QAAOuD,cAAaH,aAAc2Y,KCtC5DE,GArBiB,WAA6C,IAA5Cb,EAA4CziB,UAAAmH,OAAA,QAAA3D,IAAAxD,UAAA,GAAAA,UAAA,GAA7B4E,KAAU2e,EAAmBvjB,UAAAmH,OAAA,EAAAnH,UAAA,QAAAwD,EACzE,OAAQ+f,EAAOjd,MACX,KAAKkd,GACD,OAAOhJ,GAAO7W,QAAQ4f,EAAO7c,SAAU+b,GAC3C,KAAKe,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAO5e,KACX,KAAK4e,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB9Y,SAAS,EAAO8Z,MAAOF,EAAO7c,SAAW,IAChE,QACI,OAAO+b,iBCjBTiB,iBAKOC,IALjB,SAAUD,KAAV,IAAAhkB,EAAA,OAAAb,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OADrBF,EAAAE,KAAA,EAC2BukB,aAAKC,KAAMzmB,IAAP,qBAAAU,OAAiC6K,GAAU3R,KAD1E,OAEI,OADM0I,EADVP,EAAAS,KAAAT,EAAAE,KAAA,EAEUykB,c/IsCmBrd,E+ItCF/G,EAAS+G,K/IuCzB,CAAEH,KAAMC,GAA2BG,QAASD,K+IzCvD,wBAAAtH,EAAAU,O/IwCO,IAAsB4G,G+IxC7Bme,IAKO,SAAUjB,KAAV,OAAA9kB,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACH,OADGgB,EAAAhB,KAAA,EACG2kB,aAAK7d,IADR,OAEH,OAFG9F,EAAAhB,KAAA,EAEG4kB,aAAKP,IAFR,wBAAArjB,EAAAR,SAAAglB,ICLP,IA8Be3C,eA9BS,SAAAvjB,GAAA,IAAGmmB,EAAHnmB,EAAGmmB,kBAAH,OAAAvtB,OAAAgN,EAAA,EAAAhN,CAAA,GACjButB,IAGoB,SAAC1C,GAAD,MAAyC,CAChErX,kBAAmB,SAACtE,GAChB2b,EAASlI,GAAoBzT,KAGjCyD,mBAAoB,WAChBkY,EAASlI,OAGb/P,sBAAuB,WACnBiY,EAASlI,OAGb1Q,uBAAwB,WACpB4Y,EAASlI,OAGb9P,uBAAwB,WACpBgY,EAASlI,OAGbjR,wBAAyB,WACrBmZ,EAASlI,SAIFgI,CAA6CG,ICjCtDG,GAAc,SAACnb,GACjB,IAAMI,EAAMJ,EAAMF,OAAS,EAE3B,MAAO,CAAEM,MAAKD,IADFH,EAAMI,GAAKN,OAAS,IAI9Bmb,GAAU,SAAA3jB,EAAsBlH,EAAW8qB,GAAjC,IAAG9a,EAAH9I,EAAG8I,IAAKD,EAAR7I,EAAQ6I,IAAR,OAAgDC,IAAQhQ,GAAK+P,IAAQ+a,GA2DtE/H,GAjCA,SAACnP,EAAgBoX,GAAwB,IAC5ChY,EAAkCgY,EAAlChY,aAAcZ,EAAoB4Y,EAApB5Y,OAAQH,EAAY+Y,EAAZ/Y,QAExBI,EAAqB2Y,EAAM3Y,UAAa2Y,EAAM3Y,WAAY,IAAI4Y,MAAOC,UAE3E,GAAIjZ,EACA,OAAO+Y,EAGX,IAAM7Y,EAAQ6Y,EAAM7Y,MAAQ,EACtBvC,EA1BU,SAACA,EAA+Bc,EAAckD,GAA9C,OAChBhE,EAAM1Q,IAAI,SAAC8Q,EAAKmb,GACZ,OAAOnb,EAAI9Q,IAAI,SAACqiB,EAAM6J,GAAP,OAAoBP,GAAQna,EAAOya,EAAUC,GAN5C,SAACxX,GACrB,OAAOA,EAAQ,IAAM,IAKuDkO,CAAgBlO,GAAS2N,MAwBvF8J,CAAYL,EAAMpb,MAAOoD,EAAcY,GAC/CT,EAnCa,SAACvD,GACpB,OAAOA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,iBAAO,OAkCnBosB,CAAeN,EAAM7X,aAEzC,GAxBe,SAACD,EAADzK,EAA6DmL,GAA7D,IAA0C5D,EAA1CvH,EAA0CuH,IAAKD,EAA/CtH,EAA+CsH,IAA/C,OACdmD,EAAclD,GAAKD,KAAS6D,EAuBzB2X,CAAWP,EAAM9X,cAAeF,EAAcY,GAG9C,OAFAT,EAAYH,EAAahD,KAAKgD,EAAajD,KAAO,CAAE5P,gBAAiB,OACrEsQ,GAAgB0C,EAAaH,GACtBlT,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWF,QAAOC,OAAQA,EAAS,EAAGxC,QAAOuD,gBAGpE,GA3Be,SAACvD,EAA+Bc,GAA0B,IAAA8a,EACpDT,GAAYnb,GAAzBI,EADiEwb,EACjExb,IAAKD,EAD4Dyb,EAC5Dzb,IACb,OAAO8a,GAAQna,EAAOV,EAAKD,GAyBvB0b,CAAW7b,EAAOoD,GAAe,CACjC,IAAMV,GAAa,IAAI2Y,MAAOC,UACxBQ,EAAWX,GAAYnb,GAE7B,OADAuD,EAAYuY,EAAS1b,KAAK0b,EAAS3b,KAAO7P,EACnCJ,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWC,aAAYH,QAAOvC,QAAOuD,cAAalB,SAAS,IAGlF,IAAM0Z,EA7BW,SAAC/b,EAADuQ,GAAA,IAAkCnQ,EAAlCmQ,EAAkCnQ,IAAKD,EAAvCoQ,EAAuCpQ,IAAvC,OAChBA,IAAQH,EAAMI,GAAKN,OAAS,EAAK,CAAEM,IAAKA,EAAM,EAAGD,IAAK,GAAM,CAAEC,MAAKD,IAAKA,EAAM,GA4B7D6b,CAAahc,EAAOoD,GAItC,OAHApD,EAAM+b,EAAU3b,KAAK2b,EAAU5b,KAAO,IACtCU,GAAgB0C,EAAawY,GAEtB7rB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB7Y,QAAOE,YAAWzC,QAAOuD,cAAaH,aAAc2Y,KCtC5DE,GArBiB,WAA6C,IAA5Cb,EAA4CziB,UAAAmH,OAAA,QAAA3D,IAAAxD,UAAA,GAAAA,UAAA,GAA7B4E,KAAU2e,EAAmBvjB,UAAAmH,OAAA,EAAAnH,UAAA,QAAAwD,EACzE,OAAQ+f,EAAOjd,MACX,KAAKkd,GACD,OAAOhJ,GAAO7W,QAAQ4f,EAAO7c,SAAU+b,GAC3C,KAAKe,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAO5e,KACX,KAAK4e,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB9Y,SAAS,EAAO8Z,MAAOF,EAAO7c,SAAW,IAChE,QACI,OAAO+b,iBCjBTiB,iBAKOC,IALjB,SAAUD,KAAV,IAAAhkB,EAAA,OAAAb,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OADrBF,EAAAE,KAAA,EAC2BukB,aAAKC,KAAMzmB,IAAP,qBAAAU,OAAiC6K,GAAU3R,KAD1E,OAEI,OADM0I,EADVP,EAAAS,KAAAT,EAAAE,KAAA,EAEUykB,c7IsCmBrd,E6ItCF/G,EAAS+G,K7IuCzB,CAAEH,KAAMC,GAA2BG,QAASD,K6IzCvD,wBAAAtH,EAAAU,O7IwCO,IAAsB4G,G6IxC7Bse,IAKO,SAAUpB,KAAV,OAAA9kB,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACH,OADGgB,EAAAhB,KAAA,EACG2kB,aAAK7d,IADR,OAEH,OAFG9F,EAAAhB,KAAA,EAEG4kB,aAAKP,IAFR,wBAAArjB,EAAAR,SAAAmlB,ICLP,IA8Be9C,eA9BS,SAAAvjB,GAAA,IAAGsmB,EAAHtmB,EAAGsmB,cAAH,OAAA1tB,OAAAgN,EAAA,EAAAhN,CAAA,GACjB0tB,IAGoB,SAAC7C,GAAD,MAAyC,CAChErX,kBAAmB,SAACtE,GAChB2b,EAASlI,GAAoBzT,KAGjCyD,mBAAoB,WAChBkY,EAASlI,OAGb/P,sBAAuB,WACnBiY,EAASlI,OAGb1Q,uBAAwB,WACpB4Y,EAASlI,OAGb9P,uBAAwB,WACpBgY,EAASlI,OAGbjR,wBAAyB,WACrBmZ,EAASlI,SAIFgI,CAA6CG,ICjCtDG,GAAc,SAACnb,GACjB,IAAMI,EAAMJ,EAAMF,OAAS,EAE3B,MAAO,CAAEM,MAAKD,IADFH,EAAMI,GAAKN,OAAS,IAM9Bmb,GAAU,SAAA3jB,EAAsBlH,EAAW8qB,GAAjC,IAAG9a,EAAH9I,EAAG8I,IAAKD,EAAR7I,EAAQ6I,IAAR,OAAgDC,IAAQhQ,GAAK+P,IAAQ+a,GAuDtE/H,GAlCA,SAACnP,EAAgBoX,GAAwB,IAE5ChY,EAAkCgY,EAAlChY,aAAcZ,EAAoB4Y,EAApB5Y,OAAQH,EAAY+Y,EAAZ/Y,QAExBI,EAAqB2Y,EAAM3Y,UAAa2Y,EAAM3Y,WAAY,IAAI4Y,MAAOC,UAE3E,GAAIjZ,EACA,OAAO+Y,EAGX,IAAM7Y,EAAQ6Y,EAAM7Y,MAAQ,EACtBvC,EA3BU,SAACA,EAA+Bc,EAAckD,GAA9C,OAChBhE,EAAM1Q,IAAI,SAAC8Q,EAAKmb,GACZ,OAAOnb,EAAI9Q,IAAI,SAACqiB,EAAM6J,GAAP,OAAoBP,GAAQna,EAAOya,EAAUC,GAT5C,SAACxX,GAAD,OAA6BA,EAAQ,IAAM,IASakO,CAAgBlO,GAAS2N,MAyBvF8J,CAAYL,EAAMpb,MAAOoD,EAAcY,GAC/CT,EA/Ba,SAACvD,GAAD,OACnBA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,iBAAO,OA8BZosB,CAAeN,EAAM7X,aAEzC,GAzBe,SAACD,EAADzK,EAA6DmL,GAA7D,IAA0C5D,EAA1CvH,EAA0CuH,IAAKD,EAA/CtH,EAA+CsH,IAA/C,OACdmD,EAAclD,GAAKD,KAAS6D,EAwBzB2X,CAAWP,EAAM9X,cAAeF,EAAcY,GAG9C,OAFAT,EAAYH,EAAahD,KAAKgD,EAAajD,KAAO,CAAE5P,gBAAiB,OACrEsQ,GAAgB0C,EAAaH,GACtBlT,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWF,QAAOC,OAAQA,EAAS,EAAGxC,QAAOuD,gBAGpE,GA5Be,SAACvD,EAA+Bc,GAA0B,IAAA8a,EACpDT,GAAYnb,GAAzBI,EADiEwb,EACjExb,IAAKD,EAD4Dyb,EAC5Dzb,IACb,OAAO8a,GAAQna,EAAOV,EAAKD,GA0BvB0b,CAAW7b,EAAOoD,GAAe,CACjC,IAAMV,GAAa,IAAI2Y,MAAOC,UACxBQ,EAAWX,GAAYnb,GAE7B,OADAuD,EAAYuY,EAAS1b,KAAK0b,EAAS3b,KAAO7P,EACnCJ,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWC,aAAYH,QAAOvC,QAAOuD,cAAalB,SAAS,IAGlF,IAAM0Z,EA9BW,SAAC/b,EAADuQ,GAAA,IAAkCnQ,EAAlCmQ,EAAkCnQ,IAAKD,EAAvCoQ,EAAuCpQ,IAAvC,OAChBA,IAAQH,EAAMI,GAAKN,OAAS,EAAK,CAAEM,IAAKA,EAAM,EAAGD,IAAK,GAAM,CAAEC,MAAKD,IAAKA,EAAM,GA6B7D6b,CAAahc,EAAOoD,GAItC,OAHApD,EAAM+b,EAAU3b,KAAK2b,EAAU5b,KAAO,IACtCU,GAAgB0C,EAAawY,GAEtB7rB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB7Y,QAAOE,YAAWzC,QAAOuD,cAAaH,aAAc2Y,KCpC5DE,GArBiB,WAA6C,IAA5Cb,EAA4CziB,UAAAmH,OAAA,QAAA3D,IAAAxD,UAAA,GAAAA,UAAA,GAA7B4E,KAAU2e,EAAmBvjB,UAAAmH,OAAA,EAAAnH,UAAA,QAAAwD,EACzE,OAAQ+f,EAAOjd,MACX,KAAKkd,GACD,OAAOhJ,GAAO7W,QAAQ4f,EAAO7c,SAAU+b,GAC3C,KAAKe,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAO5e,KACX,KAAK4e,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB9Y,SAAS,EAAO8Z,MAAOF,EAAO7c,SAAW,IAChE,QACI,OAAO+b,iBCjBTiB,iBAKOC,IALjB,SAAUD,KAAV,IAAAhkB,EAAA,OAAAb,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OADrBF,EAAAE,KAAA,EAC2BukB,aAAKC,KAAMzmB,IAAP,qBAAAU,OAAiC6K,GAAU3R,KAD1E,OAEI,OADM0I,EADVP,EAAAS,KAAAT,EAAAE,KAAA,EAEUykB,c/HsCmBrd,E+HtCF/G,EAAS+G,K/HuCzB,CAAEH,KAAMC,GAA2BG,QAASD,K+HzCvD,wBAAAtH,EAAAU,O/HwCO,IAAsB4G,G+HxC7Bye,IAKO,SAAUvB,KAAV,OAAA9kB,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACH,OADGgB,EAAAhB,KAAA,EACG2kB,aAAK7d,IADR,OAEH,OAFG9F,EAAAhB,KAAA,EAEG4kB,aAAKP,IAFR,wBAAArjB,EAAAR,SAAAslB,ICLP,IA8BejD,eA9BS,SAAAvjB,GAAA,IAAGymB,EAAHzmB,EAAGymB,iBAAH,OAAA7tB,OAAAgN,EAAA,EAAAhN,CAAA,GACjB6tB,IAGoB,SAAChD,GAAD,MAAyC,CAChErX,kBAAmB,SAACtE,GAChB2b,EAASlI,GAAoBzT,KAGjCyD,mBAAoB,WAChBkY,EAASlI,OAGb/P,sBAAuB,WACnBiY,EAASlI,OAGb1Q,uBAAwB,WACpB4Y,EAASlI,OAGb9P,uBAAwB,WACpBgY,EAASlI,OAGbjR,wBAAyB,WACrBmZ,EAASlI,SAIFgI,CAA6CG,ICjCtDG,GAAc,SAACnb,GACjB,IAAMI,EAAMJ,EAAMF,OAAS,EAE3B,MAAO,CAAEM,MAAKD,IADFH,EAAMI,GAAKN,OAAS,IAM9Bmb,GAAU,SAAA3jB,EAAsBlH,EAAW8qB,GAAjC,IAAG9a,EAAH9I,EAAG8I,IAAKD,EAAR7I,EAAQ6I,IAAR,OAAgDC,IAAQhQ,GAAK+P,IAAQ+a,GAuDtE/H,GAlCA,SAACnP,EAAgBoX,GAAwB,IAE5ChY,EAAkCgY,EAAlChY,aAAcZ,EAAoB4Y,EAApB5Y,OAAQH,EAAY+Y,EAAZ/Y,QAExBI,EAAqB2Y,EAAM3Y,UAAa2Y,EAAM3Y,WAAY,IAAI4Y,MAAOC,UAE3E,GAAIjZ,EACA,OAAO+Y,EAGX,IAAM7Y,EAAQ6Y,EAAM7Y,MAAQ,EACtBvC,EA3BU,SAACA,EAA+Bc,EAAckD,GAA9C,OAChBhE,EAAM1Q,IAAI,SAAC8Q,EAAKmb,GACZ,OAAOnb,EAAI9Q,IAAI,SAACqiB,EAAM6J,GAAP,OAAoBP,GAAQna,EAAOya,EAAUC,GAT5C,SAACxX,GAAD,OAA6BA,EAAQ,IAAM,IASakO,CAAgBlO,GAAS2N,MAyBvF8J,CAAYL,EAAMpb,MAAOoD,EAAcY,GAC/CT,EA/Ba,SAACvD,GAAD,OACnBA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,iBAAO,OA8BZosB,CAAeN,EAAM7X,aAEzC,GAzBe,SAACD,EAADzK,EAA6DmL,GAA7D,IAA0C5D,EAA1CvH,EAA0CuH,IAAKD,EAA/CtH,EAA+CsH,IAA/C,OACdmD,EAAclD,GAAKD,KAAS6D,EAwBzB2X,CAAWP,EAAM9X,cAAeF,EAAcY,GAG9C,OAFAT,EAAYH,EAAahD,KAAKgD,EAAajD,KAAO,CAAE5P,gBAAiB,OACrEsQ,GAAgB0C,EAAaH,GACtBlT,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWF,QAAOC,OAAQA,EAAS,EAAGxC,QAAOuD,gBAGpE,GA5Be,SAACvD,EAA+Bc,GAA0B,IAAA8a,EACpDT,GAAYnb,GAAzBI,EADiEwb,EACjExb,IAAKD,EAD4Dyb,EAC5Dzb,IACb,OAAO8a,GAAQna,EAAOV,EAAKD,GA0BvB0b,CAAW7b,EAAOoD,GAAe,CACjC,IAAMV,GAAa,IAAI2Y,MAAOC,UACxBQ,EAAWX,GAAYnb,GAE7B,OADAuD,EAAYuY,EAAS1b,KAAK0b,EAAS3b,KAAO7P,EACnCJ,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWC,aAAYH,QAAOvC,QAAOuD,cAAalB,SAAS,IAGlF,IAAM0Z,EA9BW,SAAC/b,EAADuQ,GAAA,IAAkCnQ,EAAlCmQ,EAAkCnQ,IAAKD,EAAvCoQ,EAAuCpQ,IAAvC,OAChBA,IAAQH,EAAMI,GAAKN,OAAS,EAAK,CAAEM,IAAKA,EAAM,EAAGD,IAAK,GAAM,CAAEC,MAAKD,IAAKA,EAAM,GA6B7D6b,CAAahc,EAAOoD,GAItC,OAHApD,EAAM+b,EAAU3b,KAAK2b,EAAU5b,KAAO,IACtCU,GAAgB0C,EAAawY,GAEtB7rB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB7Y,QAAOE,YAAWzC,QAAOuD,cAAaH,aAAc2Y,KCpC5DE,GArBiB,WAA6C,IAA5Cb,EAA4CziB,UAAAmH,OAAA,QAAA3D,IAAAxD,UAAA,GAAAA,UAAA,GAA7B4E,KAAU2e,EAAmBvjB,UAAAmH,OAAA,EAAAnH,UAAA,QAAAwD,EACzE,OAAQ+f,EAAOjd,MACX,KAAKkd,GACD,OAAOhJ,GAAO7W,QAAQ4f,EAAO7c,SAAU+b,GAC3C,KAAKe,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAO5e,KACX,KAAK4e,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB9Y,SAAS,EAAO8Z,MAAOF,EAAO7c,SAAW,IAChE,QACI,OAAO+b,iBCjBTiB,iBAKOC,IALjB,SAAUD,KAAV,IAAAhkB,EAAA,OAAAb,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OADrBF,EAAAE,KAAA,EAC2BukB,aAAKC,KAAMzmB,IAAP,qBAAAU,OAAiC6K,GAAU3R,KAD1E,OAEI,OADM0I,EADVP,EAAAS,KAAAT,EAAAE,KAAA,EAEUykB,cjHsCmBrd,EiHtCF/G,EAAS+G,KjHuCzB,CAAEH,KAAMC,GAA2BG,QAASD,KiHzCvD,wBAAAtH,EAAAU,OjHwCO,IAAsB4G,GiHxC7B4e,IAKO,SAAU1B,KAAV,OAAA9kB,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACH,OADGgB,EAAAhB,KAAA,EACG2kB,aAAK7d,IADR,OAEH,OAFG9F,EAAAhB,KAAA,EAEG4kB,aAAKP,IAFR,wBAAArjB,EAAAR,SAAAylB,ICLP,IA8BepD,eA9BS,SAAAvjB,GAAA,IAAG4mB,EAAH5mB,EAAG4mB,eAAH,OAAAhuB,OAAAgN,EAAA,EAAAhN,CAAA,GACjBguB,IAGoB,SAACnD,GAAD,MAAyC,CAChErX,kBAAmB,SAACtE,GAChB2b,EAASlI,GAAoBzT,KAGjCyD,mBAAoB,WAChBkY,EAASlI,OAGb/P,sBAAuB,WACnBiY,EAASlI,OAGb1Q,uBAAwB,WACpB4Y,EAASlI,OAGb9P,uBAAwB,WACpBgY,EAASlI,OAGbjR,wBAAyB,WACrBmZ,EAASlI,SAIFgI,CAA6CG,ICjCtDC,GAAU,SAAA3jB,EAAsBlH,EAAW8qB,GAAjC,IAAG9a,EAAH9I,EAAG8I,IAAKD,EAAR7I,EAAQ6I,IAAR,OAAgDC,IAAQhQ,GAAK+P,IAAQ+a,GAiFtE/H,GAlCA,SAACnP,EAAeoX,GAAwB,IAE3ChY,EAAkCgY,EAAlChY,aAAcZ,EAAoB4Y,EAApB5Y,OAAQH,EAAY+Y,EAAZ/Y,QAExBI,EAAqB2Y,EAAM3Y,UAAa2Y,EAAM3Y,WAAY,IAAI4Y,MAAOC,UAE3E,GAAIjZ,EACA,OAAO+Y,EAGX,IAAM7Y,EAAQ6Y,EAAM7Y,MAAQ,EACtBgB,EAlDa,SAACvD,GAAD,OACnBA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,iBAAO,OAiDZosB,CAAeN,EAAM7X,aAEzC,GA5Ce,SAACD,EAADzK,EAA4DmL,GAA5D,IAAyC5D,EAAzCvH,EAAyCuH,IAAKD,EAA9CtH,EAA8CsH,IAA9C,OACdmD,EAAclD,GAAKD,KAAS6D,EA2CzB2X,CAAWP,EAAM9X,cAAeF,EAAcY,GAG9C,OAFAnD,GAAgB0C,EAAaH,GAC7BG,EAAYH,EAAahD,KAAKgD,EAAajD,KAAO,CAAE5P,gBAAiB,OAC9DL,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWF,QAAOC,OAAQA,EAAS,EAAGe,gBAG7D,IAAMvD,EAvDU,SAACA,EAA8Bc,EAAckD,GAA7C,OAChBhE,EAAM1Q,IAAI,SAAC8Q,EAAKmb,GACZ,OAAOnb,EAAI9Q,IAAI,SAACqiB,EAAM6J,GAAP,OAAoBP,GAAQna,EAAOya,EAAUC,GAAYxX,EAAQ2N,MAqDtE8J,CAAYL,EAAMpb,MAAOoD,EAAcY,GAErD,GAjDe,SAAChE,EAA8Bc,GAC9C,IAAMV,EAAMJ,EAAMF,OAAS,EACrBK,EAAMH,EAAMI,GAAKN,OAAS,EAChC,OAAOmb,GAAQna,EAAOV,EAAKD,GA8CvB0b,CAAW7b,EAAOoD,GAAe,KAAA+a,EAlEpB,SAACne,GAClB,IAAMI,EAAMJ,EAAMF,OAAS,EAE3B,MAAO,CAAEM,MAAKD,IADFH,EAAMI,GAAKN,OAAS,GAiEPse,CAAa7a,GAA1BnD,EADyB+d,EACzB/d,IAAKD,EADoBge,EACpBhe,IACboD,EAAYnD,GAAKD,GAAO7P,EACxB,IAAMoS,GAAa,IAAI2Y,MAAOC,UAC9B,OAAOprB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWC,aAAYH,QAAOvC,QAAOuD,cAAalB,SAAS,IAGlF,IAAM0Z,EAlDW,SAAC/b,EAADuQ,GAA8D,IAA7BnQ,EAA6BmQ,EAA7BnQ,IAAKD,EAAwBoQ,EAAxBpQ,IACvD,OAAY,IAARC,EACID,IAAQH,EAAM,GAAGF,OAAS,EACnB,CAAEM,IAAK,EAAGD,IAAK,GAEf,CAAEC,MAAKD,IAAKA,EAAM,GAEd,IAARC,GAAqB,IAARD,EAChBC,IAAQJ,EAAMF,OAAS,EAChB,CAAEM,IAAK,EAAGD,IAAK,GAEf,CAAEC,IAAKA,EAAM,EAAGD,OAGvBA,IAAQH,EAAMI,GAAKN,OAAS,EACrB,CAAEM,IAAKA,EAAM,EAAGD,IAAK,GAErB,CAAEC,MAAKD,IAAKA,EAAM,GAiCf6b,CAAahc,EAAOoD,GAGtC,OAFAvC,GAAgB0C,EAAawY,GAEtB7rB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB7Y,QAAOE,YAAWzC,QAAOuD,cAAaH,aAAc2Y,KCtD5DE,GArBiB,WAA6C,IAA5Cb,EAA4CziB,UAAAmH,OAAA,QAAA3D,IAAAxD,UAAA,GAAAA,UAAA,GAA7B4E,KAAU2e,EAAmBvjB,UAAAmH,OAAA,EAAAnH,UAAA,QAAAwD,EACzE,OAAQ+f,EAAOjd,MACX,KAAKkd,GACD,OAAOhJ,GAAO9N,OAAO6W,EAAO7c,SAAU+b,GAC1C,KAAKe,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAO5e,KACX,KAAK4e,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB9Y,SAAS,EAAO8Z,MAAOF,EAAO7c,SAAW,IAChE,QACI,OAAO+b,iBCjBTiB,iBAKOC,IALjB,SAAUD,KAAV,IAAAhkB,EAAA,OAAAb,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OADrBF,EAAAE,KAAA,EAC2BukB,aAAKC,KAAMzmB,IAAP,qBAAAU,OAAiC6K,GAAU3R,KAD1E,OAEI,OADM0I,EADVP,EAAAS,KAAAT,EAAAE,KAAA,EAEUykB,cnGsCmBrd,EmGtCF/G,EAAS+G,KnGuCzB,CAAEH,KAAMC,GAA2BG,QAASD,KmGzCvD,wBAAAtH,EAAAU,OnGwCO,IAAsB4G,GmGxC7Bif,IAKO,SAAU/B,KAAV,OAAA9kB,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACH,OADGgB,EAAAhB,KAAA,EACG2kB,aAAK7d,IADR,OAEH,OAFG9F,EAAAhB,KAAA,EAEG4kB,aAAKP,IAFR,wBAAArjB,EAAAR,SAAA8lB,ICEP,IAgCetqB,eAhCA,SAACnD,GAAD,OAAkB8C,YAAa,KAgC/BK,CAdG,SAACV,GAAD,OACdC,EAAA,qBAAKyW,MAAO,CAAEjX,OAAQ,OAAQd,UAAa,WACvCsB,EAAA,cAAC+mB,GAAWhnB,GAjBA,SAACA,GAAiB,IAC1BkT,EAAelT,EAAfkT,WACFpG,EAAM,CAAC,SAAS3J,OAAO+P,GAEvB6K,EAAYjR,EAAI9Q,IAAI,kBAAMgB,IAChC+gB,EAAU,GAAK,GAEf,IAAMrR,EAAQ,GACdA,EAAMgF,KAAK5E,GAEX,IAAMmD,EAAuC,GAE7C,OADAA,EAAYyB,KAAKqM,GACT9d,EAAA,cAACgnB,GAAD,CAAOva,MAAOA,EAAOuD,YAAaA,IAMrCgb,CAAYjrB,GACbC,EAAA,qBAAKyW,MAAO,CAAEiH,aAAc,UAC5B1d,EAAA,cAACgnB,GAAUjnB,GACXC,EAAA,cAACinB,GAAA,EAAD,KACIjnB,EAAA,cAACknB,GAAYnnB,IAEjBC,EAAA,cAAConB,GAAYrnB,GACbC,EAAA,cAACqnB,GAAYtnB,MCJNunB,eA9BS,SAAAvjB,GAAA,IAAGknB,EAAHlnB,EAAGknB,UAAH,OAAAtuB,OAAAgN,EAAA,EAAAhN,CAAA,GACjBsuB,IAGoB,SAACzD,GAAD,MAAyC,CAChErX,kBAAmB,SAACtE,GAChB2b,EAASlI,GAAoBzT,KAGjCyD,mBAAoB,WAChBkY,EAASlI,OAGb/P,sBAAuB,WACnBiY,EAASlI,OAGb1Q,uBAAwB,WACpB4Y,EAASlI,OAGb9P,uBAAwB,WACpBgY,EAASlI,OAGbjR,wBAAyB,WACrBmZ,EAASlI,SAIFgI,CAA6CG,ICwC7C7H,GApCA,SAACnP,EAAgBoX,GAAwB,IAE5ChY,EAA0CgY,EAA1ChY,aAAcZ,EAA4B4Y,EAA5B5Y,OAAQH,EAAoB+Y,EAApB/Y,QAASvC,EAAWsb,EAAXtb,OAEjC2C,EAAqB2Y,EAAM3Y,UAAa2Y,EAAM3Y,WAAY,IAAI4Y,MAAOC,UAE3E,GAAIjZ,EACA,OAAO+Y,EAGX,IAAM7Y,EAAQ6Y,EAAM7Y,MAAQ,EACtBvC,EAnCU,SAACA,EAA+Bc,EAAckD,GAA9C,OAChBhE,EAAM1Q,IAAI,SAAC8Q,EAAKmb,GACZ,OAAOnb,EAAI9Q,IAAI,SAACqiB,EAAM6J,GAAP,OAPP,SAAAlkB,EAAsBlH,EAAW8qB,GAAjC,IAAG9a,EAAH9I,EAAG8I,IAAKD,EAAR7I,EAAQ6I,IAAR,OAAgDC,IAAQhQ,GAAK+P,IAAQ+a,EAO1CD,CAAQna,EAAOya,EAAUC,GAT5C,SAACxX,GAAD,OAA6BA,EAAQ,IAAM,IASakO,CAAgBlO,GAAS2N,MAiCvF8J,CAAYL,EAAMpb,MAAOoD,EAAcY,GAC/CT,EAvCa,SAACvD,GAAD,OACnBA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,iBAAO,OAsCZosB,CAAeN,EAAM7X,aAEzC,GAjCe,SAACD,EAADzK,EAA6DmL,GAA7D,IAA0C5D,EAA1CvH,EAA0CuH,IAAKD,EAA/CtH,EAA+CsH,IAA/C,OACdmD,EAAclD,GAAKD,KAAS6D,EAgCzB2X,CAAWP,EAAM9X,cAAeF,EAAcY,GAG9C,OAFAT,EAAYH,EAAahD,KAAKgD,EAAajD,KAAO,CAAE5P,gBAAiB,OACrEsQ,GAAgB0C,EAAaH,GACtBlT,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWF,QAAOC,OAAQA,EAAS,EAAGxC,QAAOuD,gBAGpE,GApCe,SAACvD,EAADuQ,GAAiE,IAA/BnQ,EAA+BmQ,EAA/BnQ,IAAKD,EAA0BoQ,EAA1BpQ,IACtD,OAAe,IAARC,GAAaD,IAAQH,EAAM,GAAGF,OAAS,EAmC1C+b,CAAW7b,EAAOoD,GAAe,CACjC,IAAMqb,EA1DO,SAACze,GAGlB,MAAO,CAAEI,IAFG,EAEED,IADFH,EADA,GACWF,OAAS,GAwDVse,CAAape,GAC/BuD,EAAYkb,EAAUre,KAAKqe,EAAUte,KAAO7P,EAC5C,IAAMoS,GAAa,IAAI2Y,MAAOC,UAC9B,OAAOprB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWC,aAAYH,QAAOvC,QAAOuD,cAAalB,SAAS,IAGlF,IAAMrK,EAlCW,SAACgI,EAAD8V,EAAqDhW,GAAmB,IAAtCM,EAAsC0V,EAAtC1V,IAAKD,EAAiC2V,EAAjC3V,IAClDue,EAAUve,EAAM,IAAMH,EAAMF,OAAS,EAAIM,EAAM,EAC/Cue,EAAUxe,EAAM,IAAMH,EAAMF,OAASA,EAAS,EAAIA,EAExD,MAAO,CAAEM,IAAKse,EAASve,IATL,SAACA,EAAasG,EAAazG,GAC7C,IAAM4e,GAAWze,EAAM,GAAKH,EAAMF,OAClC,OAAO8e,EAAU,EAAI,EAAInY,EAAMmY,EAMfC,CAAc1e,EAAKwe,EAAS3e,GACPF,OAAQ6e,GA8BhC3C,CAAahc,EAAOoD,EAActD,GACzCgB,EAAQ,CAAEV,IAAKpI,EAAKoI,IAAKD,IAAKnI,EAAKmI,KAKzC,OAHAH,EAAMhI,EAAKoI,KAAKpI,EAAKmI,KAAO,IAC5BU,GAAgB0C,EAAazC,GAEtB5Q,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB7Y,QAAOE,YAAWzC,QAAOuD,cAAaH,aAActC,EAAOhB,OAAQ9H,EAAK8H,UC/ChFmc,GArBiB,WAA6C,IAA5Cb,EAA4CziB,UAAAmH,OAAA,QAAA3D,IAAAxD,UAAA,GAAAA,UAAA,GAA7B4E,KAAU2e,EAAmBvjB,UAAAmH,OAAA,EAAAnH,UAAA,QAAAwD,EACzE,OAAQ+f,EAAOjd,MACX,KAAKkd,GACD,OAAOhJ,GAAO7W,QAAQ4f,EAAO7c,SAAU+b,GAC3C,KAAKe,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAO5e,KACX,KAAK4e,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB9Y,SAAS,EAAO8Z,MAAOF,EAAO7c,SAAW,IAChE,QACI,OAAO+b,iBCjBTiB,iBAKOC,IALjB,SAAUD,KAAV,IAAAhkB,EAAA,OAAAb,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OADrBF,EAAAE,KAAA,EAC2BukB,aAAKC,KAAMzmB,IAAP,qBAAAU,OAAiC6K,GAAU3R,KAD1E,OAEI,OADM0I,EADVP,EAAAS,KAAAT,EAAAE,KAAA,EAEUykB,clGsCmBrd,EkGtCF/G,EAAS+G,KlGuCzB,CAAEH,KAAMC,GAA2BG,QAASD,KkGzCvD,wBAAAtH,EAAAU,OlGwCO,IAAsB4G,GkGxC7B0f,IAKO,SAAUxC,KAAV,OAAA9kB,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACH,OADGgB,EAAAhB,KAAA,EACG2kB,aAAK7d,IADR,OAEH,OAFG9F,EAAAhB,KAAA,EAEG4kB,aAAKP,IAFR,wBAAArjB,EAAAR,SAAAumB,ICLP,IA8BelE,eA9BS,SAAAvjB,GAAA,IAAG0nB,EAAH1nB,EAAG0nB,mBAAH,OAAA9uB,OAAAgN,EAAA,EAAAhN,CAAA,GACjB8uB,IAGoB,SAACjE,GAAD,MAAyC,CAChErX,kBAAmB,SAACtE,GAChB2b,EAASlI,GAAoBzT,KAGjCyD,mBAAoB,WAChBkY,EAASlI,OAGb/P,sBAAuB,WACnBiY,EAASlI,OAGb1Q,uBAAwB,WACpB4Y,EAASlI,OAGb9P,uBAAwB,WACpBgY,EAASlI,OAGbjR,wBAAyB,WACrBmZ,EAASlI,SAIFgI,CAA6CG,IClCtDC,GAAU,SAAA3jB,EAAsBlH,EAAW8qB,GAAjC,IAAG9a,EAAH9I,EAAG8I,IAAKD,EAAR7I,EAAQ6I,IAAR,OAAgDC,IAAQhQ,GAAK+P,IAAQ+a,GAsDtE/H,GAhCA,SAACnP,EAAeoX,GAAwB,IAE3ChY,EAAkCgY,EAAlChY,aAAcZ,EAAoB4Y,EAApB5Y,OAAQH,EAAY+Y,EAAZ/Y,QAExBI,EAAqB2Y,EAAM3Y,UAAa2Y,EAAM3Y,WAAY,IAAI4Y,MAAOC,UAE3E,GAAIjZ,EACA,OAAO+Y,EAGX,IAAM7Y,EAAQ6Y,EAAM7Y,MAAQ,EACtBvC,EA5BU,SAACA,EAA8Bc,EAAckD,GAA7C,OAChBhE,EAAM1Q,IAAI,SAAC8Q,EAAKmb,GACZ,OAAOnb,EAAI9Q,IAAI,SAACqiB,EAAM6J,GAAP,OAAoBP,GAAQna,EAAOya,EAAUC,GAAYxX,EAAQ2N,MA0BtE8J,CAAYL,EAAMpb,MAAOoD,EAAcY,GAC/CT,EAhCa,SAACvD,GAAD,OACnBA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,iBAAO,OA+BZosB,CAAeN,EAAM7X,aAEzC,GA1Be,SAACD,EAADzK,EAA4DmL,GAA5D,IAAyC5D,EAAzCvH,EAAyCuH,IAAKD,EAA9CtH,EAA8CsH,IAA9C,OACdmD,EAAclD,GAAKD,KAAS6D,EAyBzB2X,CAAWP,EAAM9X,cAAeF,EAAcY,GAG9C,OAFAnD,GAAgB0C,EAAaH,GAC7BG,EAAYH,EAAahD,KAAKgD,EAAajD,KAAO,CAAE5P,gBAAiB,OAC9DL,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWF,QAAOC,OAAQA,EAAS,EAAGxC,QAAOuD,gBAGpE,GA7Be,SAACvD,EAA8Bc,GAC9C,IAAMV,EAAMJ,EAAMF,OAAS,EACrBK,EAAMH,EAAMI,GAAKN,OAAS,EAChC,OAAOmb,GAAQna,EAAOV,EAAKD,GA0BvB0b,CAAW7b,EAAOoD,GAAe,CACjC,IAAMV,GAAa,IAAI2Y,MAAOC,UAC9B,OAAOprB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWC,aAAYH,QAAOvC,QAAOuD,cAAalB,SAAS,IAGlF,IAAM0Z,EA5BW,SAAC/b,EAADuQ,GAAA,IAAiCnQ,EAAjCmQ,EAAiCnQ,IAAKD,EAAtCoQ,EAAsCpQ,IAAtC,OAChBA,IAAQH,EAAMI,GAAKN,OAAS,EAAK,CAAEM,IAAKA,EAAM,EAAGD,IAAK,GAAM,CAAEC,MAAKD,IAAKA,EAAM,GA2B7D6b,CAAahc,EAAOoD,GAItC,OAHApD,EAAM+b,EAAU3b,KAAK2b,EAAU5b,KAAO,IACtCU,GAAgB0C,EAAawY,GAEtB7rB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB7Y,QAAOE,YAAWzC,QAAOuD,cAAaH,aAAc2Y,KC1B5DE,GArBiB,WAA6C,IAA5Cb,EAA4CziB,UAAAmH,OAAA,QAAA3D,IAAAxD,UAAA,GAAAA,UAAA,GAA7B4E,KAAU2e,EAAmBvjB,UAAAmH,OAAA,EAAAnH,UAAA,QAAAwD,EACzE,OAAQ+f,EAAOjd,MACX,KAAKkd,GACD,OAAOhJ,GAAO9N,OAAO6W,EAAO7c,SAAU+b,GAC1C,KAAKe,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAO5e,KACX,KAAK4e,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB9Y,SAAS,EAAO8Z,MAAOF,EAAO7c,SAAW,IAChE,QACI,OAAO+b,iBCjBTiB,iBAKOC,IALjB,SAAUD,KAAV,IAAAhkB,EAAA,OAAAb,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OADrBF,EAAAE,KAAA,EAC2BukB,aAAKC,KAAMzmB,IAAP,qBAAAU,OAAiC6K,GAAU3R,KAD1E,OAEI,OADM0I,EADVP,EAAAS,KAAAT,EAAAE,KAAA,EAEUykB,c1FsCmBrd,E0FtCF/G,EAAS+G,K1FuCzB,CAAEH,KAAMC,GAA2BG,QAASD,K0FzCvD,wBAAAtH,EAAAU,O1FwCO,IAAsB4G,G0FxC7B6f,IAKO,SAAU3C,KAAV,OAAA9kB,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACH,OADGgB,EAAAhB,KAAA,EACG2kB,aAAK7d,IADR,OAEH,OAFG9F,EAAAhB,KAAA,EAEG4kB,aAAKP,IAFR,wBAAArjB,EAAAR,SAAA0mB,ICLP,IA8BerE,eA9BS,SAAAvjB,GAAA,IAAG6nB,EAAH7nB,EAAG6nB,YAAH,OAAAjvB,OAAAgN,EAAA,EAAAhN,CAAA,GACjBivB,IAGoB,SAACpE,GAAD,MAAyC,CAChErX,kBAAmB,SAACtE,GAChB2b,EAASlI,GAAoBzT,KAGjCyD,mBAAoB,WAChBkY,EAASlI,OAGb/P,sBAAuB,WACnBiY,EAASlI,OAGb1Q,uBAAwB,WACpB4Y,EAASlI,OAGb9P,uBAAwB,WACpBgY,EAASlI,OAGbjR,wBAAyB,WACrBmZ,EAASlI,SAIFgI,CAA6CG,ICjCtDG,GAAc,SAACnb,GACjB,IAAMI,EAAMJ,EAAMF,OAAS,EAE3B,MAAO,CAAEM,MAAKD,IADFH,EAAMI,GAAKN,OAAS,IAI9Bmb,GAAU,SAAA3jB,EAAsBlH,EAAW8qB,GAAjC,IAAG9a,EAAH9I,EAAG8I,IAAKD,EAAR7I,EAAQ6I,IAAR,OAAgDC,IAAQhQ,GAAK+P,IAAQ+a,GAuDtE/H,GAlCA,SAACnP,EAAeoX,GAAwB,IAE3ChY,EAAkCgY,EAAlChY,aAAcZ,EAAoB4Y,EAApB5Y,OAAQH,EAAY+Y,EAAZ/Y,QAExBI,EAAqB2Y,EAAM3Y,UAAa2Y,EAAM3Y,WAAY,IAAI4Y,MAAOC,UAE3E,GAAIjZ,EACA,OAAO+Y,EAGX,IAAM7Y,EAAQ6Y,EAAM7Y,MAAQ,EACtBgB,EA9Ba,SAACvD,GAAD,OACnBA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,iBAAO,OA6BZosB,CAAeN,EAAM7X,aAEzC,GAxBe,SAACD,EAADzK,EAA4DmL,GAA5D,IAAyC5D,EAAzCvH,EAAyCuH,IAAKD,EAA9CtH,EAA8CsH,IAA9C,OACdmD,EAAclD,GAAKD,KAAS6D,EAuBzB2X,CAAWP,EAAM9X,cAAeF,EAAcY,GAG9C,OAFAT,EAAYH,EAAahD,KAAKgD,EAAajD,KAAO,CAAE5P,gBAAiB,OACrEsQ,GAAgB0C,EAAaH,GACtBlT,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWF,QAAOC,OAAQA,EAAS,EAAGe,gBAG7D,IAAMvD,EAnCU,SAACA,EAA8Bc,EAAckD,GAA7C,OAChBhE,EAAM1Q,IAAI,SAAC8Q,EAAKmb,GACZ,OAAOnb,EAAI9Q,IAAI,SAACqiB,EAAM6J,GAAP,OAAoBP,GAAQna,EAAOya,EAAUC,GAAYxX,EAAQ2N,MAiCtE8J,CAAYL,EAAMpb,MAAOoD,EAAcY,GAErD,GA7Be,SAAChE,EAA8Bc,GAA0B,IAAA8a,EACnDT,GAAYnb,GAAzBI,EADgEwb,EAChExb,IAAKD,EAD2Dyb,EAC3Dzb,IACb,OAAO8a,GAAQna,EAAOV,EAAKD,GA2BvB0b,CAAW7b,EAAOoD,GAAe,CACjC,IAAMV,GAAa,IAAI2Y,MAAOC,UACxBQ,EAAWX,GAAYnb,GAE7B,OADAuD,EAAYuY,EAAS1b,KAAK0b,EAAS3b,KAAO7P,EACnCJ,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWC,aAAYH,QAAOvC,QAAOuD,cAAalB,SAAS,IAGlF,IAAM0Z,EA/BW,SAAC/b,EAADuQ,GAAA,IAAiCnQ,EAAjCmQ,EAAiCnQ,IAAKD,EAAtCoQ,EAAsCpQ,IAAtC,OAChBA,IAAQH,EAAMI,GAAKN,OAAS,EAAK,CAAEM,IAAKA,EAAM,EAAGD,IAAK,GAAM,CAAEC,MAAKD,IAAKA,EAAM,GA8B7D6b,CAAahc,EAAOoD,GAGtC,OAFAvC,GAAgB0C,EAAawY,GAEtB7rB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB7Y,QAAOE,YAAWzC,QAAOuD,cAAaH,aAAc2Y,KClC5DE,GArBiB,WAA6C,IAA5Cb,EAA4CziB,UAAAmH,OAAA,QAAA3D,IAAAxD,UAAA,GAAAA,UAAA,GAA7B4E,KAAU2e,EAAmBvjB,UAAAmH,OAAA,EAAAnH,UAAA,QAAAwD,EACzE,OAAQ+f,EAAOjd,MACX,KAAKkd,GACD,OAAOhJ,GAAO9N,OAAO6W,EAAO7c,SAAU+b,GAC1C,KAAKe,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAO5e,KACX,KAAK4e,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB9Y,SAAS,EAAO8Z,MAAOF,EAAO7c,SAAW,IAChE,QACI,OAAO+b,iBCjBTiB,iBAKOC,IALjB,SAAUD,KAAV,IAAAhkB,EAAA,OAAAb,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OADrBF,EAAAE,KAAA,EAC2BukB,aAAKC,KAAMzmB,IAAP,qBAAAU,OAAiC6K,GAAU3R,KAD1E,OAEI,OADM0I,EADVP,EAAAS,KAAAT,EAAAE,KAAA,EAEUykB,ctEsCmBrd,EsEtCF/G,EAAS+G,KtEuCzB,CAAEH,KAAMC,GAA2BG,QAASD,KsEzCvD,wBAAAtH,EAAAU,OtEwCO,IAAsB4G,GsExC7BggB,IAKO,SAAU9C,KAAV,OAAA9kB,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACH,OADGgB,EAAAhB,KAAA,EACG2kB,aAAK7d,IADR,OAEH,OAFG9F,EAAAhB,KAAA,EAEG4kB,aAAKP,IAFR,wBAAArjB,EAAAR,SAAA6mB,ICLP,IA8BexE,eA9BS,SAAAvjB,GAAA,IAAGgoB,EAAHhoB,EAAGgoB,uBAAH,OAAApvB,OAAAgN,EAAA,EAAAhN,CAAA,GACjBovB,IAGoB,SAACvE,GAAD,MAAyC,CAChErX,kBAAmB,SAACtE,GAChB2b,EAASlI,GAAoBzT,KAGjCyD,mBAAoB,WAChBkY,EAASlI,OAGb/P,sBAAuB,WACnBiY,EAASlI,OAGb1Q,uBAAwB,WACpB4Y,EAASlI,OAGb9P,uBAAwB,WACpBgY,EAASlI,OAGbjR,wBAAyB,WACrBmZ,EAASlI,SAIFgI,CAA6CG,IC4B7C7H,GAlCA,SAACnP,EAAeoX,GAAwB,IAE3ChY,EAAkCgY,EAAlChY,aAAcZ,EAAoB4Y,EAApB5Y,OAAQH,EAAY+Y,EAAZ/Y,QAExBI,EAAqB2Y,EAAM3Y,UAAa2Y,EAAM3Y,WAAY,IAAI4Y,MAAOC,UAE3E,GAAIjZ,EACA,OAAO+Y,EAGX,IAAM7Y,EAAQ6Y,EAAM7Y,MAAQ,EACtBvC,EAhCU,SAACA,EAA8Bc,EAAckD,GAA7C,OAChBhE,EAAM1Q,IAAI,SAAC8Q,EAAKmb,GACZ,OAAOnb,EAAI9Q,IAAI,SAACqiB,EAAM6J,GAAP,OAPP,SAAAlkB,EAAsBlH,EAAW8qB,GAAjC,IAAG9a,EAAH9I,EAAG8I,IAAKD,EAAR7I,EAAQ6I,IAAR,OAAgDC,IAAQhQ,GAAK+P,IAAQ+a,EAO1CD,CAAQna,EAAOya,EAAUC,GAAYxX,EAAQ2N,MA8BtE8J,CAAYL,EAAMpb,MAAOoD,EAAcY,GAC/CT,EApCa,SAACvD,GAAD,OACnBA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,iBAAO,OAmCZosB,CAAeN,EAAM7X,aAEzC,GA9Be,SAACD,EAADzK,EAA4DmL,GAA5D,IAAyC5D,EAAzCvH,EAAyCuH,IAAKD,EAA9CtH,EAA8CsH,IAA9C,OACdmD,EAAclD,GAAKD,KAAS6D,EA6BzB2X,CAAWP,EAAM9X,cAAeF,EAAcY,GAG9C,OAFAT,EAAYH,EAAahD,KAAKgD,EAAajD,KAAO,CAAE5P,gBAAiB,OACrEsQ,GAAgB0C,EAAaH,EAAcgY,EAAMtb,OAAQE,GAClD9P,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWF,QAAOC,OAAQA,EAAS,EAAGxC,QAAOuD,gBAGpE,GAjCe,SAACvD,EAADuQ,GAAgE,IAA/BnQ,EAA+BmQ,EAA/BnQ,IAAKD,EAA0BoQ,EAA1BpQ,IACrD,OAAe,IAARC,GAAaD,IAAQH,EAAMI,GAAKN,OAAS,EAgC5C+b,CAAW7b,EAAOoD,GAAe,CACjC,IAAMV,GAAa,IAAI2Y,MAAOC,UAE9B,OADA/X,EAAY,GAAGA,EAAY,GAAGzD,OAAS,GAAKxP,EACrCJ,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWC,aAAYH,QAAOvC,QAAOuD,cAAalB,SAAS,IAGlF,IAAMrK,EAnCM,SAACgI,EAAD8V,EAAoDhW,GAAmB,IAAtCM,EAAsC0V,EAAtC1V,IAAKD,EAAiC2V,EAAjC3V,IAC5Cof,EAAYnf,EAAMN,IAAWE,EAAMF,OACnC0I,EAAa+W,EAAYzf,EAAS,EAAIA,EACtC4e,EAAUa,EAAY,EAAInf,EAAM,EAGtC,MAAO,CAAEA,IAAKse,EAASve,IAFPof,EAAYb,EAAUlW,EAAa,EAAIrI,EAAM,EAExBL,OAAQ0I,GA6BhCgX,CAAQxf,EAAOoD,EAAcgY,EAAMtb,QAC1Cic,EAAY,CAAE3b,IAAKpI,EAAKoI,IAAKD,IAAKnI,EAAKmI,KAI7C,OAHAH,EAAM+b,EAAU3b,KAAK2b,EAAU5b,KAAO,IACtCU,GAAgB0C,EAAawY,EAAW/jB,EAAK8H,OAAQE,GAE9C9P,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB7Y,QAAOE,YAAWzC,QAAOuD,cAAaH,aAAc2Y,EAAWjc,OAAQ9H,EAAK8H,UClCpFmc,GArBiB,WAA6C,IAA5Cb,EAA4CziB,UAAAmH,OAAA,QAAA3D,IAAAxD,UAAA,GAAAA,UAAA,GAA7B4E,KAAU2e,EAAmBvjB,UAAAmH,OAAA,EAAAnH,UAAA,QAAAwD,EACzE,OAAQ+f,EAAOjd,MACX,KAAKkd,GACD,OAAOhJ,GAAO9N,OAAO6W,EAAO7c,SAAU+b,GAC1C,KAAKe,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAO5e,KACX,KAAK4e,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB9Y,SAAS,EAAO8Z,MAAOF,EAAO7c,SAAW,IAChE,QACI,OAAO+b,iBCjBTiB,iBAKOC,IALjB,SAAUD,KAAV,IAAAhkB,EAAA,OAAAb,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OADrBF,EAAAE,KAAA,EAC2BukB,aAAKC,KAAMzmB,IAAP,qBAAAU,OAAiC6K,GAAU3R,KAD1E,OAEI,OADM0I,EADVP,EAAAS,KAAAT,EAAAE,KAAA,EAEUykB,chFsCmBrd,EgFtCF/G,EAAS+G,KhFuCzB,CAAEH,KAAMC,GAA2BG,QAASD,KgFzCvD,wBAAAtH,EAAAU,OhFwCO,IAAsB4G,GgFxC7BqgB,IAKO,SAAUnD,KAAV,OAAA9kB,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACH,OADGgB,EAAAhB,KAAA,EACG2kB,aAAK7d,IADR,OAEH,OAFG9F,EAAAhB,KAAA,EAEG4kB,aAAKP,IAFR,wBAAArjB,EAAAR,SAAAknB,ICLP,IA8Be7E,eA9BS,SAAAvjB,GAAA,IAAGqoB,EAAHroB,EAAGqoB,uBAAH,OAAAzvB,OAAAgN,EAAA,EAAAhN,CAAA,GACjByvB,IAGoB,SAAC5E,GAAD,MAAyC,CAChErX,kBAAmB,SAACtE,GAChB2b,EAASlI,GAAoBzT,KAGjCyD,mBAAoB,WAChBkY,EAASlI,OAGb/P,sBAAuB,WACnBiY,EAASlI,OAGb1Q,uBAAwB,WACpB4Y,EAASlI,OAGb9P,uBAAwB,WACpBgY,EAASlI,OAGbjR,wBAAyB,WACrBmZ,EAASlI,SAIFgI,CAA6CG,IClCtDC,GAAU,SAAA3jB,EAAsBlH,EAAW8qB,GAAjC,IAAG9a,EAAH9I,EAAG8I,IAAKD,EAAR7I,EAAQ6I,IAAR,OAAgDC,IAAQhQ,GAAK+P,IAAQ+a,GA2DtE/H,GAhCA,SAACnP,EAAeoX,GAAwB,IAE3ChY,EAAkCgY,EAAlChY,aAAcZ,EAAoB4Y,EAApB5Y,OAAQH,EAAY+Y,EAAZ/Y,QAExBI,EAAqB2Y,EAAM3Y,UAAa2Y,EAAM3Y,WAAY,IAAI4Y,MAAOC,UAE3E,GAAIjZ,EACA,OAAO+Y,EAGX,IAAM7Y,EAAQ6Y,EAAM7Y,MAAQ,EACtBvC,EAjCU,SAACA,EAA8Bc,EAAckD,GAA7C,OAChBhE,EAAM1Q,IAAI,SAAC8Q,EAAKmb,GACZ,OAAOnb,EAAI9Q,IAAI,SAACqiB,EAAM6J,GAAP,OAAoBP,GAAQna,EAAOya,EAAUC,GAAYxX,EAAQ2N,MA+BtE8J,CAAYL,EAAMpb,MAAOoD,EAAcY,GAC/CT,EArCa,SAACvD,GAAD,OACnBA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,iBAAO,OAoCZosB,CAAeN,EAAM7X,aAEzC,GA/Be,SAACD,EAADzK,EAA4DmL,GAA5D,IAAyC5D,EAAzCvH,EAAyCuH,IAAKD,EAA9CtH,EAA8CsH,IAA9C,OACdmD,EAAclD,GAAKD,KAAS6D,EA8BzB2X,CAAWP,EAAM9X,cAAeF,EAAcY,GAG9C,OAFAT,EAAYH,EAAahD,KAAKgD,EAAajD,KAAO,CAAE5P,gBAAiB,OAC1B6qB,EAAM9X,cAC1CpT,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWF,QAAOC,OAAQA,EAAS,EAAGxC,QAAOuD,gBAGpE,GAlCe,SAACvD,EAA8Bc,GAC9C,IAAMV,EAAMJ,EAAMF,OAAS,EACrBK,EAAMH,EAAMI,GAAKN,OAAS,EAChC,OAAOmb,GAAQna,EAAOV,EAAKD,GA+BvB0b,CAAW7b,EAAOoD,GAAe,CACjC,IAAMV,GAAa,IAAI2Y,MAAOC,UAC9B,OAAOprB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWC,aAAYH,QAAOvC,QAAOuD,cAAalB,SAAS,IAGlF,IAAM0Z,EAjCW,SAAC/b,EAADuQ,GAA8D,IAA7BnQ,EAA6BmQ,EAA7BnQ,IAAKD,EAAwBoQ,EAAxBpQ,IACvD,OAAY,IAARC,EACO,CAAEA,IAAKA,EAAM,EAAGD,OAEhB,CAAEC,IAAK,EAAGD,IAAKA,EAAM,GA6Bd6b,CAAahc,EAAOoD,GAItC,OAHApD,EAAM+b,EAAU3b,KAAK2b,EAAU5b,KAAO,IACEib,EAAM9X,cAEvCpT,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB7Y,QAAOE,YAAWzC,QAAOuD,cAAaH,aAAc2Y,KC/B5DE,GArBiB,WAA6C,IAA5Cb,EAA4CziB,UAAAmH,OAAA,QAAA3D,IAAAxD,UAAA,GAAAA,UAAA,GAA7B4E,KAAU2e,EAAmBvjB,UAAAmH,OAAA,EAAAnH,UAAA,QAAAwD,EACzE,OAAQ+f,EAAOjd,MACX,KAAKkd,GACD,OAAOhJ,GAAO9N,OAAO6W,EAAO7c,SAAU+b,GAC1C,KAAKe,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAO5e,KACX,KAAK4e,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB9Y,SAAS,EAAO8Z,MAAOF,EAAO7c,SAAW,IAChE,QACI,OAAO+b,iBCjBTiB,iBAKOC,IALjB,SAAUD,KAAV,IAAAhkB,EAAA,OAAAb,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OADrBF,EAAAE,KAAA,EAC2BukB,aAAKC,KAAMzmB,IAAP,qBAAAU,OAAiC6K,GAAU3R,KAD1E,OAEI,OADM0I,EADVP,EAAAS,KAAAT,EAAAE,KAAA,EAEUykB,c5GsCmBrd,E4GtCF/G,EAAS+G,K5GuCzB,CAAEH,KAAMC,GAA2BG,QAASD,K4GzCvD,wBAAAtH,EAAAU,O5GwCO,IAAsB4G,G4GxC7BwgB,IAKO,SAAUtD,KAAV,OAAA9kB,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACH,OADGgB,EAAAhB,KAAA,EACG2kB,aAAK7d,IADR,OAEH,OAFG9F,EAAAhB,KAAA,EAEG4kB,aAAKP,IAFR,wBAAArjB,EAAAR,SAAAqnB,ICLP,IA8BehF,eA9BS,SAAAvjB,GAAA,IAAGwoB,EAAHxoB,EAAGwoB,uBAAH,OAAA5vB,OAAAgN,EAAA,EAAAhN,CAAA,GACjB4vB,IAGoB,SAAC/E,GAAD,MAAyC,CAChErX,kBAAmB,SAACtE,GAChB2b,EAASlI,GAAoBzT,KAGjCyD,mBAAoB,WAChBkY,EAASlI,OAGb/P,sBAAuB,WACnBiY,EAASlI,OAGb1Q,uBAAwB,WACpB4Y,EAASlI,OAGb9P,uBAAwB,WACpBgY,EAASlI,OAGbjR,wBAAyB,WACrBmZ,EAASlI,SAIFgI,CAA6CG,ICjCtDC,GAAU,SAAA3jB,EAAsBlH,EAAW8qB,GAAjC,IAAG9a,EAAH9I,EAAG8I,IAAKD,EAAR7I,EAAQ6I,IAAR,OAAgDC,IAAQhQ,GAAK+P,IAAQ+a,GAE/EC,GAAc,SAACnb,GACjB,IAAMI,EAAMJ,EAAMF,OAAS,EAE3B,MAAO,CAAEM,MAAKD,IADFH,EAAMI,GAAKN,OAAS,IA8DrBqT,GAlCA,SAACnP,EAAeoX,GAAwB,IAE3ChY,EAAkCgY,EAAlChY,aAAcZ,EAAoB4Y,EAApB5Y,OAAQH,EAAY+Y,EAAZ/Y,QAExBI,EAAqB2Y,EAAM3Y,UAAa2Y,EAAM3Y,WAAY,IAAI4Y,MAAOC,UAE3E,GAAIjZ,EACA,OAAO+Y,EAGX,IAAM7Y,EAAQ6Y,EAAM7Y,MAAQ,EACtBvC,EAhCU,SAACA,EAA8Bc,EAAckD,GAA7C,OAChBhE,EAAM1Q,IAAI,SAAC8Q,EAAKmb,GACZ,OAAOnb,EAAI9Q,IAAI,SAACqiB,EAAM6J,GAAP,OAAoBP,GAAQna,EAAOya,EAAUC,GAAYxX,EAAQ2N,MA8BtE8J,CAAYL,EAAMpb,MAAOoD,EAAcY,GAC/CT,EApCa,SAACvD,GAAD,OACnBA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,iBAAO,OAmCZosB,CAAeN,EAAM7X,aAEzC,GA9Be,SAACD,EAADzK,EAA4DmL,GAA2B,IAA9C5D,EAA8CvH,EAA9CuH,IAAKD,EAAyCtH,EAAzCsH,IAC7D,OAAe,IAAX6D,EACQV,EAAclD,GAAKD,KAASgF,IAE5B7B,EAAclD,GAAKD,KAAS6D,EA0BpC2X,CAAWP,EAAM9X,cAAeF,EAAcY,GAG9C,OAFAT,EAAYH,EAAahD,KAAKgD,EAAajD,KAAO,CAAE5P,gBAAiB,OACrEsQ,GAAgB0C,EAAaH,EAAcgY,EAAMpb,OAC1C9P,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWF,QAAOC,OAAQA,EAAS,EAAGxC,QAAOuD,gBAGpE,GA5Be,SAACvD,EAA8Bc,GAA0B,IAAA8a,EACnDT,GAAYnb,GAAzBI,EADgEwb,EAChExb,IAAKD,EAD2Dyb,EAC3Dzb,IACb,OAAO8a,GAAQna,EAAOV,EAAKD,GA0BvB0b,CAAW7b,EAAOoD,GAAe,CACjC,IAAMV,GAAa,IAAI2Y,MAAOC,UACxBQ,EAAWX,GAAYnb,GAE7B,OADAuD,EAAYuY,EAAS1b,KAAK0b,EAAS3b,KAAO7P,EACnCJ,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWC,aAAYH,QAAOvC,QAAOuD,cAAalB,SAAS,IAGlF,IAAM0Z,EA9BW,SAAC/b,EAADuQ,GAAA,IAAiCnQ,EAAjCmQ,EAAiCnQ,IAAKD,EAAtCoQ,EAAsCpQ,IAAtC,OAChBA,IAAQH,EAAMI,GAAKN,OAAS,EAAK,CAAEM,IAAKA,EAAM,EAAGD,IAAK,GAAM,CAAEC,MAAKD,IAAKA,EAAM,GA6B7D6b,CAAahc,EAAOoD,GAItC,OAHApD,EAAM+b,EAAU3b,KAAK2b,EAAU5b,KAAO,IACtCU,GAAgB0C,EAAawY,EAAWX,EAAMpb,OAEvC9P,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB7Y,QAAOE,YAAWzC,QAAOuD,cAAaH,aAAc2Y,KCvC5DE,GArBiB,WAA6C,IAA5Cb,EAA4CziB,UAAAmH,OAAA,QAAA3D,IAAAxD,UAAA,GAAAA,UAAA,GAA7B4E,KAAU2e,EAAmBvjB,UAAAmH,OAAA,EAAAnH,UAAA,QAAAwD,EACzE,OAAQ+f,EAAOjd,MACX,KAAKkd,GACD,OAAOhJ,GAAO9N,OAAO6W,EAAO7c,SAAU+b,GAC1C,KAAKe,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAO5e,KACX,KAAK4e,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB9Y,SAAS,EAAO8Z,MAAOF,EAAO7c,SAAW,IAChE,QACI,OAAO+b,iBCjBTiB,iBAKOC,IALjB,SAAUD,KAAV,IAAAhkB,EAAA,OAAAb,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OADrBF,EAAAE,KAAA,EAC2BukB,aAAKC,KAAMzmB,IAAP,qBAAAU,OAAiC6K,GAAU3R,KAD1E,OAEI,OADM0I,EADVP,EAAAS,KAAAT,EAAAE,KAAA,EAEUykB,c5KsCmBrd,E4KtCF/G,EAAS+G,K5KuCzB,CAAEH,KAAMC,GAA2BG,QAASD,K4KzCvD,wBAAAtH,EAAAU,O5KwCO,IAAsB4G,G4KxC7B2gB,IAKO,SAAUzD,KAAV,OAAA9kB,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACH,OADGgB,EAAAhB,KAAA,EACG2kB,aAAK7d,IADR,OAEH,OAFG9F,EAAAhB,KAAA,EAEG4kB,aAAKP,IAFR,wBAAArjB,EAAAR,SAAAwnB,ICLP,IA8BenF,eA9BS,SAAAvjB,GAAA,IAAG2oB,EAAH3oB,EAAG2oB,sBAAH,OAAA/vB,OAAAgN,EAAA,EAAAhN,CAAA,GACjB+vB,IAGoB,SAAClF,GAAD,MAAyC,CAChErX,kBAAmB,SAACtE,GAChB2b,EAASlI,GAAoBzT,KAGjCyD,mBAAoB,WAChBkY,EAASlI,OAGb/P,sBAAuB,WACnBiY,EAASlI,OAGb1Q,uBAAwB,WACpB4Y,EAASlI,OAGb9P,uBAAwB,WACpBgY,EAASlI,OAGbjR,wBAAyB,WACrBmZ,EAASlI,SAIFgI,CAA6CG,ICjCtDC,GAAU,SAAA3jB,EAAsBlH,EAAW8qB,GAAjC,IAAG9a,EAAH9I,EAAG8I,IAAKD,EAAR7I,EAAQ6I,IAAR,OAAgDC,IAAQhQ,GAAK+P,IAAQ+a,GAE/EC,GAAc,SAACnb,GACjB,IAAMI,EAAMJ,EAAMF,OAAS,EAE3B,MAAO,CAAEM,MAAKD,IADFH,EAAMI,GAAKN,OAAS,IAyDrBqT,GAlCA,SAACnP,EAAeoX,GAAwB,IAE3ChY,EAAkCgY,EAAlChY,aAAcZ,EAAoB4Y,EAApB5Y,OAAQH,EAAY+Y,EAAZ/Y,QAExBI,EAAqB2Y,EAAM3Y,UAAa2Y,EAAM3Y,WAAY,IAAI4Y,MAAOC,UAE3E,GAAIjZ,EACA,OAAO+Y,EAGX,IAAM7Y,EAAQ6Y,EAAM7Y,MAAQ,EACtBvC,EA3BU,SAACA,EAA8Bc,EAAckD,GAA7C,OAChBhE,EAAM1Q,IAAI,SAAC8Q,EAAKmb,GACZ,OAAOnb,EAAI9Q,IAAI,SAACqiB,EAAM6J,GAAP,OAAoBP,GAAQna,EAAOya,EAAUC,GAAYxX,EAAQ2N,MAyBtE8J,CAAYL,EAAMpb,MAAOoD,EAAcY,GAC/CT,EA/Ba,SAACvD,GAAD,OACnBA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,iBAAO,OA8BZosB,CAAeN,EAAM7X,aAEzC,GAzBe,SAACD,EAADzK,EAA4DmL,GAA5D,IAAyC5D,EAAzCvH,EAAyCuH,IAAKD,EAA9CtH,EAA8CsH,IAA9C,OACdmD,EAAclD,GAAKD,KAAS6D,EAwBzB2X,CAAWP,EAAM9X,cAAeF,EAAcY,GAG9C,OAFAT,EAAYH,EAAahD,KAAKgD,EAAajD,KAAO,CAAE5P,gBAAiB,OACrEsQ,GAAgB0C,EAAaH,EAAcgY,EAAMpb,OAC1C9P,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWF,QAAOC,OAAQA,EAAS,EAAGxC,QAAOuD,gBAGpE,GA5Be,SAACvD,EAA8Bc,GAA0B,IAAA8a,EACnDT,GAAYnb,GAAzBI,EADgEwb,EAChExb,IAAKD,EAD2Dyb,EAC3Dzb,IACb,OAAO8a,GAAQna,EAAOV,EAAKD,GA0BvB0b,CAAW7b,EAAOoD,GAAe,CACjC,IAAMV,GAAa,IAAI2Y,MAAOC,UACxBQ,EAAWX,GAAYnb,GAE7B,OADAuD,EAAYuY,EAAS1b,KAAK0b,EAAS3b,KAAO7P,EACnCJ,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWC,aAAYH,QAAOvC,QAAOuD,cAAalB,SAAS,IAGlF,IAAM0Z,EA9BW,SAAC/b,EAADuQ,GAAA,IAAiCnQ,EAAjCmQ,EAAiCnQ,IAAKD,EAAtCoQ,EAAsCpQ,IAAtC,OAChBA,IAAQH,EAAMI,GAAKN,OAAS,EAAK,CAAEM,IAAKA,EAAM,EAAGD,IAAK,GAAM,CAAEC,MAAKD,IAAKA,EAAM,GA6B7D6b,CAAahc,EAAOoD,GAItC,OAHApD,EAAM+b,EAAU3b,KAAK2b,EAAU5b,KAAO,IACtCU,GAAgB0C,EAAawY,EAAWX,EAAMpb,OAEvC9P,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB7Y,QAAOE,YAAWzC,QAAOuD,cAAaH,aAAc2Y,KClC5DE,GArBiB,WAA6C,IAA5Cb,EAA4CziB,UAAAmH,OAAA,QAAA3D,IAAAxD,UAAA,GAAAA,UAAA,GAA7B4E,KAAU2e,EAAmBvjB,UAAAmH,OAAA,EAAAnH,UAAA,QAAAwD,EACzE,OAAQ+f,EAAOjd,MACX,KAAKkd,GACD,OAAOhJ,GAAO9N,OAAO6W,EAAO7c,SAAU+b,GAC1C,KAAKe,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAO5e,KACX,KAAK4e,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB9Y,SAAS,EAAO8Z,MAAOF,EAAO7c,SAAW,IAChE,QACI,OAAO+b,iBCjBTiB,iBAKOC,IALjB,SAAUD,KAAV,IAAAhkB,EAAA,OAAAb,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OADrBF,EAAAE,KAAA,EAC2BukB,aAAKC,KAAMzmB,IAAP,qBAAAU,OAAiC6K,GAAU3R,KAD1E,OAEI,OADM0I,EADVP,EAAAS,KAAAT,EAAAE,KAAA,EAEUykB,c1KsCmBrd,E0KtCF/G,EAAS+G,K1KuCzB,CAAEH,KAAMC,GAA2BG,QAASD,K0KzCvD,wBAAAtH,EAAAU,O1KwCO,IAAsB4G,G0KxC7B8gB,IAKO,SAAU5D,KAAV,OAAA9kB,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACH,OADGgB,EAAAhB,KAAA,EACG2kB,aAAK7d,IADR,OAEH,OAFG9F,EAAAhB,KAAA,EAEG4kB,aAAKP,IAFR,wBAAArjB,EAAAR,SAAA2nB,ICLP,IA8BetF,eA9BS,SAAAvjB,GAAA,IAAG8oB,EAAH9oB,EAAG8oB,yBAAH,OAAAlwB,OAAAgN,EAAA,EAAAhN,CAAA,GACjBkwB,IAGoB,SAACrF,GAAD,MAAyC,CAChErX,kBAAmB,SAACtE,GAChB2b,EAASlI,GAAoBzT,KAGjCyD,mBAAoB,WAChBkY,EAASlI,OAGb/P,sBAAuB,WACnBiY,EAASlI,OAGb1Q,uBAAwB,WACpB4Y,EAASlI,OAGb9P,uBAAwB,WACpBgY,EAASlI,OAGbjR,wBAAyB,WACrBmZ,EAASlI,SAIFgI,CAA6CG,ICjCtDG,GAAc,SAACnb,GACjB,IAAMI,EAAMJ,EAAMF,OAAS,EAE3B,MAAO,CAAEM,MAAKD,IADFH,EAAMI,GAAKN,OAAS,IAI9Bmb,GAAU,SAAA3jB,EAAsBlH,EAAW8qB,GAAjC,IAAG9a,EAAH9I,EAAG8I,IAAKD,EAAR7I,EAAQ6I,IAAR,OAAgDC,IAAQhQ,GAAK+P,IAAQ+a,GAuDtE/H,GAlCA,SAACnP,EAAeoX,GAAwB,IAE3ChY,EAAkCgY,EAAlChY,aAAcZ,EAAoB4Y,EAApB5Y,OAAQH,EAAY+Y,EAAZ/Y,QAExBI,EAAqB2Y,EAAM3Y,UAAa2Y,EAAM3Y,WAAY,IAAI4Y,MAAOC,UAE3E,GAAIjZ,EACA,OAAO+Y,EAGX,IAAM7Y,EAAQ6Y,EAAM7Y,MAAQ,EACtBvC,EA3BU,SAACA,EAA8Bc,EAAckD,GAA7C,OAChBhE,EAAM1Q,IAAI,SAAC8Q,EAAKmb,GACZ,OAAOnb,EAAI9Q,IAAI,SAACqiB,EAAM6J,GAAP,OAAoBP,GAAQna,EAAOya,EAAUC,GAAYxX,EAAQ2N,MAyBtE8J,CAAYL,EAAMpb,MAAOoD,EAAcY,GAC/CT,EA/Ba,SAACvD,GAAD,OACnBA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,iBAAO,OA8BZosB,CAAeN,EAAM7X,aAEzC,GAzBe,SAACD,EAADzK,EAA4DmL,GAA5D,IAAyC5D,EAAzCvH,EAAyCuH,IAAKD,EAA9CtH,EAA8CsH,IAA9C,OACdmD,EAAclD,GAAKD,KAAS6D,EAwBzB2X,CAAWP,EAAM9X,cAAeF,EAAcY,GAG9C,OAFAT,EAAYH,EAAahD,KAAKgD,EAAajD,KAAO,CAAE5P,gBAAiB,OACrEsQ,GAAgB0C,EAAaH,GACtBlT,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWF,QAAOC,OAAQA,EAAS,EAAGxC,QAAOuD,gBAGpE,GA5Be,SAACvD,EAA8Bc,GAA0B,IAAA8a,EACnDT,GAAYnb,GAAzBI,EADgEwb,EAChExb,IAAKD,EAD2Dyb,EAC3Dzb,IACb,OAAO8a,GAAQna,EAAOV,EAAKD,GA0BvB0b,CAAW7b,EAAOoD,GAAe,CACjC,IAAMV,GAAa,IAAI2Y,MAAOC,UACxBQ,EAAWX,GAAYnb,GAE7B,OADAuD,EAAYuY,EAAS1b,KAAK0b,EAAS3b,KAAO7P,EACnCJ,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWC,aAAYH,QAAOvC,QAAOuD,cAAalB,SAAS,IAGlF,IAAM0Z,EA9BW,SAAC/b,EAADuQ,GAAA,IAAiCnQ,EAAjCmQ,EAAiCnQ,IAAKD,EAAtCoQ,EAAsCpQ,IAAtC,OAChBA,IAAQH,EAAMI,GAAKN,OAAS,EAAK,CAAEM,IAAKA,EAAM,EAAGD,IAAK,GAAM,CAAEC,MAAKD,IAAKA,EAAM,GA6B7D6b,CAAahc,EAAOoD,GAItC,OAHApD,EAAM+b,EAAU3b,KAAK2b,EAAU5b,KAAO,IACtCU,GAAgB0C,EAAawY,GAEtB7rB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB7Y,QAAOE,YAAWzC,QAAOuD,cAAaH,aAAc2Y,KClC5DE,GArBiB,WAA6C,IAA5Cb,EAA4CziB,UAAAmH,OAAA,QAAA3D,IAAAxD,UAAA,GAAAA,UAAA,GAA7B4E,KAAU2e,EAAmBvjB,UAAAmH,OAAA,EAAAnH,UAAA,QAAAwD,EACzE,OAAQ+f,EAAOjd,MACX,KAAKkd,GACD,OAAOhJ,GAAO9N,OAAO6W,EAAO7c,SAAU+b,GAC1C,KAAKe,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAO5e,KACX,KAAK4e,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB9Y,SAAS,EAAO8Z,MAAOF,EAAO7c,SAAW,IAChE,QACI,OAAO+b,iBCjBTiB,iBAKOC,IALjB,SAAUD,KAAV,IAAAhkB,EAAA,OAAAb,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OADrBF,EAAAE,KAAA,EAC2BukB,aAAKC,KAAMzmB,IAAP,qBAAAU,OAAiC6K,GAAU3R,KAD1E,OAEI,OADM0I,EADVP,EAAAS,KAAAT,EAAAE,KAAA,EAEUykB,clKsCmBrd,EkKtCF/G,EAAS+G,KlKuCzB,CAAEH,KAAMC,GAA2BG,QAASD,KkKzCvD,wBAAAtH,EAAAU,OlKwCO,IAAsB4G,GkKxC7BihB,IAKO,SAAU/D,KAAV,OAAA9kB,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACH,OADGgB,EAAAhB,KAAA,EACG2kB,aAAK7d,IADR,OAEH,OAFG9F,EAAAhB,KAAA,EAEG4kB,aAAKP,IAFR,wBAAArjB,EAAAR,SAAA8nB,ICLP,IA8BezF,eA9BS,SAAAvjB,GAAA,IAAGipB,EAAHjpB,EAAGipB,uBAAH,OAAArwB,OAAAgN,EAAA,EAAAhN,CAAA,GACjBqwB,IAGoB,SAACxF,GAAD,MAAyC,CAChErX,kBAAmB,SAACtE,GAChB2b,EAASlI,GAAoBzT,KAGjCyD,mBAAoB,WAChBkY,EAASlI,OAGb/P,sBAAuB,WACnBiY,EAASlI,OAGb1Q,uBAAwB,WACpB4Y,EAASlI,OAGb9P,uBAAwB,WACpBgY,EAASlI,OAGbjR,wBAAyB,WACrBmZ,EAASlI,SAIFgI,CAA6CG,ICjCtDC,GAAU,SAAA3jB,EAAsBlH,EAAW8qB,GAAjC,IAAG9a,EAAH9I,EAAG8I,IAAKD,EAAR7I,EAAQ6I,IAAR,OAAgDC,IAAQhQ,GAAK+P,IAAQ+a,GAE/EQ,GAAiB,SAAC1b,GAAD,OACnBA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,iBAAO,QA8B9BkxB,GAAoB,SAACpF,GAIvB,IAHA,IAAMqF,EAAW/E,GAAeN,EAAM7X,aAChCvD,EAAQob,EAAM9X,cACdL,EAbK,SAACjD,GAEZ,IADA,IAAIiD,EAAM,EACD7C,EAAM,EAAGA,EAAMJ,EAAMF,OAAQM,IAClC,IAAK,IAAID,EAAM,EAAGA,EAAMH,EAAMI,GAAKN,OAAQK,IACvC8C,EAAM1C,KAAK0C,IAAIA,EAAKoC,OAAOrF,EAAMI,GAAKD,KAG9C,OAAO8C,EAMKyd,CAAO1gB,GACVI,EAAM,EAAGA,EAAMJ,EAAMF,OAAQM,IAClC,IAAK,IAAID,EAAM,EAAGA,EAAMH,EAAMI,GAAKN,OAAQK,IACnCH,EAAMI,GAAKD,KAAS8C,IACpBwd,EAASrgB,GAAKD,GAAO7P,GAIjC,OAAOmwB,GAoCItN,GAjCA,SAACnP,EAAeoX,GAAwB,IAE3ChY,EAAkCgY,EAAlChY,aAAcZ,EAAoB4Y,EAApB5Y,OAAQH,EAAY+Y,EAAZ/Y,QAExBI,EAAqB2Y,EAAM3Y,UAAa2Y,EAAM3Y,WAAY,IAAI4Y,MAAOC,UAE3E,GAAIjZ,EACA,OAAO+Y,EAGX,IAAM7Y,EAAQ6Y,EAAM7Y,MAAQ,EACtBvC,EArDU,SAACA,EAA8Bc,EAAckD,GAA7C,OAChBhE,EAAM1Q,IAAI,SAAC8Q,EAAKmb,GACZ,OAAOnb,EAAI9Q,IAAI,SAACqiB,EAAM6J,GAAP,OAAoBP,GAAQna,EAAOya,EAAUC,GAAYxX,EAAQ2N,MAmDtE8J,CAAYL,EAAMpb,MAAOoD,EAAcY,GAC/CT,EAAcmY,GAAeN,EAAM7X,aAEzC,GAnDe,SAACD,EAADzK,EAA4DmL,GAA5D,IAAyC5D,EAAzCvH,EAAyCuH,IAAKD,EAA9CtH,EAA8CsH,IAA9C,OACdmD,EAAclD,GAAKD,KAAS6D,EAkDzB2X,CAAWP,EAAM9X,cAAeF,EAAcY,GAG9C,OAFAT,EAAYH,EAAahD,KAAKgD,EAAajD,KAAO,CAAE5P,gBAAiB,OACrEsQ,GAAgB0C,EAAaH,GACtBlT,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWF,QAAOC,OAAQA,EAAS,EAAGxC,QAAOuD,gBAGpE,GAtDe,SAACvD,EAA8Bc,GAC9C,IAAMV,EAAMJ,EAAMF,OAAS,EACrBK,EAAMH,EAAMI,GAAKN,OAAS,EAChC,OAAOmb,GAAQna,EAAOV,EAAKD,GAmDvB0b,CAAW7b,EAAOoD,GAAe,CACjC,IAAMV,GAAa,IAAI2Y,MAAOC,UACxBqF,EAAgBH,GAAkBpF,GACxC,OAAOlrB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWC,aAAYH,QAAOvC,QAAOuD,YAAaod,EAAete,SAAS,IAGjG,IAAM0Z,EAtDW,SAAC/b,EAADuQ,GAA8D,IAA7BnQ,EAA6BmQ,EAA7BnQ,IAAKD,EAAwBoQ,EAAxBpQ,IACvD,OAAQA,IAAQH,EAAMI,GAAKN,OAAS,EAAK,CAAEM,IAAKA,EAAM,EAAGD,IAAK,GAAM,CAAEC,MAAKD,IAAKA,EAAM,GAqDpE6b,CAAahc,EAAOoD,GAItC,OAHApD,EAAM+b,EAAU3b,KAAK2b,EAAU5b,KAAO,IACtCU,GAAgB0C,EAAawY,GAEtB7rB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB7Y,QAAOE,YAAWzC,QAAOuD,cAAaH,aAAc2Y,KCrD5DE,GArBiB,WAA6C,IAA5Cb,EAA4CziB,UAAAmH,OAAA,QAAA3D,IAAAxD,UAAA,GAAAA,UAAA,GAA7B4E,KAAU2e,EAAmBvjB,UAAAmH,OAAA,EAAAnH,UAAA,QAAAwD,EACzE,OAAQ+f,EAAOjd,MACX,KAAKkd,GACD,OAAOhJ,GAAO9N,OAAO6W,EAAO7c,SAAU+b,GAC1C,KAAKe,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAO5e,KACX,KAAK4e,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB9Y,SAAS,EAAO8Z,MAAOF,EAAO7c,SAAW,IAChE,QACI,OAAO+b,iBCjBTiB,iBAKOC,IALjB,SAAUD,KAAV,IAAAhkB,EAAA,OAAAb,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OADrBF,EAAAE,KAAA,EAC2BukB,aAAKC,KAAMzmB,IAAP,qBAAAU,OAAiC6K,GAAU3R,KAD1E,OAEI,OADM0I,EADVP,EAAAS,KAAAT,EAAAE,KAAA,EAEUykB,chKsCmBrd,EgKtCF/G,EAAS+G,KhKuCzB,CAAEH,KAAMC,GAA2BG,QAASD,KgKzCvD,wBAAAtH,EAAAU,OhKwCO,IAAsB4G,GgKxC7BwhB,IAKO,SAAUtE,KAAV,OAAA9kB,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACH,OADGgB,EAAAhB,KAAA,EACG2kB,aAAK7d,IADR,OAEH,OAFG9F,EAAAhB,KAAA,EAEG4kB,aAAKP,IAFR,wBAAArjB,EAAAR,SAAAqoB,ICLP,IA8BehG,eA9BS,SAAAvjB,GAAA,IAAGwpB,EAAHxpB,EAAGwpB,+BAAH,OAAA5wB,OAAAgN,EAAA,EAAAhN,CAAA,GACjB4wB,IAGoB,SAAC/F,GAAD,MAAyC,CAChErX,kBAAmB,SAACtE,GAChB2b,EAASlI,GAAoBzT,KAGjCyD,mBAAoB,WAChBkY,EAASlI,OAGb/P,sBAAuB,WACnBiY,EAASlI,OAGb1Q,uBAAwB,WACpB4Y,EAASlI,OAGb9P,uBAAwB,WACpBgY,EAASlI,OAGbjR,wBAAyB,WACrBmZ,EAASlI,SAIFgI,CAA6CG,IClCtD/X,GAAMoC,OAAOK,iBAWb+V,GAAc,SAACzb,EAA8Bc,EAAckD,GAA7C,OAChBhE,EAAM1Q,IAAI,SAAC8Q,EAAKmb,GACZ,OAAOnb,EAAI9Q,IAAI,SAACqiB,EAAM6J,GAAP,OAXP,SAAAlkB,EAAsBlH,EAAW8qB,GAAc5jB,EAA5C8I,IAA4C,IAAvCD,EAAuC7I,EAAvC6I,IACpB,OAAc,IAAN/P,GAAW+P,EAAM,IAAM+a,EAUQD,CAAQna,EAAOya,EAAUC,GAPnD,SAACxX,GAAD,OAAoBA,IAAUf,GAAO,IAAMe,EAOoB+c,CAAS/c,GAAS2N,OAqDnFwB,GAlCA,SAACnP,EAAeoX,GAAwB,IAE3ChY,EAAkCgY,EAAlChY,aAAcZ,EAAoB4Y,EAApB5Y,OAAQH,EAAY+Y,EAAZ/Y,QAExBI,EAAqB2Y,EAAM3Y,UAAa2Y,EAAM3Y,WAAY,IAAI4Y,MAAOC,UAE3E,GAAIjZ,EACA,OAAO+Y,EAGX,IAAM7Y,EAAQ6Y,EAAM7Y,MAAQ,EACtBvC,EAAQyb,GAAYL,EAAMpb,MAAOoD,EAAcY,GAC/CT,EApCa,SAACvD,GAAD,OACnBA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,iBAAO,OAmCZosB,CAAeN,EAAM7X,aAEzC,GA9Be,SAACD,EAADzK,EAA4DmL,GAA5D,IAAyC5D,EAAzCvH,EAAyCuH,IAAKD,EAA9CtH,EAA8CsH,IAA9C,OACdmD,EAAclD,GAAKD,KAAS6D,EA6BzB2X,CAAWP,EAAM9X,cAAeF,EAAcY,GAG9C,OAFAnD,GAAgB0C,EAAaH,EAAcpD,GAC3CuD,EAAY,GAAGH,EAAajD,IAAM,GAAK,CAAE5P,gBAAiB,OACnDL,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWF,QAAOC,OAAQA,EAAS,EAAGxC,QAAOuD,gBAGpE,GAjCe,SAACvD,EAADuQ,GAAgE,IAA/BnQ,EAA+BmQ,EAA/BnQ,IAAKD,EAA0BoQ,EAA1BpQ,IAC/C6gB,EAAYhhB,EAAM,GAAGF,OAC3B,OAAOM,IAAQ4gB,EAAY,GAAK7gB,IAAQ6gB,EAAY,EA+BhDnF,CAAW7b,EAAOoD,GAAe,CACjC,IAAMV,GAAa,IAAI2Y,MAAOC,UAC9B,OAAOprB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWC,aAAYH,QAAOvC,QAAOuD,cAAalB,SAAS,IAGlF,IAAM0Z,EAjCW,SAAAjG,GAAgC,IAA7B1V,EAA6B0V,EAA7B1V,IAAKD,EAAwB2V,EAAxB3V,IACzB,OAAIC,EAAM,IAAMD,EACL,CAAEC,IAAK,EAAGD,IAAKA,EAAM,GAErB,CAAEC,IAAKA,EAAM,EAAGD,OA6BT6b,CAAa5Y,GAM/B,OALKpD,EAAM,GAAG+b,EAAU5b,OACpBH,EAAM,GAAG+b,EAAU5b,KAAO,KAE9BU,GAAgB0C,EAAawY,EAAW/b,GAEjC9P,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB7Y,QAAOE,YAAWzC,QAAOuD,cAAaH,aAAc2Y,KC3DrE9Y,GAAMoC,OAAOK,iBA2BJuW,GAzBiB,WAA6C,IAA5Cb,EAA4CziB,UAAAmH,OAAA,QAAA3D,IAAAxD,UAAA,GAAAA,UAAA,GAA7B4E,KAAU2e,EAAmBvjB,UAAAmH,OAAA,EAAAnH,UAAA,QAAAwD,EACzE,OAAQ+f,EAAOjd,MACX,KAAKkd,GACD,MAAuB,MAAnBD,EAAO7c,QACA8T,GAAOlQ,GAAKmY,GAEZjI,GAAO9N,OAAO6W,EAAO7c,SAAU+b,GAE9C,KAAKe,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAO5e,KACX,KAAK4e,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB9Y,SAAS,EAAO8Z,MAAOF,EAAO7c,SAAW,IAChE,QACI,OAAO+b,iBCvBTiB,iBAKOC,IALjB,SAAUD,KAAV,IAAAhkB,EAAA,OAAAb,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OADrBF,EAAAE,KAAA,EAC2BukB,aAAKC,KAAMzmB,IAAP,qBAAAU,OAAiC6K,GAAU3R,KAD1E,OAEI,OADM0I,EADVP,EAAAS,KAAAT,EAAAE,KAAA,EAEUykB,cxJsCmBrd,EwJtCF/G,EAAS+G,KxJuCzB,CAAEH,KAAMC,GAA2BG,QAASD,KwJzCvD,wBAAAtH,EAAAU,OxJwCO,IAAsB4G,GwJxC7B6hB,IAKO,SAAU3E,KAAV,OAAA9kB,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACH,OADGgB,EAAAhB,KAAA,EACG2kB,aAAK7d,IADR,OAEH,OAFG9F,EAAAhB,KAAA,EAEG4kB,aAAKP,IAFR,wBAAArjB,EAAAR,SAAA0oB,ICLP,IA8BerG,eA9BS,SAAAvjB,GAAA,IAAG6pB,EAAH7pB,EAAG6pB,6BAAH,OAAAjxB,OAAAgN,EAAA,EAAAhN,CAAA,GACjBixB,IAGoB,SAACpG,GAAD,MAAyC,CAChErX,kBAAmB,SAACtE,GAChB2b,EAASlI,GAAoBzT,KAGjCyD,mBAAoB,WAChBkY,EAASlI,OAGb/P,sBAAuB,WACnBiY,EAASlI,OAGb1Q,uBAAwB,WACpB4Y,EAASlI,OAGb9P,uBAAwB,WACpBgY,EAASlI,OAGbjR,wBAAyB,WACrBmZ,EAASlI,SAIFgI,CAA6CG,ICiC7C7H,GAhCA,SAACnP,EAAeoX,GAAwB,IAC3ChY,EAAkCgY,EAAlChY,aAAcZ,EAAoB4Y,EAApB5Y,OAAQH,EAAY+Y,EAAZ/Y,QAExBI,EAAqB2Y,EAAM3Y,UAAa2Y,EAAM3Y,WAAY,IAAI4Y,MAAOC,UAE3E,GAAIjZ,EACA,OAAO+Y,EAGX,IAAM7Y,EAAQ6Y,EAAM7Y,MAAQ,EACtBvC,EAvCU,SAACA,EAAmBc,EAAckD,GAAlC,OAChBhE,EAAM1Q,IAAI,SAAC8Q,EAAKmb,GACZ,OAAOnb,EAAI9Q,IAAI,SAACqiB,EAAM6J,GAAP,OAPP,SAAC1a,EAAc1Q,EAAW8qB,GAA1B,OAA+C,IAAN9qB,GAAW0Q,EAAMX,MAAQ+a,EAOvCD,CAAQna,EAAOya,EAAUC,GAAYxX,EAAQ2N,MAqCtE8J,CAAYL,EAAMpb,MAAOoD,EAAcY,GAC/CT,EA3Ca,SAACvD,GAAD,OACnBA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,iBAAO,OA0CZosB,CAAeN,EAAM7X,aAEzC,GArCe,SAACD,EAADhM,EAAiD0M,GAAjD,IAA8B5D,EAA9B9I,EAA8B8I,IAAKD,EAAnC7I,EAAmC6I,IAAnC,OACdmD,EAAclD,GAAKD,KAAS6D,EAoCzB2X,CAAWP,EAAM9X,cAAeF,EAAcY,GAG9C,OAFAnD,GAAgB0C,EAAaH,GAC7BG,EAAY,GAAGH,EAAajD,KAAO,CAAE5P,gBAAiB,OAC/CL,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWF,QAAOC,OAAQA,EAAS,EAAGxC,QAAOuD,gBAGpE,GAxCe,SAACvD,EAADnH,GAAqD,IAA/BuH,EAA+BvH,EAA/BuH,IAAKD,EAA0BtH,EAA1BsH,IAC1C,OAAOC,IAAQJ,EAAMF,OAAS,GAAKK,IAAQH,EAAMI,GAAKN,OAAS,EAuC3D+b,CAAWT,EAAM9X,cAAeF,GAAe,CAC/C,IAAMV,GAAa,IAAI2Y,MAAOC,UAE9B,OAvCgB,SAACtb,EAAmBtM,GAExC,IADA,IAAMuP,EAAM1C,KAAK0C,IAALxK,MAAA8H,KAAIrQ,OAAA4V,GAAA,EAAA5V,CAAQ8P,EAAM,KACrBG,EAAM,EAAGA,EAAMH,EAAM,GAAGF,OAAQK,IACjCH,EAAM,GAAGG,KAAS8C,IAClBvP,EAAO,GAAGyM,GAAO7P,GAkCrB8wB,CAAgBphB,EAAOuD,GAChBrT,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWC,aAAYH,QAAOvC,QAAOuD,cAAalB,SAAS,IAGlF,IAAM0Z,EAjCW,SAAAxL,GAAgC,IAA7BnQ,EAA6BmQ,EAA7BnQ,IAAKD,EAAwBoQ,EAAxBpQ,IACzB,OAAIA,IAAQC,EACD,CAAEA,IAAK,EAAGD,IAAKA,EAAM,GAErB,CAAEC,IAAKA,EAAM,EAAGD,OA6BT6b,CAAa5Y,GAI/B,OAFAvC,GAAgB0C,EAAawY,GAEtB7rB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB7Y,QAAOE,YAAWzC,QAAOuD,cAAaH,aAAc2Y,KCvC5DE,GArBiB,WAA6C,IAA5Cb,EAA4CziB,UAAAmH,OAAA,QAAA3D,IAAAxD,UAAA,GAAAA,UAAA,GAA7B4E,KAAU2e,EAAmBvjB,UAAAmH,OAAA,EAAAnH,UAAA,QAAAwD,EACzE,OAAQ+f,EAAOjd,MACX,KAAKkd,GACD,OAAOhJ,GAAO9N,OAAO6W,EAAO7c,SAAU+b,GAC1C,KAAKe,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAO5e,KACX,KAAK4e,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB9Y,SAAS,EAAO8Z,MAAOF,EAAO7c,SAAW,IAChE,QACI,OAAO+b,iBCjBTiB,iBAKOC,IALjB,SAAUD,KAAV,IAAAhkB,EAAA,OAAAb,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OADrBF,EAAAE,KAAA,EAC2BukB,aAAKC,KAAMzmB,IAAP,qBAAAU,OAAiC6K,GAAU3R,KAD1E,OAEI,OADM0I,EADVP,EAAAS,KAAAT,EAAAE,KAAA,EAEUykB,ctJsCmBrd,EsJtCF/G,EAAS+G,KtJuCzB,CAAEH,KAAMC,GAA2BG,QAASD,KsJzCvD,wBAAAtH,EAAAU,OtJwCO,IAAsB4G,GsJxC7BiiB,IAKO,SAAU/E,KAAV,OAAA9kB,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACH,OADGgB,EAAAhB,KAAA,EACG2kB,aAAK7d,IADR,OAEH,OAFG9F,EAAAhB,KAAA,EAEG4kB,aAAKP,IAFR,wBAAArjB,EAAAR,SAAA8oB,ICLP,IA8BezG,eA9BS,SAAAvjB,GAAA,IAAGiqB,EAAHjqB,EAAGiqB,4BAAH,OAAArxB,OAAAgN,EAAA,EAAAhN,CAAA,GACjBqxB,IAGoB,SAACxG,GAAD,MAAyC,CAChErX,kBAAmB,SAACtE,GAChB2b,EAASlI,GAAoBzT,KAGjCyD,mBAAoB,WAChBkY,EAASlI,OAGb/P,sBAAuB,WACnBiY,EAASlI,OAGb1Q,uBAAwB,WACpB4Y,EAASlI,OAGb9P,uBAAwB,WACpBgY,EAASlI,OAGbjR,wBAAyB,WACrBmZ,EAASlI,SAIFgI,CAA6CG,ICiC7C7H,GAnCA,SAACnP,EAAgBoX,GAAwB,IAE5ChY,EAAkCgY,EAAlChY,aAAcZ,EAAoB4Y,EAApB5Y,OAAQH,EAAY+Y,EAAZ/Y,QAExBI,EAAqB2Y,EAAM3Y,UAAa2Y,EAAM3Y,WAAY,IAAI4Y,MAAOC,UAE3E,GAAIjZ,EACA,OAAO+Y,EAGX,IAAM7Y,EAAQ6Y,EAAM7Y,MAAQ,EACtBvC,EAlCU,SAACA,EAA+Bc,EAAckD,GAI9D,OAHuChE,EAAM1Q,IAAI,SAAC8Q,EAAKmb,GACnD,OAAOnb,EAAI9Q,IAAI,SAACqiB,EAAM6J,GAAP,OAPP,SAAAlkB,EAAsBlH,EAAW8qB,GAAjC,IAAG9a,EAAH9I,EAAG8I,IAAKD,EAAR7I,EAAQ6I,IAAR,OAAgDC,IAAQhQ,GAAK+P,IAAQ+a,EAO1CD,CAAQna,EAAOya,EAAUC,GATnD,SAACxX,GAAD,OAAoBA,EAAQ,IAAM,IAS6B+c,CAAS/c,GAAS2N,MAgChF8J,CAAYL,EAAMpb,MAAOoD,EAAcY,GAC/CT,EAtCa,SAACvD,GAAD,OACnBA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,iBAAO,OAqCZosB,CAAeN,EAAM7X,aAEzC,GA9Be,SAACD,EAADzK,EAA6DmL,GAA7D,IAA0C5D,EAA1CvH,EAA0CuH,IAAKD,EAA/CtH,EAA+CsH,IAA/C,OACdmD,EAAclD,GAAKD,KAAS6D,EA6BzB2X,CAAWP,EAAM9X,cAAeF,EAAcY,GAG9C,OAFAT,EAAYH,EAAahD,KAAKgD,EAAajD,KAAO,CAAE5P,gBAAiB,OACrEsQ,GAAgB0C,EAAaH,EAAcgY,EAAMtb,OAAQE,GAClD9P,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWF,QAAOC,OAAQA,EAAS,EAAGxC,QAAOuD,gBAIpE,GADAvD,EAAM,GAAG,GAAKob,EAAM/S,WAAWjF,EAAahD,KAAKgD,EAAajD,KAAO,GAjCtD,SAACH,EAADuQ,GAAiE,IAA/BnQ,EAA+BmQ,EAA/BnQ,IAAKD,EAA0BoQ,EAA1BpQ,IACtD,OAAe,IAARC,GAAaD,IAAQH,EAAMI,GAAKN,OAAS,EAiC5C+b,CAAW7b,EAAOoD,GAAe,CACjC,IAAMV,GAAa,IAAI2Y,MAAOC,UAE9B,OADA/X,EAAY,GAAG,GAAKjT,EACbJ,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWC,aAAYH,QAAOvC,QAAOuD,cAAalB,SAAS,IAGlF,IAAMrK,EApCM,SAACgI,EAAD8V,EAAqDhW,GAAmB,IAAtCM,EAAsC0V,EAAtC1V,IAAKD,EAAiC2V,EAAjC3V,IAC7Cof,EAAYnf,EAAMN,IAAWE,EAAMF,OACnC0I,EAAa+W,EAAYzf,EAAS,EAAIA,EACtC4e,EAAUa,EAAY,EAAInf,EAAM,EAGtC,MAAO,CAAEA,IAAKse,EAASve,IAFPof,EAAYb,EAAUlW,EAAa,EAAIrI,EAAM,EAExBL,OAAQ0I,GA8BhCgX,CAAQxf,EAAOoD,EAAcgY,EAAMtb,QAC1Cic,EAAY,CAAE3b,IAAKpI,EAAKoI,IAAKD,IAAKnI,EAAKmI,KAI7C,OAHAH,EAAM+b,EAAU3b,KAAK2b,EAAU5b,KAAO,IACtCU,GAAgB0C,EAAawY,EAAW/jB,EAAK8H,OAAQE,GAE9C9P,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB7Y,QAAOE,YAAWzC,QAAOuD,cAAaH,aAAc2Y,EAAWjc,OAAQ9H,EAAK8H,UCvCpFmc,GArBiB,WAA6C,IAA5Cb,EAA4CziB,UAAAmH,OAAA,QAAA3D,IAAAxD,UAAA,GAAAA,UAAA,GAA7B4E,KAAU2e,EAAmBvjB,UAAAmH,OAAA,EAAAnH,UAAA,QAAAwD,EACzE,OAAQ+f,EAAOjd,MACX,KAAKkd,GACD,OAAOhJ,GAAO7W,QAAQ4f,EAAO7c,SAAU+b,GAC3C,KAAKe,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAO5e,KACX,KAAK4e,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB9Y,SAAS,EAAO8Z,MAAOF,EAAO7c,SAAW,IAChE,QACI,OAAO+b,iBCjBTiB,iBAKOC,IALjB,SAAUD,KAAV,IAAAhkB,EAAA,OAAAb,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OADrBF,EAAAE,KAAA,EAC2BukB,aAAKC,KAAMzmB,IAAP,qBAAAU,OAAiC6K,GAAU3R,KAD1E,OAEI,OADM0I,EADVP,EAAAS,KAAAT,EAAAE,KAAA,EAEUykB,c5HsCmBrd,E4HtCF/G,EAAS+G,K5HuCzB,CAAEH,KAAMC,GAA2BG,QAASD,K4HzCvD,wBAAAtH,EAAAU,O5HwCO,IAAsB4G,G4HxC7BoiB,IAKO,SAAUlF,KAAV,OAAA9kB,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACH,OADGgB,EAAAhB,KAAA,EACG2kB,aAAK7d,IADR,OAEH,OAFG9F,EAAAhB,KAAA,EAEG4kB,aAAKP,IAFR,wBAAArjB,EAAAR,SAAAipB,ICLP,IA8Be5G,eA9BS,SAAAvjB,GAAA,IAAGoqB,EAAHpqB,EAAGoqB,8BAAH,OAAAxxB,OAAAgN,EAAA,EAAAhN,CAAA,GACjBwxB,IAGoB,SAAC3G,GAAD,MAAyC,CAChErX,kBAAmB,SAACtE,GAChB2b,EAASlI,GAAoBzT,KAGjCyD,mBAAoB,WAChBkY,EAASlI,OAGb/P,sBAAuB,WACnBiY,EAASlI,OAGb1Q,uBAAwB,WACpB4Y,EAASlI,OAGb9P,uBAAwB,WACpBgY,EAASlI,OAGbjR,wBAAyB,WACrBmZ,EAASlI,SAIFgI,CAA6CG,IC2B7C7H,GAlCA,SAACnP,EAAeoX,GAAwB,IAE3ChY,EAAkCgY,EAAlChY,aAAcZ,EAAoB4Y,EAApB5Y,OAAQH,EAAY+Y,EAAZ/Y,QAExBI,EAAqB2Y,EAAM3Y,UAAa2Y,EAAM3Y,WAAY,IAAI4Y,MAAOC,UAE3E,GAAIjZ,EACA,OAAO+Y,EAGX,IAAM7Y,EAAQ6Y,EAAM7Y,MAAQ,EACtBvC,EA/BU,SAACA,EAA8Bc,EAAckD,GAA7C,OAChBhE,EAAM1Q,IAAI,SAAC8Q,EAAKmb,GACZ,OAAOnb,EAAI9Q,IAAI,SAACqiB,EAAM6J,GAAP,OAPP,SAAAlkB,EAAsBlH,EAAW8qB,GAAjC,IAAG9a,EAAH9I,EAAG8I,IAAKD,EAAR7I,EAAQ6I,IAAR,OAAgDC,IAAQhQ,GAAK+P,IAAQ+a,EAO1CD,CAAQna,EAAOya,EAAUC,GAAYxX,EAAQ2N,MA6BtE8J,CAAYL,EAAMpb,MAAOoD,EAAcY,GAC/CT,EAnCa,SAACvD,GAAD,OACnBA,EAAM1Q,IAAI,SAAA8Q,GAAG,OAAIA,EAAI9Q,IAAI,iBAAO,OAkCZosB,CAAeN,EAAM7X,aAEzC,GA7Be,SAACD,EAADzK,EAA4DmL,GAA5D,IAAyC5D,EAAzCvH,EAAyCuH,IAAKD,EAA9CtH,EAA8CsH,IAA9C,OACdmD,EAAclD,GAAKD,KAAS6D,EA4BzB2X,CAAWP,EAAM9X,cAAeF,EAAcY,GAG9C,OAFAT,EAAYH,EAAahD,KAAKgD,EAAajD,KAAO,CAAE5P,gBAAiB,OACrEsQ,GAAgB0C,EAAaH,EAAcgY,EAAMtb,OAAQE,GAClD9P,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWF,QAAOC,OAAQA,EAAS,EAAGxC,QAAOuD,gBAGpE,GAhCe,SAACvD,EAADuQ,GAAgE,IAA/BnQ,EAA+BmQ,EAA/BnQ,IAAKD,EAA0BoQ,EAA1BpQ,IACrD,OAAe,IAARC,GAAaD,IAAQH,EAAMI,GAAKN,OAAS,EA+B5C+b,CAAW7b,EAAOoD,GAAe,CACjC,IAAMV,GAAa,IAAI2Y,MAAOC,UAE9B,OADA/X,EAAY,GAAGA,EAAY,GAAGzD,OAAS,GAAKxP,EACrCJ,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB3Y,YAAWC,aAAYH,QAAOvC,QAAOuD,cAAalB,SAAS,IAGlF,IAAMrK,EAlCM,SAACgI,EAAD8V,EAAoDhW,GAAmB,IAAtCM,EAAsC0V,EAAtC1V,IAAKD,EAAiC2V,EAAjC3V,IAC5Cof,EAAYnf,EAAMN,IAAWE,EAAMF,OACnC0I,EAAa+W,EAAYzf,EAAS,EAAIA,EACtC4e,EAAUa,EAAY,EAAInf,EAAM,EAEtC,MAAO,CAAEA,IAAKse,EAASve,IADPof,EAAYb,EAAUlW,EAAa,EAAIrI,EAAM,EACxBL,OAAQ0I,GA6BhCgX,CAAQxf,EAAOoD,EAAcgY,EAAMtb,QAC1Cic,EAAY,CAAE3b,IAAKpI,EAAKoI,IAAKD,IAAKnI,EAAKmI,KAI7C,OAHAH,EAAM+b,EAAU3b,KAAK2b,EAAU5b,KAAO,IACtCU,GAAgB0C,EAAawY,EAAW/jB,EAAK8H,OAAQE,GAE9C9P,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB7Y,QAAOE,YAAWzC,QAAOuD,cAAaH,aAAc2Y,EAAWjc,OAAQ9H,EAAK8H,UCjCpFmc,GArBiB,WAA6C,IAA5Cb,EAA4CziB,UAAAmH,OAAA,QAAA3D,IAAAxD,UAAA,GAAAA,UAAA,GAA7B4E,KAAU2e,EAAmBvjB,UAAAmH,OAAA,EAAAnH,UAAA,QAAAwD,EACzE,OAAQ+f,EAAOjd,MACX,KAAKkd,GACD,OAAOhJ,GAAO9N,OAAO6W,EAAO7c,SAAU+b,GAC1C,KAAKe,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmBtZ,YAAY,IACnC,KAAKqa,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB5Z,aAAa,IACpC,KAAK2a,GACD,OAAO5e,KACX,KAAK4e,GACD,OAAOjsB,OAAAgN,EAAA,EAAAhN,CAAA,GAAKkrB,EAAZ,CAAmB9Y,SAAS,EAAO8Z,MAAOF,EAAO7c,SAAW,IAChE,QACI,OAAO+b,iBCjBTiB,iBAKOC,IALjB,SAAUD,KAAV,IAAAhkB,EAAA,OAAAb,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OADrBF,EAAAE,KAAA,EAC2BukB,aAAKC,KAAMzmB,IAAP,qBAAAU,OAAiC6K,GAAU3R,KAD1E,OAEI,OADM0I,EADVP,EAAAS,KAAAT,EAAAE,KAAA,EAEUykB,c1HsCmBrd,E0HtCF/G,EAAS+G,K1HuCzB,CAAEH,KAAMC,GAA2BG,QAASD,K0HzCvD,wBAAAtH,EAAAU,O1HwCO,IAAsB4G,G0HxC7BuiB,IAKO,SAAUrF,KAAV,OAAA9kB,GAAA9C,EAAAmD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACH,OADGgB,EAAAhB,KAAA,EACG2kB,aAAK7d,IADR,OAEH,OAFG9F,EAAAhB,KAAA,EAEG4kB,aAAKP,IAFR,wBAAArjB,EAAAR,SAAAopB,qBCiHUC,IAjDJC,GAAc,SAACC,GAAD,OAAsBC,2BAAgB,CAC7DC,OAAQC,YAAcH,GACtBjH,aAAcqH,GACdrF,gBAAiBsF,GACjBjF,kBAAmBkF,GACnB/E,iBAAkBgF,GAClB7E,kBAAmB8E,GACnBzC,uBAAwB0C,GACxBvC,sBAAuBwC,GACvB7E,cAAe8E,GACftC,yBAA0BuC,GAC1BpC,uBAAwBqC,GACxB7E,iBAAkB8E,GAClB/B,+BAAgCgC,GAChC3B,6BAA8B4B,GAC9B7E,eAAgB8E,GAChBxE,UAAWyE,GACXtD,uBAAwBuD,GACxBlE,mBAAoBmE,GACpB5B,4BAA6B6B,GAC7B1B,8BAA+B2B,GAC/B/D,uBAAwBgE,GACxBnE,YAAaoE,MAGJC,GAAa,CACtB/Y,gBACAE,mBACAE,qBACAE,oBACAE,qBACAE,0BACAE,yBACAE,iBACAE,4BACAE,0BACAE,oBACA4X,kCACAxX,gCACAE,kBACAE,aACAE,0BACAE,sBACAE,+BACAE,iCACAE,0BACAE,gBAGG,SAAU4U,KAAV,OAAArqB,GAAA9C,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OADGF,EAAAE,KAAA,EACG0rB,aAAI,CACNC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,OAtBD,wBAAAjtB,EAAAU,SAAAwsB,ICvHP,IA2BehxB,eA3BA,SAACnD,GAAD,OAAkB8C,YAAa,CAC1CsxB,YAAa,CACT5b,eAAgB,WAyBTrV,CATC,SAACV,GACb,IAAM4xB,EATiB,WACvB,IAAMj1B,EAAiBC,OAAOD,KAAKuzB,IAE7BjZ,EAAMta,EADEsQ,KAAK2C,MAAM3C,KAAKyC,SAAW/S,EAAK6P,SAG9C,OAAQ0jB,GAAmBjZ,GAIT4a,GAClB,OACI5xB,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,cAAC2xB,EAAD,SCaNA,GAAY,SAAA5tB,GAAgC,IAA7B8tB,EAA6B9tB,EAA7B8tB,MACjB,OAAQA,EAAMC,OAAOvvB,MACjB,KAAKgT,GAAM0B,cACP,OAAQjX,EAAA,cAACiwB,GAAW/Y,aAAZ,MACZ,KAAK3B,GAAM4B,iBACP,OAAQnX,EAAA,cAACiwB,GAAW7Y,gBAAZ,MACZ,KAAK7B,GAAM8B,mBACP,OAAQrX,EAAA,cAACiwB,GAAW3Y,kBAAZ,MACZ,KAAK/B,GAAMgC,kBACP,OAAQvX,EAAA,cAACiwB,GAAWzY,iBAAZ,MACZ,KAAKjC,GAAMkC,mBACP,OAAQzX,EAAA,cAACiwB,GAAWvY,kBAAZ,MACZ,KAAKnC,GAAMoC,0BACP,OAAQ3X,EAAA,cAACiwB,GAAWrY,uBAAZ,MACZ,KAAKrC,GAAMsC,0BACP,OAAQ7X,EAAA,cAACiwB,GAAWnY,sBAAZ,MACZ,KAAKvC,GAAMwC,eACP,OAAQ/X,EAAA,cAACiwB,GAAWjY,cAAZ,MACZ,KAAKzC,GAAM0C,2BACP,OAAQjY,EAAA,cAACiwB,GAAW/X,yBAAZ,MACZ,KAAK3C,GAAM4C,yBACP,OAAQnY,EAAA,cAACiwB,GAAW7X,uBAAZ,MACZ,KAAK7C,GAAM8C,mBACP,OAAQrY,EAAA,cAACiwB,GAAW3X,iBAAZ,MACZ,KAAK/C,GAAMgD,qBACP,OAAQvY,EAAA,cAACiwB,GAAWC,+BAAZ,MACZ,KAAK3a,GAAMkD,+BACP,OAAQzY,EAAA,cAACiwB,GAAWvX,6BAAZ,MACZ,KAAKnD,GAAMoD,iBACP,OAAQ3Y,EAAA,cAACiwB,GAAWrX,eAAZ,MACZ,KAAKrD,GAAMsD,WACP,OAAQ7Y,EAAA,cAACiwB,GAAWnX,UAAZ,MACZ,KAAKvD,GAAMwD,yBACP,OAAQ/Y,EAAA,cAACiwB,GAAWjX,uBAAZ,MACZ,KAAKzD,GAAM0D,oBACP,OAAQjZ,EAAA,cAACiwB,GAAW/W,mBAAZ,MACZ,KAAK3D,GAAM4D,8BACP,OAAQnZ,EAAA,cAACiwB,GAAW7W,4BAAZ,MACZ,KAAK7D,GAAM8D,gCACP,OAAQrZ,EAAA,cAACiwB,GAAW3W,8BAAZ,MACZ,KAAK/D,GAAMgE,wBACP,OAAQvZ,EAAA,cAACiwB,GAAWzW,uBAAZ,MACZ,KAAKjE,GAAMkE,aACP,OAAQzZ,EAAA,cAACiwB,GAAWvW,YAAZ,MACZ,QACI,OAAQ1Z,EAAA,yBAAM6xB,EAAMC,OAAOvvB,QAIjCwvB,GAAa,SAAAzsB,GAAA,IAAGusB,EAAHvsB,EAAGusB,MAAH,OACf7xB,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,cAACgyB,GAAA,EAAD,CAAOC,KAAI,GAAA/uB,OAAK2uB,EAAMI,KAAX,UAAyBzrB,UAAWmrB,KAC/C3xB,EAAA,cAACgyB,GAAA,EAAD,CAAOE,OAAK,EAACD,KAAMJ,EAAMI,KAAME,OAAQ,kBAAOnyB,EAAA,4CAevCS,eAhGA,SAACnD,GAAD,OAAkB8C,YAAa,CAC1Cma,aAAa5d,OAAAgN,EAAA,EAAAhN,CAAA,CACT6B,QAAS,OACTgc,WAAY,SACZC,eAAgB,WAChBC,QAAS,SACNpd,EAAMqd,OAAOC,SAEpByE,QAAS,CACL3V,SAAU,EACV1M,gBAAiBM,EAAMK,QAAQG,WAAWC,QAC1C2c,QAASpd,EAAM8L,QAAQ,GACvBU,WAAYxM,EAAMyM,YAAYC,OAAO,SAAU,CAC3CC,OAAQ3M,EAAMyM,YAAYE,OAAOC,MACjCC,SAAU7M,EAAMyM,YAAYI,SAASC,oBAkFlC3J,CAXC,SAACV,GAAiB,IACtBW,EAAYX,EAAZW,QACR,OACIV,EAAA,sBAAMc,UAAWC,IAAWL,EAAQ2e,UAChCrf,EAAA,qBAAKc,UAAWJ,EAAQ6Z,eACxBva,EAAA,cAACgyB,GAAA,EAAD,CAAOE,OAAK,EAACD,KAAK,IAAIzrB,UAAW4rB,KACjCpyB,EAAA,cAACgyB,GAAA,EAAD,CAAOC,KAAK,cAAczrB,UAAWurB,QC1ElCtxB,eAvBA,SAACnD,GAAD,OAAkB8C,YAAa,CAC1CiyB,OAAQ,CAEJ3X,QAASpd,EAAM8L,QAAQ,OAoBhB3I,CAdA,SAACV,GAAiB,IACrBW,EAAYX,EAAZW,QACR,OACIV,EAAA,wBAAQc,UAAWJ,EAAQ2xB,QACvBryB,EAAA,cAACyB,EAAA,EAAD,CAAYC,QAAQ,KAAK4wB,MAAM,SAASC,cAAY,IAGpDvyB,EAAA,cAACyB,EAAA,EAAD,CAAYC,QAAQ,YAAY4wB,MAAM,SAASn0B,MAAM,gBAAgBqI,UAAU,SCArFgsB,8MACJ3K,MAAQ,CACNjnB,MAAM,KAGRqF,YAAc,WACZwsB,EAAKC,SAAS,CACZ9xB,MAAM,OAIV+xB,WAAa,WACXF,EAAKC,SAAS,CACZ9xB,MAAM,6EAID,IACCA,EAASuE,KAAK0iB,MAAdjnB,KACR,OACEZ,EAAA,cAACA,EAAA,SAAD,KACEA,EAAA,cAAC6O,GAAD,CAAQjO,KAAMA,EAAMD,WAAYwE,KAAKwtB,aACrC3yB,EAAA,cAAC4yB,GAAD,CAAShyB,KAAMA,EAAMia,YAAa1V,KAAKc,cACvCjG,EAAA,cAAC6yB,GAAD,CAAMjyB,KAAMA,IACZZ,EAAA,cAACqyB,GAAD,cAxBYtqB,aA8BLpI,KAASc,IAzCT,SAACnD,GAAD,OAAkB8C,IAAa,CAC5C/B,KAAM,CACJK,UAAW,SACXuX,WAAY3Y,EAAM8L,QAAQ,QAsCN3I,CAAmB+xB,mCC1CvBzpB,QACW,cAA7B5G,OAAOC,SAAS0wB,UAEe,UAA7B3wB,OAAOC,SAAS0wB,UAEhB3wB,OAAOC,SAAS0wB,SAASjB,MACvB,2DCMN1vB,OAAO4wB,kBAAoB5wB,OAAO4wB,mBAAqB,GAEvD,IAAMC,GAAe7wB,OAAO4wB,kBACtBvE,GAAUyE,cAEVC,GCpBS,SACX1E,EACAwE,GAEA,IAAMG,EAAmBC,+BAAoB,IACvCC,EAAiBC,eAEjBJ,EAAQK,uBACVhF,GAAYC,GACZwE,EACAG,EAAiBK,2BAAgBC,aAAiBjF,GAAU6E,KAWhE,OADAA,EAAeK,IAAIpF,IACZ4E,EDDGS,CAAenF,GAASwE,IA4BtCY,SAAgB5zB,EAAA,cA1BH,WAAM,IAAAgI,EAESD,WAA4B,MAFrCE,EAAAtL,OAAAuL,EAAA,EAAAvL,CAAAqL,EAAA,GAERP,EAFQQ,EAAA,GAEFe,EAFEf,EAAA,GAGfF,YAAgB,WAAQjE,KAAQe,KAAK,SAAAxB,GAAG,OAAI2F,EAAQ3F,MAAU,IAH/C,IAAAgF,EAKeN,WAAyB,IALxCO,EAAA3L,OAAAuL,EAAA,EAAAvL,CAAA0L,EAAA,GAKRyO,EALQxO,EAAA,GAKCsT,EALDtT,EAAA,GAMfP,YAAgB,WAAQ0T,KAAa5W,KAAK,SAAAgvB,GAAI,OAAIjY,EAAWiY,MAAW,IANzD,IAAAhP,EAQW9c,WAAuB,IARlC+c,EAAAnoB,OAAAuL,EAAA,EAAAvL,CAAAkoB,EAAA,GAQR9N,EARQ+N,EAAA,GAQD9E,EARC8E,EAAA,GAWf,OAFA/c,YAAgB,WAAQ4X,KAAW9a,KAAK,SAAAgvB,GAAI,OAAI7T,EAAS6T,MAAW,IAGhE7zB,EAAA,cAAC8zB,EAAA,EAAD,CAAUZ,MAAOA,IACblzB,EAAA,cAAC8B,GAAYiyB,SAAb,CAAsBtjB,MAAO,CAAEhJ,OAAMuB,YACjChJ,EAAA,cAAC2V,GAAeoe,SAAhB,CAAyBtjB,MAAO,CAAEqG,UAAS8E,eACvC5b,EAAA,cAAC4V,GAAame,SAAd,CAAuBtjB,MAAO,CAAEsG,QAAOiJ,aACnChgB,EAAA,cAACg0B,EAAA,EAAD,CAAiBxF,QAASA,IACtBxuB,EAAA,cAACi0B,GAAD,YASZ,MAAUC,SAASC,cAAc,UD+C3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzvB,KAAK,SAAA0vB,GACjCA,EAAaC","file":"static/js/main.b158d1bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Google__G__Logo.f6ce5696.svg\";","module.exports = __webpack_public_path__ + \"static/media/mark-github.e50abc21.svg\";","var map = {\n\t\"./description.zh.cn.md\": 236,\n\t\"./presentation.zh.cn.md\": 237\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 235;","export default \"Given weights and values of n items, put these items in a knapsack of capacity W to get the maximum total value in the knapsack. \\n\\nV: value, W: Weight\\n\\n---\\n\\n背包问题🎒\\n\\n什么是背包问题？假设有一个背包，它的最大承受重量是W。然后有一组物品，每个物品都有自己的重量w和价格v。我们怎么选择，才能使放入背包的物品的总价格最高。\\n\\n![knapsack](https://upload.wikimedia.org/wikipedia/commons/thumb/f/fd/Knapsack.svg/500px-Knapsack.svg.png)\\n\"","export default \"# 🎒背包问题\\n\\n今天我们讲背包问题。首先什么是背包问题？背包问题可以描述为：给定N件物品和一个限定最大承受重量背包，每种物品都有自己的重量weight(w)和价格value(v)，如何选择最合适的物品放置于给定的背包中，才能使背包中物品的总重量小于等于背包的最大承受重量，同时使得背包中物品的价值最高。\\n\\nPS：背包问题有很多种，我们今天讲的是0/1背包问题，就是说每种物品只能选择0次或1次。每种物品不能被选择多次也不可以被拆开选择。\\n\\n## 转移方程：\\n```javascript\\nif (itemWeight > knapsackWeight) {\\n  table[row][col] = table[row - 1][col];\\n} else {\\n  table[row][col] = Math.max(\\n    table[row - 1][col], \\n    table[row - 1][knapsackWeight - itemWeight] + itemValue\\n  );\\n}\\n```\\nor\\n```javascript\\nif (item.weight > knapsack.weight) {\\n  table[row][col] = getPreviousValue(row, col);\\n} else {\\n  table[row][col] = Math.max(getPreviousValue(row, col), getUpdatedValue(row, knapsack, item));\\n}\\n\\nconst getPreviousValue = (row, col) => {\\n  return table[row - 1][col];\\n};\\n\\nconst getUpdatedValue = (row, knapsack, itemWeight, itemValue) => {\\n  return table[row - 1][knapsack.weight - item.weight] + item.value;\\n};\\n```\\n\\n然后它的计算原理/转移方程的意思是：\\n- 当物品的重量大于当前背包的最大承受重量的时候，这件物品不能被放入背包中，所以保持copy原先背包中物品的总价值。\\n- else的意思是，当物品的重量小于等于当前背包的最大承受重量时候，我们从下面两个值中选一个较大值更新当前背包中商品的总价值。第一个是指这个物品没有放入背包以前背包中物品的总价值，第二个是指从用当前的物品替换背包中相同重量的物品以后背包中商品的总价值。然后在他们两个中，找一个较大值更新当前背包中物品的总价值。\\n\\n## Go Through an Example:\\n\\n可能公式写的或者我讲的不是很清楚，下面咱们通过一个例子来详细的理解一下怎么计算背包问题。\\n\\n首先我们有4个物品，它们的weight和value分别是：\\n在这个例子里面，我们有4件物品，然后背包的最大承受重量是6。首先我们为了计算方便，添加了两排0，但是它们也有它们的意义：\\n- 竖的一排0是说：当背包的最大承受重量为0时，它不能装任何物品，所以背包中物品的总价值只能为0。\\n- 横的一排0是说：当把一个重量为0，价值也为0的的物品装进背包中，背包的中物品的总价值仍然是0.\\n\\n然后咱们从物品1开始。\\n\\nkeywords:\\n- 背包中原先商品的总价值\\n\"","import * as React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport primary from '@material-ui/core/colors/green';\nimport secondary from '@material-ui/core/colors/red';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport helperColor from '@material-ui/core/colors/green';\nimport helperColorSecondary from '@material-ui/core/colors/blue';\nimport helperColorThird from '@material-ui/core/colors/yellow';\n\nexport const drawerWidth: number = 270;\nexport const helperStyle: React.CSSProperties = { backgroundColor: helperColor[100] };\nexport const helperStyleSecondary: React.CSSProperties = { backgroundColor: helperColorSecondary[100] };\nexport const helperStyleThird: React.CSSProperties = { backgroundColor: helperColorThird[200] };\nexport const warn = \"#FF385C\"\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      \"Circular\",\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      \"Roboto\",\n      \"Helvetica Neue\",\n      \"sans-serif\",\n      \"monospace\"\n    ].join(\",\")\n    // useNextVariants: true,\n  },\n  palette: {\n    primary: primary,\n    secondary: secondary,\n    background: {\n      // default: grey['200'],\n      // default: \"#9be5f3!important\"\n      default: \"white\"\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      colorPrimary: {\n        color: primary[\"600\"],\n        backgroundColor: \"white\"\n      }\n    },\n    MuiTable: {\n      root: {\n        width: '0',\n        borderRadius: 12,\n        display: \"inline-table\"\n      }\n    },\n    MuiTableCell: {\n      root: {\n        width: '1%',\n        textAlign: 'center',\n        borderBottom: 'none',\n        '&:last-child': {\n          paddingRight: 0,\n        }\n      },\n      body: {\n        borderWidth: 1,\n        borderStyle: 'solid',\n        borderColor: \"gray\",\n        color: \"black\",\n        borderRadius: 0,\n        fontSize: 14,\n        fontWeight: 400,\n        height: 35,\n        width: 70,\n      },\n    },\n    MuiTableRow: {\n      root: {\n        // height: 60,\n      },\n    },\n    MuiDialog: {\n      paper: {\n        margin: 4,\n      },\n    },\n    MuiDialogContent: {\n      root: {\n        paddingLeft: 4,\n        paddingRight: 4,\n      }\n    }\n  },\n});\n\nfunction withRoot<P>(Component: React.ComponentType<P>) {\n  function WithRoot(props: P) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;\n","import { Action } from 'redux';\n\nexport interface Point {\n    readonly row: number;\n    readonly col: number;\n}\n\nexport enum Difficulty {\n    Easy = 'Easy',\n    Medium = 'Medium',\n    Hard = 'Hard',\n}\n\nexport enum DialogScroll {\n    Paper = 'paper',\n    Body = 'body',\n}\n\nexport interface BasicInfo {\n    readonly id: number;\n    readonly title: string;\n}\n\nexport interface Formula extends BasicInfo {\n    readonly formulaOpen: boolean;\n    readonly formulaCroll: DialogScroll;\n    readonly formula: string;\n    readonly handleFormulaOnClose?: () => any;\n    readonly handleCloseFormulaClick: () => Action;\n}\n\nexport interface Dialog extends BasicInfo {\n    readonly dialogOpen: boolean;\n    readonly dialogCroll: DialogScroll;\n    readonly example: string;\n    readonly alUsecases: string;\n    readonly description: string;\n    readonly handleDialogOnClose?: () => any;\n    readonly handleCloseDialogClick: () => Action;\n}\n\nexport interface Header extends BasicInfo {\n    readonly success: boolean;\n    readonly loading: boolean;\n    readonly steps: number;\n    readonly errors: number;\n    readonly title: string;\n    readonly startTime: number;\n    readonly finishTime: number;\n    readonly difficulty: string;\n    readonly handleRefreshClick: () => Action;\n    readonly handleOpenDialogClick: () => Action;\n    readonly handleOpenFormulaClick: () => Action;\n}\n\nexport interface Table {\n    readonly table: Array<Array<any>>;\n    readonly tableStyles: Array<Array<React.CSSProperties>>;\n}\n\nexport interface Buttons {\n    readonly buttons: Array<number | string | boolean>;\n    readonly buttonsStyles: Array<React.CSSProperties>;\n    readonly handleButtonClick: (data: number | string | boolean) => Action;\n}\n\nexport interface State extends Dialog, Header, Table, Buttons, Formula {\n    readonly currentPoint: Point;\n    readonly comparedTable: Array<Array<any>>;\n    readonly increaseSuccessRecord?: () => Action;\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { WithStyles } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst styles = createStyles({\n    hide: {\n        display: 'none',\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n});\n\ninterface Props extends WithStyles<typeof styles> {\n    open: boolean;\n    openDrawer: () => void;\n}\n\nconst MenuButton = (props: Props) => {\n    const { classes, openDrawer, open } = props;\n    return (\n        <IconButton\n            className={classNames(classes.menuButton, open && classes.hide)}\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n            onClick={openDrawer}\n        >\n            <MenuIcon />\n        </IconButton>\n    );\n};\n\nexport default withStyles(styles)(MenuButton);\n","import * as React from 'react';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { WithStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { Link } from 'react-router-dom';\n\nconst styles = (theme: Theme) => createStyles({\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n        textDecoration: 'none',\n        color: 'inherit',\n        fontWeight: 'normal',\n    },\n});\n\ninterface Props extends WithStyles<typeof styles> {\n\n}\n\nconst Title = (props: Props) => {\n    const { classes } = props;\n    return (\n        <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n            <Link to=\"/\" className={classes.title}>\n                alchemist\n            </Link>\n        </Typography>\n    );\n};\n\nexport default withStyles(styles)(Title);","import { createContext } from 'react';\nimport { UserState } from './user';\n\nexport const UserContext = createContext<Partial<UserState>>({});\n","import { User } from './user';\n\nconst userUrl = 'https://api.alchemist-ai.com/api/v1/users';\n\nconst localStorageKey = 'token';\nconst ACCESS_TOKEN = 'access_token';\n\nconst getUrlParams = (): URLSearchParams => {\n    const search = window.location.search;\n    return new URLSearchParams(search);\n};\n\nconst getUrlParam = (name: string): string | null => {\n    return getUrlParams().get(name);\n};\n\nconst deleteUrlParam = (name: string) => {\n    if (getUrlParam(name)) {\n        getUrlParams().delete(name);\n    }\n};\n\nconst getAccessToken = (): string | null => {\n    const accessToken = getUrlParam(ACCESS_TOKEN);\n    if (accessToken) {\n        localStorage.setItem(localStorageKey, accessToken);\n    }\n    return localStorage.getItem(localStorageKey);\n};\n\nconst createAuthHeaders = (accessToken: string): Headers => {\n    const headers = new Headers();\n    headers.set('Content-Type', 'application/json');\n    headers.set('Authorization', `Bearer ${accessToken}`);\n    return headers;\n};\n\nexport const getAuthHeaders = (): Headers | null => {\n    const accessToken = getAccessToken();\n    if (!accessToken) {\n        return null;\n    }\n    return createAuthHeaders(accessToken);\n};\n\nconst createUser = (obj: any): User => ({\n    id: obj.id,\n    name: (obj.nickname || obj.username),\n    avatar: obj.avatar\n});\n\nexport const signOut = (): void => {\n    localStorage.removeItem(localStorageKey);\n    deleteUrlParam(ACCESS_TOKEN);\n    window.location.href = window.location.href.split('?')[0];\n};\n\nexport const getMe = async (): Promise<User | null> => {\n    const authHeaders = getAuthHeaders();\n    if (!authHeaders) {\n        return null;\n    }\n\n    const requestInit: RequestInit = {\n        method: 'GET',\n        headers: authHeaders\n    };\n\n    return await fetch(`${userUrl}/me`, requestInit)\n        .then(response => response.json())\n        .then(json => createUser(json));\n};\n\nexport const getUser = async (userId: number): Promise<User | null> => {\n    const requestInit: RequestInit = { method: 'GET' };\n    return await fetch(`${userUrl}/${userId}`, requestInit)\n        .then(response => response.json())\n        .then(json => createUser(json));\n};\n","import *  as React from 'react';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport {\n    WithStyles,\n    Avatar,\n    Dialog,\n    DialogTitle,\n    List,\n    ListItem,\n    ListItemAvatar,\n    DialogActions,\n    Divider,\n    Popover,\n    ListItemText,\n    ListItemIcon\n} from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ExitToApp from '@material-ui/icons/ExitToApp';\n\nimport { UserContext } from '../../user/userContext';\nimport GoogleLogo from './Google__G__Logo.svg';\nimport GithubLogo from './mark-github.svg';\nimport { User } from '../../user/user';\nimport { signOut } from '../../user/userUtils';\n\nconst apiHost = 'api.alchemist-ai.com';\nconst baseApiUrl = `https://${apiHost}`;\nconst googleLoginUrl = `${baseApiUrl}/oauth/google/login`;\nconst githubLoginUrl = `${baseApiUrl}/oauth/github/login`;\n\nconst styles = (theme: Theme) => createStyles({\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    small: {\n        width: theme.spacing(4),\n        height: theme.spacing(4),\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    loginList: {\n        minWidth: 360,\n    }\n});\n\ninterface Props extends WithStyles<typeof styles> { }\n\ninterface LoginProps extends WithStyles<typeof styles> {\n    open: boolean;\n    handleClose: () => void;\n}\n\nconst LoginDialog = (props: LoginProps) => (\n    <Dialog onClose={props.handleClose} open={props.open}>\n        <DialogTitle>\n            Signs\n        </DialogTitle>\n        <Divider />\n        <List className={props.classes.loginList}>\n            <ListItem button component=\"a\" href={googleLoginUrl}>\n                <ListItemAvatar>\n                    <Avatar variant=\"square\" src={GoogleLogo} className={props.classes.small} />\n                </ListItemAvatar>\n                Sign in with Google\n            </ListItem>\n            <ListItem button component=\"a\" href={githubLoginUrl}>\n                <ListItemAvatar>\n                    <Avatar variant=\"square\" src={GithubLogo} className={props.classes.small} />\n                </ListItemAvatar>\n                Sign in with Github\n            </ListItem>\n        </List>\n        <DialogActions>\n            <IconButton aria-label=\"close-login-dialog\" onClick={props.handleClose}>\n                <CloseIcon />\n            </IconButton>\n        </DialogActions>\n    </Dialog>\n);\n\ninterface LogoutProps extends WithStyles<typeof styles> {\n    user: User | null;\n    open: boolean;\n    anchorEl: HTMLButtonElement | null;\n    handleClose: () => void;\n    handleSignOut: () => void;\n}\n\nconst LogoutPopover = (props: LogoutProps) => (\n    <Popover\n        open={props.open}\n        anchorEl={props.anchorEl}\n        onClose={props.handleClose}\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n        }}\n        transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n        }}\n    >\n        <List>\n            <ListItem>\n                <ListItemText primary={props.user && ('Hi, ' + props.user.name)} />\n            </ListItem>\n        </List>\n        <Divider />\n        <List>\n            <ListItem button onClick={props.handleSignOut}>\n                <ListItemIcon>\n                    <ExitToApp />\n                </ListItemIcon>\n                <ListItemText primary=\"Sign out\" />\n            </ListItem>\n        </List>\n    </Popover>\n);\n\nconst UserIcon = (props: Props) => {\n    const { classes } = props;\n    const userState = React.useContext(UserContext);\n\n    const [loginOpen, setLoginOpen] = React.useState(false);\n\n    const handleLoginOpen = () => {\n        setLoginOpen(true);\n    };\n\n    const handleLoginClose = (): void => {\n        setLoginOpen(false);\n    };\n\n    const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n\n    const handleLogoutOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleLogoutClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleSignOut = (): void => {\n        if (userState.setUser) {\n            userState.setUser(null);\n        }\n        signOut();\n    };\n\n    if (userState.user) {\n        return (\n            <React.Fragment>\n                <IconButton aria-haspopup=\"true\" onClick={handleLogoutOpen} >\n                    <Avatar\n                        className={classes.small}\n                        alt={userState.user.name}\n                        src={userState.user.avatar || undefined}\n                    />\n                </IconButton>\n                <LogoutPopover\n                    {...props}\n                    open={Boolean(anchorEl)}\n                    anchorEl={anchorEl}\n                    handleClose={handleLogoutClose}\n                    user={userState.user}\n                    handleSignOut={handleSignOut}\n                />\n            </React.Fragment>\n        );\n    } else {\n        return (\n            <React.Fragment>\n                <IconButton aria-haspopup=\"true\" onClick={handleLoginOpen}>\n                    <Avatar className={classes.small} />\n                </IconButton>\n                <LoginDialog {...props} open={loginOpen} handleClose={handleLoginClose} />\n            </React.Fragment>\n        );\n    }\n};\n\nconst Section = (props: Props) => {\n    const { classes } = props;\n    return (\n        <React.Fragment>\n            <div className={classes.sectionDesktop}>\n                {/* \n                <IconButton color=\"inherit\">\n                    <Badge badgeContent={4} color=\"secondary\">\n                        <MailIcon />\n                    </Badge>\n                </IconButton>\n                <IconButton color=\"inherit\">\n                    <Badge badgeContent={17} color=\"secondary\">\n                        <NotificationsIcon />\n                    </Badge>\n                </IconButton> \n                */}\n                <UserIcon {...props} />\n            </div>\n            <div className={classes.sectionMobile}>\n                {/* <IconButton aria-haspopup=\"true\" color=\"inherit\">\n                    <MoreIcon />\n                </IconButton> */}\n                <UserIcon {...props} />\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default withStyles(styles)(Section);","import * as React from 'react';\nimport classNames from 'classnames';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { WithStyles } from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport MenuButton from './MenuButton';\nimport Title from './Title';\n// import Search from './Search';\nimport Section from './Section';\n\nimport { drawerWidth } from '../withRoot';\n\nconst basicStyles = createStyles({\n    root: {\n        width: '100%',\n    },\n    grow: {\n        flexGrow: 1,\n    },\n});\n\nconst appBarStyles = (theme: Theme) => createStyles({\n    appBar: {\n        position: 'absolute',\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        // boxShadow: 'thin',\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    appBarShiftLeft: {\n        marginLeft: drawerWidth,\n    },\n});\n\nconst styles = (theme: Theme) => createStyles({\n    ...basicStyles,\n    ...appBarStyles(theme),\n});\n\ninterface Props extends WithStyles<typeof styles> {\n    open: boolean;\n    openDrawer: () => void;\n}\n\nconst Header = (props: Props) => {\n    const { classes, open, openDrawer } = props;\n    return (\n        <div className={classes.root}>\n            <AppBar\n                className={classNames(classes.appBar, {\n                    [classes.appBarShift]: open,\n                    [classes.appBarShiftLeft]: open,\n                })}\n                elevation={1} \n            >\n                <Toolbar>\n                    <MenuButton open={open} openDrawer={openDrawer} />\n                    <Title />\n                    {/* <Search /> */}\n                    <div className={classes.grow} />\n                    <Section />\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\nexport default withStyles(styles)(Header);","export const OPEN_DIALOG_CLICK = '@@EDIT_DISTANCE/OPEN_DIALOG_CLICK';\nexport type OPEN_DIALOG_CLICK = typeof OPEN_DIALOG_CLICK;\n\nexport const CLOSE_DIALOG_CLICK = '@@EDIT_DISTANCE/CLOSE_DIALOG_CLICK';\nexport type CLOSE_DIALOG_CLICK = typeof CLOSE_DIALOG_CLICK;\n\nexport const OPEN_FORMULA_CLICK = '@@EDIT_DISTANCE/OPEN_FORMULA_CLICK';\nexport type OPEN_FORMULA_CLICK = typeof OPEN_FORMULA_CLICK;\n\nexport const CLOSE_FORMULA_CLICK = '@@EDIT_DISTANCE/CLOSE_FORMULA_CLICK';\nexport type CLOSE_FORMULA_CLICK = typeof CLOSE_FORMULA_CLICK;\n\nexport const BUTTON_CLICK = '@@EDIT_DISTANCE/BUTTON_CLICK';\nexport type BUTTON_CLICK = typeof BUTTON_CLICK;\n\nexport const REFRESH_CLICK = '@@EDIT_DISTANCE/REFRESH_CLICK';\nexport type REFRESH_CLICK = typeof REFRESH_CLICK;\n\nexport const GET_RECORD = '@@EDIT_DISTANCE/GET_SUCCESS_COUNT';\nexport type GET_RECORD = typeof GET_RECORD;\n\nexport const RECEIVED_RECORD = '@@EDIT_DISTANCE/RECEIVED_SUCCESS_COUNT';\nexport type RECEIVED_RECORD = typeof RECEIVED_RECORD;\n\nexport const INCREASE_RECORD = '@@EDIT_DISTANCE/INCREASE_RECORD';\nexport type INCREASE_RECORD = typeof INCREASE_RECORD;\n","import * as constants from './constants';\n\nexport interface Refresh {\n    type: constants.REFRESH_CLICK;\n}\n\nexport interface ButtonClick {\n    type: constants.BUTTON_CLICK;\n    payload: any;\n}\n\nexport interface FetchSuccess {\n    type: constants.RECEIVED_RECORD;\n    payload: any;\n}\n\nexport interface IncreaseSuccess {\n    type: constants.INCREASE_RECORD;\n}\n\nexport interface CloseDialog {\n    type: constants.CLOSE_DIALOG_CLICK;\n}\n\nexport interface OpenDialog {\n    type: constants.OPEN_DIALOG_CLICK;\n}\n\nexport interface CloseFormula {\n    type: constants.CLOSE_FORMULA_CLICK;\n}\n\nexport interface OpenFormula {\n    type: constants.OPEN_FORMULA_CLICK;\n}\n\nexport type Action = Refresh | ButtonClick | FetchSuccess | IncreaseSuccess |\n    CloseDialog | OpenDialog | CloseFormula | OpenFormula;\n\nexport function refresh(): Refresh {\n    return { type: constants.REFRESH_CLICK };\n}\n\nexport function buttonClick(data: any): ButtonClick {\n    return { type: constants.BUTTON_CLICK, payload: data };\n}\n\nexport function fetchSuccess(data: any): FetchSuccess {\n    return { type: constants.RECEIVED_RECORD, payload: data };\n}\n\nexport function increaseSuccess(): IncreaseSuccess {\n    return { type: constants.INCREASE_RECORD };\n}\n\nexport function closeDialog(): CloseDialog {\n    return { type: constants.CLOSE_DIALOG_CLICK };\n}\n\nexport function openDialog(): OpenDialog {\n    return { type: constants.OPEN_DIALOG_CLICK };\n}\n\nexport function closeFormula(): CloseFormula {\n    return { type: constants.CLOSE_FORMULA_CLICK };\n}\n\nexport function openFormula(): OpenFormula {\n    return { type: constants.OPEN_FORMULA_CLICK };\n}\n","export const formula = `if (char1 === char2) {\n  table[row][col] = table[row - 1][col - 1];\n} else {\n  const min = Math.min(\n    table[row - 1][col - 1],\n    table[row - 1][col],\n    table[row][col - 1]\n  );\n  table[row][col] = min + 1;\n}`;\n\nexport const description = `In computational linguistics and computer science, edit distance is a \nway of quantifying how dissimilar two strings (e.g., words) are to \none another by counting the minimum number of operations required to \ntransform one string into the other.\n                - From Wikipedia.\n`;\n\nexport const alUsecases = `1. In natural language processing, where automatic spelling \ncorrection can determine candidate corrections for a misspelled \nword by selecting words from a dictionary that have a low distance \nto the word in question. \n\n2. In bioinformatics, it can be used to quantify the similarity \nof DNA sequences, which can be viewed as strings of the letters \nA, C, G and T.\n                - From Wikipedia.\n`;\n\nexport const example = `The distance between kitten and sitting is 3. \nA minimal edit script that transforms the former into the latter is: \n  \n1. kitten → sitten (substitution of 's' for 'k') \n2. sitten → sittin (substitution of 'i' for 'e') \n3. sittin → sitting (insertion of 'g' at the end). \n                - From Wikipedia.\n`;","const createDPTable = (stringOne: string, stringTwo: string): number[][] => {\n    const rows = stringTwo.length + 1;\n    const cols = stringOne.length + 1;\n\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill(0));\n\n    for (let col = 0; col < cols; col++) {\n        table[0][col] = col;\n    }\n\n    for (let row = 0; row < rows; row++) {\n        table[row][0] = row;\n    }\n\n    for (let row = 1; row < rows; row++) {\n        for (let col = 1; col < cols; col++) {\n            if (stringOne.charAt(col - 1) === stringTwo.charAt(row - 1)) {\n                table[row][col] = table[row - 1][col - 1];\n            } else {\n                const min = Math.min(\n                    table[row - 1][col - 1],\n                    table[row - 1][col],\n                    table[row][col - 1]\n                );\n                table[row][col] = min + 1;\n            }\n        }\n    }\n\n    return table;\n};\n\nexport default createDPTable;\n","import createDPTable from './algorithm';\nimport { Point } from '../../store/BasicState';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst startPoint: Point = {\n    row: 2,\n    col: 2,\n};\n\nconst createTableMatrix = (stringOne: string, stringTwo: string): (number | string)[][] => {\n    const rows = stringTwo.length + 2;\n    const cols = stringOne.length + 2;\n\n    const table = new Array(rows).fill('').map(() => new Array(cols).fill(''));\n\n    for (let col = 2; col < cols; col++) {\n        table[0][col] = stringOne.charAt(col - 2);\n        table[1][col] = col - 1;\n    }\n\n    for (let row = 2; row < rows; row++) {\n        table[row][0] = stringTwo.charAt(row - 2);\n        table[row][1] = row - 1;\n    }\n\n    table[1][1] = 0;\n    table[2][2] = '?';\n    return table;\n};\n\nconst createComparedTable = (stringOne: string, stringTwo: string): (number | string)[][] => {\n    const rows = stringTwo.length + 2;\n    const cols = stringOne.length + 2;\n\n    const dpTable = createDPTable(stringOne, stringTwo);\n    const tableMatrix = createTableMatrix(stringOne, stringTwo);\n\n    for (let row = 1; row < rows; row++) {\n        for (let col = 1; col < cols; col++) {\n            tableMatrix[row][col] = dpTable[row - 1][col - 1];\n        }\n    }\n    return tableMatrix;\n};\n\nconst addHelperStyles = (styles: React.CSSProperties[][], point: Point): void => {\n    for (let col = 0; col < styles[0].length && col <= point.col; col++) {\n        styles[0][col] = helperStyle;\n    }\n\n    for (let row = 0; row < styles.length && row <= point.row; row++) {\n        styles[row][0] = helperStyle;\n    }\n};\n\nconst createTableStyles = (stringOne: string, stringTwo: string): (React.CSSProperties)[][] => {\n    const rows = stringTwo.length + 2;\n    const cols = stringOne.length + 2;\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill({}));\n    addHelperStyles(table, startPoint);\n    return table;\n};\n\nconst createButtons = (stringOne: string, stringTwo: string): number[] => {\n    const dpTable = createDPTable(stringOne, stringTwo);\n    const set = new Set<number>();\n    for (let row = 1; row < dpTable.length; row++) {\n        for (let col = 1; col < dpTable[row].length; col++) {\n            set.add(dpTable[row][col]);\n        }\n    }\n    return Array.from(set).sort();\n};\n\nconst createButtonsStyles = (stringOne: string, stringTwo: string): (React.CSSProperties)[] => {\n    return createButtons(stringOne, stringTwo).map(() => ({ color: 'back' }));\n};\n\nexport {\n    addHelperStyles,\n    createTableMatrix,\n    createComparedTable,\n    createTableStyles,\n    createButtons,\n    createButtonsStyles,\n    startPoint,\n};\n","import { Dialog, DialogScroll, Header, BasicInfo, State, Difficulty, Formula } from '../BasicState';\nimport { buttonClick, refresh, openDialog, closeDialog, closeFormula, openFormula } from './actions';\nimport { description, formula, example, alUsecases } from './contents';\nimport * as helper from '../../algorithms/edit-distance';\n\nexport const basicInfo: BasicInfo = {\n    id: 1,\n    title: 'EDIT DISTANCE',\n};\n\nconst codeFormula: Formula = {\n    ...basicInfo,\n    formulaOpen: false,\n    formulaCroll: DialogScroll.Paper,\n    formula: formula,\n    handleCloseFormulaClick: closeFormula,\n};\n\nconst dialog: Dialog = {\n    ...basicInfo,\n    dialogOpen: false,\n    dialogCroll: DialogScroll.Paper,\n    description: description,\n    example: example,\n    alUsecases: alUsecases,\n    handleCloseDialogClick: closeDialog,\n};\n\nconst header: Header = {\n    ...basicInfo,\n    success: false,\n    loading: false,\n    steps: 0,\n    errors: 0,\n    startTime: 0,\n    finishTime: 0,\n    difficulty: Difficulty.Easy,\n    handleRefreshClick: refresh,\n    handleOpenDialogClick: openDialog,\n    handleOpenFormulaClick: openFormula,\n};\n\nconst bases = 'ACGT';\nconst random = (max: number) => Math.floor(Math.random() * max);\n\nexport const create = () => {\n    const stringOne: string = Array(5).fill(bases.length).map(random).map(i => bases[i]).join('');\n    const stringTwo: string = Array(5).fill(bases.length).map(random).map(i => bases[i]).join('');\n    return ({\n        ...header,\n        ...dialog,\n        ...codeFormula,\n        currentPoint: helper.startPoint,\n        comparedTable: helper.createComparedTable(stringOne, stringTwo),\n        table: helper.createTableMatrix(stringOne, stringTwo),\n        tableStyles: helper.createTableStyles(stringOne, stringTwo),\n        buttons: helper.createButtons(stringOne, stringTwo),\n        buttonsStyles: helper.createButtonsStyles(stringOne, stringTwo),\n        handleButtonClick: buttonClick,\n    });\n};\n\nexport const state: State = create();\n","export const OPEN_DIALOG_CLICK = '@@KNAPSACK_PROBLEM/OPEN_DIALOG_CLICK';\nexport type OPEN_DIALOG_CLICK = typeof OPEN_DIALOG_CLICK;\n\nexport const CLOSE_DIALOG_CLICK = '@@KNAPSACK_PROBLEM/CLOSE_DIALOG_CLICK';\nexport type CLOSE_DIALOG_CLICK = typeof CLOSE_DIALOG_CLICK;\n\nexport const OPEN_FORMULA_CLICK = '@@KNAPSACK_PROBLEM/OPEN_FORMULA_CLICK';\nexport type OPEN_FORMULA_CLICK = typeof OPEN_FORMULA_CLICK;\n\nexport const CLOSE_FORMULA_CLICK = '@@KNAPSACK_PROBLEM/CLOSE_FORMULA_CLICK';\nexport type CLOSE_FORMULA_CLICK = typeof CLOSE_FORMULA_CLICK;\n\nexport const BUTTON_CLICK = '@@KNAPSACK_PROBLEM/BUTTON_CLICK';\nexport type BUTTON_CLICK = typeof BUTTON_CLICK;\n\nexport const REFRESH_CLICK = '@@KNAPSACK_PROBLEM/REFRESH_CLICK';\nexport type REFRESH_CLICK = typeof REFRESH_CLICK;\n\nexport const GET_RECORD = '@@KNAPSACK_PROBLEM/GET_SUCCESS_COUNT';\nexport type GET_RECORD = typeof GET_RECORD;\n\nexport const RECEIVED_RECORD = '@@KNAPSACK_PROBLEM/RECEIVED_SUCCESS_COUNT';\nexport type RECEIVED_RECORD = typeof RECEIVED_RECORD;\n\nexport const INCREASE_RECORD = '@@KNAPSACK_PROBLEM/INCREASE_RECORD';\nexport type INCREASE_RECORD = typeof INCREASE_RECORD;\n","import * as constants from './constants';\n\nexport interface Refresh {\n    type: constants.REFRESH_CLICK;\n}\n\nexport interface ButtonClick {\n    type: constants.BUTTON_CLICK;\n    payload: any;\n}\n\nexport interface FetchSuccess {\n    type: constants.RECEIVED_RECORD;\n    payload: any;\n}\n\nexport interface IncreaseSuccess {\n    type: constants.INCREASE_RECORD;\n}\n\nexport interface CloseDialog {\n    type: constants.CLOSE_DIALOG_CLICK;\n}\n\nexport interface OpenDialog {\n    type: constants.OPEN_DIALOG_CLICK;\n}\n\nexport interface CloseFormula {\n    type: constants.CLOSE_FORMULA_CLICK;\n}\n\nexport interface OpenFormula {\n    type: constants.OPEN_FORMULA_CLICK;\n}\n\nexport type Action = Refresh | ButtonClick | FetchSuccess | IncreaseSuccess |\n    CloseDialog | OpenDialog | CloseFormula | OpenFormula;\n\nexport function refresh(): Refresh {\n    return { type: constants.REFRESH_CLICK };\n}\n\nexport function buttonClick(data: any): ButtonClick {\n    return { type: constants.BUTTON_CLICK, payload: data };\n}\n\nexport function fetchSuccess(data: any): FetchSuccess {\n    return { type: constants.RECEIVED_RECORD, payload: data };\n}\n\nexport function increaseSuccess(): IncreaseSuccess {\n    return { type: constants.INCREASE_RECORD };\n}\n\nexport function closeDialog(): CloseDialog {\n    return { type: constants.CLOSE_DIALOG_CLICK };\n}\n\nexport function openDialog(): OpenDialog {\n    return { type: constants.OPEN_DIALOG_CLICK };\n}\n\nexport function closeFormula(): CloseFormula {\n    return { type: constants.CLOSE_FORMULA_CLICK };\n}\n\nexport function openFormula(): OpenFormula {\n    return { type: constants.OPEN_FORMULA_CLICK };\n}\n","export const formula = `if (itemWeight > currentWeight) {\n  table[row][col] = table[row - 1][col];\n} else {\n  table[row][col] = Math.max(\n    table[row - 1][col],\n    table[row - 1][currentWeight - itemWeight] + itemValue\n  );\n}\n\nor\n\nif (item.weight > knapsack.weight) {\n  table[row][col] = getPreviousValue(row, col);\n} else {\n  table[row][col] = Math.max(\n    getPreviousValue(row, col), \n    getUpdatedValue(row, knapsack, item)\n  );\n}\n\nconst getPreviousValue = (row, col) => {\n  return table[row - 1][col];\n};\n\nconst getUpdatedValue = (row, knapsack, itemWeight, itemValue) => {\n  return table[row - 1][knapsack.weight - item.weight] + item.value;\n};\n`\n;\n\n// npm i -D @types/webpack-env\nexport const description = require.context(`!raw-loader!./`, false, /\\.md$/, )(\"./description.zh.cn.md\").default;\n\n// export const description = `Given weights and values of n items, put these items in a knapsack\n// of capacity W to get the maximum total value in the knapsack.\n\n// V: value, W: Weight\n// `;\n\nexport const alUsecases = '';\nexport const example = '';\n","import { KnapSackItem } from './KnapsackItem';\n\nconst createDPTable = (items: KnapSackItem[], totalWeight: number): number[][] => {\n    const rows = items.length + 1;\n    const cols = totalWeight + 1;\n\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill(0));\n\n    for (let row = 1; row < rows; row++) {\n        const item = items[row - 1];\n        for (let col = 1; col < cols; col++) {\n            if (item.weight > col) {\n                table[row][col] = table[row - 1][col];\n            } else {\n                table[row][col] = Math.max(\n                    table[row - 1][col],\n                    table[row - 1][col - item.weight] + item.value\n                );\n            }\n        }\n    }\n\n    return table;\n};\n\nexport default createDPTable;\n","import createDPTable from './algorithm';\nimport { Point } from '../../store/BasicState';\nimport { helperStyle, helperStyleSecondary, helperStyleThird } from '../../pages/withRoot';\nimport { KnapSackItem } from './KnapsackItem';\n\nconst startPoint: Point = { row: 2, col: 3 };\n\ninterface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (items: KnapSackItem[], totalWeight: number): TableSize => {\n    const rows = items.length + 2;\n    const cols = totalWeight + 3;\n    return { rows, cols };\n};\n\nconst createTableMatrix = (items: KnapSackItem[], totalWeight: number): (number | string)[][] => {\n    const { rows, cols } = getTableSize(items, totalWeight);\n\n    const table = new Array(rows).fill('').map(() => new Array(cols).fill(''));\n    table[0][0] = 'V';\n    table[0][1] = 'W';\n    for (let col = 2; col < cols; col++) {\n        table[0][col] = col - 2;\n    }\n\n    for (let col = 0; col < cols; col++) {\n        table[1][col] = 0;\n    }\n\n    for (let row = 2; row < rows; row++) {\n        const item = items[row - 2];\n        table[row][0] = item.value;\n        table[row][1] = item.weight;\n        table[row][2] = 0;\n    }\n\n    table[startPoint.row][startPoint.col] = '?';\n    return table;\n};\n\nconst createComparedTable = (items: KnapSackItem[], totalWeight: number): (number | string)[][] => {\n    const { rows, cols } = getTableSize(items, totalWeight);\n\n    const dpTable = createDPTable(items, totalWeight);\n    const tableMatrix = createTableMatrix(items, totalWeight);\n\n    for (let row = 2; row < rows; row++) {\n        for (let col = 3; col < cols; col++) {\n            tableMatrix[row][col] = dpTable[row - 1][col - 2];\n        }\n    }\n    return tableMatrix;\n};\n\nconst addHelperStyles = (styles: React.CSSProperties[][], point: Point): void => {\n    styles[1][3] = helperStyleSecondary;\n    styles[0][3] = helperStyleThird;\n    styles[2][0] = helperStyle;\n    styles[2][1] = helperStyleThird;\n};\n\nconst createTableStyles = (items: KnapSackItem[], totalWeight: number): (React.CSSProperties)[][] => {\n    const { rows, cols } = getTableSize(items, totalWeight);\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill({}));\n    addHelperStyles(table, startPoint);\n    if (items[0].weight === 1) {\n        table[1][2] = helperStyle;\n    }\n    return table;\n};\n\nconst createButtons = (items: KnapSackItem[], totalWeight: number): number[] => {\n    const dpTable = createDPTable(items, totalWeight);\n    const set = new Set<number>();\n    for (let row = 1; row < dpTable.length; row++) {\n        for (let col = 1; col < dpTable[row].length; col++) {\n            set.add(dpTable[row][col]);\n        }\n    }\n    return Array.from(set).sort(function (a: number, b: number) { return a - b; });\n};\n\nconst createButtonsStyles = (items: KnapSackItem[], totalWeight: number): (React.CSSProperties)[] => {\n    return createButtons(items, totalWeight).map(() => ({ color: 'back' }));\n};\n\nexport {\n    addHelperStyles,\n    createTableMatrix,\n    createComparedTable,\n    createTableStyles,\n    createButtons,\n    createButtonsStyles,\n    startPoint,\n};\n","import { Dialog, DialogScroll, Header, BasicInfo, State, Difficulty, Formula } from '../BasicState';\nimport { buttonClick, refresh, openDialog, closeDialog, closeFormula, openFormula } from './actions';\nimport { description, formula, example, alUsecases } from './contents';\nimport { KnapSackItem } from '../../algorithms/knapsack-problem/KnapsackItem';\nimport * as helper from '../../algorithms/knapsack-problem';\n\nexport const basicInfo: BasicInfo = {\n    id: 6,\n    title: '0/1 Knapsack Problem',\n};\n\nconst codeFormula: Formula = {\n    ...basicInfo,\n    formulaOpen: false,\n    formulaCroll: DialogScroll.Paper,\n    formula: formula,\n    handleCloseFormulaClick: closeFormula,\n};\n\nconst dialog: Dialog = {\n    ...basicInfo,\n    dialogOpen: false,\n    dialogCroll: DialogScroll.Paper,\n    description: description,\n    example: example,\n    alUsecases: alUsecases,\n    handleCloseDialogClick: closeDialog,\n};\n\nconst header: Header = {\n    ...basicInfo,\n    success: false,\n    loading: false,\n    steps: 0,\n    errors: 0,\n    startTime: 0,\n    finishTime: 0,\n    difficulty: Difficulty.Easy,\n    handleRefreshClick: refresh,\n    handleOpenDialogClick: openDialog,\n    handleOpenFormulaClick: openFormula,\n};\n\nconst random = (max: number) => Math.floor(Math.random() * max) + 1;\nconst totalWeight = 6;\n\nexport const create = () => {\n    const items: KnapSackItem[] = Array(4).fill(0).map(() => ({ weight: random(5), value: random(10) }));\n    return ({\n        ...header,\n        ...dialog,\n        ...codeFormula,\n        currentPoint: helper.startPoint,\n        comparedTable: helper.createComparedTable(items, totalWeight),\n        table: helper.createTableMatrix(items, totalWeight),\n        tableStyles: helper.createTableStyles(items, totalWeight),\n        buttons: helper.createButtons(items, totalWeight),\n        buttonsStyles: helper.createButtonsStyles(items, totalWeight),\n        handleButtonClick: buttonClick,\n    });\n};\n\nexport const state: State = create();\n","export const OPEN_DIALOG_CLICK = '@@ROD_CUTTING_PROBLEM/OPEN_DIALOG_CLICK';\nexport type OPEN_DIALOG_CLICK = typeof OPEN_DIALOG_CLICK;\n\nexport const CLOSE_DIALOG_CLICK = '@@ROD_CUTTING_PROBLEM/CLOSE_DIALOG_CLICK';\nexport type CLOSE_DIALOG_CLICK = typeof CLOSE_DIALOG_CLICK;\n\nexport const OPEN_FORMULA_CLICK = '@@ROD_CUTTING_PROBLEM/OPEN_FORMULA_CLICK';\nexport type OPEN_FORMULA_CLICK = typeof OPEN_FORMULA_CLICK;\n\nexport const CLOSE_FORMULA_CLICK = '@@ROD_CUTTING_PROBLEM/CLOSE_FORMULA_CLICK';\nexport type CLOSE_FORMULA_CLICK = typeof CLOSE_FORMULA_CLICK;\n\nexport const BUTTON_CLICK = '@@ROD_CUTTING_PROBLEM/BUTTON_CLICK';\nexport type BUTTON_CLICK = typeof BUTTON_CLICK;\n\nexport const REFRESH_CLICK = '@@ROD_CUTTING_PROBLEM/REFRESH_CLICK';\nexport type REFRESH_CLICK = typeof REFRESH_CLICK;\n\nexport const GET_RECORD = '@@ROD_CUTTING_PROBLEM/GET_SUCCESS_COUNT';\nexport type GET_RECORD = typeof GET_RECORD;\n\nexport const RECEIVED_RECORD = '@@ROD_CUTTING_PROBLEM/RECEIVED_SUCCESS_COUNT';\nexport type RECEIVED_RECORD = typeof RECEIVED_RECORD;\n\nexport const INCREASE_RECORD = '@@ROD_CUTTING_PROBLEM/INCREASE_RECORD';\nexport type INCREASE_RECORD = typeof INCREASE_RECORD;\n","import * as constants from './constants';\n\nexport interface Refresh {\n    type: constants.REFRESH_CLICK;\n}\n\nexport interface ButtonClick {\n    type: constants.BUTTON_CLICK;\n    payload: any;\n}\n\nexport interface FetchSuccess {\n    type: constants.RECEIVED_RECORD;\n    payload: any;\n}\n\nexport interface IncreaseSuccess {\n    type: constants.INCREASE_RECORD;\n}\n\nexport interface CloseDialog {\n    type: constants.CLOSE_DIALOG_CLICK;\n}\n\nexport interface OpenDialog {\n    type: constants.OPEN_DIALOG_CLICK;\n}\n\nexport interface CloseFormula {\n    type: constants.CLOSE_FORMULA_CLICK;\n}\n\nexport interface OpenFormula {\n    type: constants.OPEN_FORMULA_CLICK;\n}\n\nexport type Action = Refresh | ButtonClick | FetchSuccess | IncreaseSuccess |\n    CloseDialog | OpenDialog | CloseFormula | OpenFormula;\n\nexport function refresh(): Refresh {\n    return { type: constants.REFRESH_CLICK };\n}\n\nexport function buttonClick(data: any): ButtonClick {\n    return { type: constants.BUTTON_CLICK, payload: data };\n}\n\nexport function fetchSuccess(data: any): FetchSuccess {\n    return { type: constants.RECEIVED_RECORD, payload: data };\n}\n\nexport function increaseSuccess(): IncreaseSuccess {\n    return { type: constants.INCREASE_RECORD };\n}\n\nexport function closeDialog(): CloseDialog {\n    return { type: constants.CLOSE_DIALOG_CLICK };\n}\n\nexport function openDialog(): OpenDialog {\n    return { type: constants.OPEN_DIALOG_CLICK };\n}\n\nexport function closeFormula(): CloseFormula {\n    return { type: constants.CLOSE_FORMULA_CLICK };\n}\n\nexport function openFormula(): OpenFormula {\n    return { type: constants.OPEN_FORMULA_CLICK };\n}\n","export const formula = `if (rodLength > currentLength) {\n  table[row][col] = table[row - 1][col];\n} else {\n  table[row][col] = Math.max(\n    table[row - 1][col], \n    table[row][currentLength - rodLength] + rodPrice\n  );\n}`;\n\nexport const description = `Assume a company buys long steel rods and cuts them into shorter rods \nfor sale to its customers. If each cut is free and rods of different \nlengths can be sold for different amounts, we wish to determine \nhow to best cut the original rods to maximize the revenue.\n\nP: price, L: length\n`;\n\nexport const alUsecases = '';\nexport const example = `If length of the rod is 8 and the values of different pieces are \ngiven as following, then the maximum obtainable value is 22 (by \ncutting in two pieces of lengths 2 and 6).\n\n| length | 1 | 2 | 3 | 4 | 5  | 6  | 7  | 8  |\n|--------|---|---|---|---|----|----|----|----|\n| price  | 1 | 5 | 8 | 9 | 10 | 17 | 17 | 20 |\n\nAnd if the prices are as following, then the maximum obtainable value\nis 24 (by cutting in eight pieces of length 1).\n\n| length | 1 | 2 | 3 | 4 | 5  | 6  | 7  | 8  |\n|--------|---|---|---|---|----|----|----|----|\n| price  | 3 | 5 | 8 | 9 | 10 | 17 | 17 | 20 |\n`;\n","import { RodCuttingItem } from './RodCuttingItem';\n\ninterface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (items: RodCuttingItem[], totalPrice: number): TableSize => {\n    const rows = items.length + 1;\n    const cols = totalPrice + 1;\n    return { rows, cols };\n};\n\nconst createDPTable = (items: RodCuttingItem[], totalPrice: number): number[][] => {\n    const { rows, cols } = getTableSize(items, totalPrice);\n\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill(0));\n\n    for (let row = 1; row < rows; row++) {\n        const item = items[row - 1];\n        for (let col = 1; col < cols; col++) {\n            if (item.length > col) {\n                table[row][col] = table[row - 1][col];\n            } else {\n                table[row][col] = Math.max(\n                    table[row - 1][col],\n                    table[row][col - item.length] + item.price\n                );\n            }\n        }\n    }\n\n    return table;\n};\n\nexport default createDPTable;\n","import createDPTable from './algorithm';\nimport { Point } from '../../store/BasicState';\nimport { helperStyle, helperStyleSecondary, helperStyleThird } from '../../pages/withRoot';\nimport { RodCuttingItem } from './RodCuttingItem';\n\nconst startPoint: Point = {\n    row: 2,\n    col: 3,\n};\n\ninterface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (items: RodCuttingItem[], totalPrice: number): TableSize => {\n    const rows = items.length + 2;\n    const cols = totalPrice + 3;\n    return { rows, cols };\n};\n\nconst createTableMatrix = (items: RodCuttingItem[], totalPrice: number): (number | string)[][] => {\n    const { rows, cols } = getTableSize(items, totalPrice);\n\n    const table = new Array(rows).fill('').map(() => new Array(cols).fill(''));\n    table[0][0] = 'P';\n    table[0][1] = 'L';\n    for (let col = 2; col < cols; col++) {\n        table[0][col] = col - 2;\n    }\n\n    for (let col = 0; col < cols; col++) {\n        table[1][col] = 0;\n    }\n\n    for (let row = 2; row < rows; row++) {\n        const item = items[row - 2];\n        table[row][0] = item.price;\n        table[row][1] = item.length;\n        table[row][2] = 0;\n    }\n\n    table[startPoint.row][startPoint.col] = '?';\n    return table;\n};\n\nconst createComparedTable = (items: RodCuttingItem[], totalPrice: number): (number | string)[][] => {\n    const { rows, cols } = getTableSize(items, totalPrice);\n\n    const dpTable = createDPTable(items, totalPrice);\n    const tableMatrix = createTableMatrix(items, totalPrice);\n\n    for (let row = 2; row < rows; row++) {\n        for (let col = 3; col < cols; col++) {\n            tableMatrix[row][col] = dpTable[row - 1][col - 2];\n        }\n    }\n    return tableMatrix;\n};\n\nconst addHelperStyles = (styles: React.CSSProperties[][], point: Point): void => {\n    styles[1][3] = helperStyleSecondary;\n    styles[0][3] = helperStyleThird;\n    styles[2][0] = helperStyle;\n    styles[2][1] = helperStyleThird;\n};\n\nconst createTableStyles = (items: RodCuttingItem[], totalPrice: number): (React.CSSProperties)[][] => {\n    const { rows, cols } = getTableSize(items, totalPrice);\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill({}));\n    addHelperStyles(table, startPoint);\n    return table;\n};\n\nconst createButtons = (items: RodCuttingItem[], totalPrice: number): number[] => {\n    const dpTable = createDPTable(items, totalPrice);\n    const set = new Set<number>();\n    for (let row = 1; row < dpTable.length; row++) {\n        for (let col = 1; col < dpTable[row].length; col++) {\n            set.add(dpTable[row][col]);\n        }\n    }\n    return Array.from(set).sort(function (a: number, b: number) { return a - b; });\n};\n\nconst createButtonsStyles = (items: RodCuttingItem[], totalPrice: number): (React.CSSProperties)[] => {\n    return createButtons(items, totalPrice).map(() => ({ color: 'back' }));\n};\n\nexport {\n    addHelperStyles,\n    createTableMatrix,\n    createComparedTable,\n    createTableStyles,\n    createButtons,\n    createButtonsStyles,\n    startPoint,\n};\n","import { Dialog, DialogScroll, Header, BasicInfo, State, Difficulty, Formula } from '../BasicState';\nimport { buttonClick, refresh, openDialog, closeDialog, closeFormula, openFormula } from './actions';\nimport { description, formula, example, alUsecases } from './contents';\nimport * as helper from '../../algorithms/rod-cutting-problem';\nimport { RodCuttingItem } from '../../algorithms/rod-cutting-problem/RodCuttingItem';\n\nexport const basicInfo: BasicInfo = {\n    id: 19,\n    title: 'Rod Cutting Problem',\n};\n\nconst codeFormula: Formula = {\n    ...basicInfo,\n    formulaOpen: false,\n    formulaCroll: DialogScroll.Paper,\n    formula: formula,\n    handleCloseFormulaClick: closeFormula,\n};\n\nconst dialog: Dialog = {\n    ...basicInfo,\n    dialogOpen: false,\n    dialogCroll: DialogScroll.Paper,\n    description: description,\n    example: example,\n    alUsecases: alUsecases,\n    handleCloseDialogClick: closeDialog,\n};\n\nconst header: Header = {\n    ...basicInfo,\n    success: false,\n    loading: false,\n    steps: 0,\n    errors: 0,\n    startTime: 0,\n    finishTime: 0,\n    difficulty: Difficulty.Easy,\n    handleRefreshClick: refresh,\n    handleOpenDialogClick: openDialog,\n    handleOpenFormulaClick: openFormula,\n};\n\nconst shuffle = (array: RodCuttingItem[]) => {\n    for (let i = array.length - 1; i > 0; i -= 1) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n};\n\nconst totalWeight = 6;\nconst items: RodCuttingItem[] = [\n    { length: 1, price: 2 },\n    { length: 2, price: 5 },\n    { length: 3, price: 7 },\n    { length: 4, price: 8 },\n];\n\nexport const create = () => {\n    shuffle(items);\n    return ({\n        ...header,\n        ...dialog,\n        ...codeFormula,\n        currentPoint: helper.startPoint,\n        comparedTable: helper.createComparedTable(items, totalWeight),\n        table: helper.createTableMatrix(items, totalWeight),\n        tableStyles: helper.createTableStyles(items, totalWeight),\n        buttons: helper.createButtons(items, totalWeight),\n        buttonsStyles: helper.createButtonsStyles(items, totalWeight),\n        handleButtonClick: buttonClick,\n    });\n};\n\nexport const state: State = create();\n","export const OPEN_DIALOG_CLICK = '@@WILDCARD_MATCHING/OPEN_DIALOG_CLICK';\nexport type OPEN_DIALOG_CLICK = typeof OPEN_DIALOG_CLICK;\n\nexport const CLOSE_DIALOG_CLICK = '@@WILDCARD_MATCHING/CLOSE_DIALOG_CLICK';\nexport type CLOSE_DIALOG_CLICK = typeof CLOSE_DIALOG_CLICK;\n\nexport const OPEN_FORMULA_CLICK = '@@WILDCARD_MATCHING/OPEN_FORMULA_CLICK';\nexport type OPEN_FORMULA_CLICK = typeof OPEN_FORMULA_CLICK;\n\nexport const CLOSE_FORMULA_CLICK = '@@WILDCARD_MATCHING/CLOSE_FORMULA_CLICK';\nexport type CLOSE_FORMULA_CLICK = typeof CLOSE_FORMULA_CLICK;\n\nexport const BUTTON_CLICK = '@@WILDCARD_MATCHING/BUTTON_CLICK';\nexport type BUTTON_CLICK = typeof BUTTON_CLICK;\n\nexport const REFRESH_CLICK = '@@WILDCARD_MATCHING/REFRESH_CLICK';\nexport type REFRESH_CLICK = typeof REFRESH_CLICK;\n\nexport const GET_RECORD = '@@WILDCARD_MATCHING/GET_SUCCESS_COUNT';\nexport type GET_RECORD = typeof GET_RECORD;\n\nexport const RECEIVED_RECORD = '@@WILDCARD_MATCHING/RECEIVED_SUCCESS_COUNT';\nexport type RECEIVED_RECORD = typeof RECEIVED_RECORD;\n\nexport const INCREASE_RECORD = '@@WILDCARD_MATCHING/INCREASE_RECORD';\nexport type INCREASE_RECORD = typeof INCREASE_RECORD;\n","import * as constants from './constants';\n\nexport interface Refresh {\n    type: constants.REFRESH_CLICK;\n}\n\nexport interface ButtonClick {\n    type: constants.BUTTON_CLICK;\n    payload: any;\n}\n\nexport interface FetchSuccess {\n    type: constants.RECEIVED_RECORD;\n    payload: any;\n}\n\nexport interface IncreaseSuccess {\n    type: constants.INCREASE_RECORD;\n}\n\nexport interface CloseDialog {\n    type: constants.CLOSE_DIALOG_CLICK;\n}\n\nexport interface OpenDialog {\n    type: constants.OPEN_DIALOG_CLICK;\n}\n\nexport interface CloseFormula {\n    type: constants.CLOSE_FORMULA_CLICK;\n}\n\nexport interface OpenFormula {\n    type: constants.OPEN_FORMULA_CLICK;\n}\n\nexport type Action = Refresh | ButtonClick | FetchSuccess | IncreaseSuccess |\n    CloseDialog | OpenDialog | CloseFormula | OpenFormula;\n\nexport function refresh(): Refresh {\n    return { type: constants.REFRESH_CLICK };\n}\n\nexport function buttonClick(data: any): ButtonClick {\n    return { type: constants.BUTTON_CLICK, payload: data };\n}\n\nexport function fetchSuccess(data: any): FetchSuccess {\n    return { type: constants.RECEIVED_RECORD, payload: data };\n}\n\nexport function increaseSuccess(): IncreaseSuccess {\n    return { type: constants.INCREASE_RECORD };\n}\n\nexport function closeDialog(): CloseDialog {\n    return { type: constants.CLOSE_DIALOG_CLICK };\n}\n\nexport function openDialog(): OpenDialog {\n    return { type: constants.OPEN_DIALOG_CLICK };\n}\n\nexport function closeFormula(): CloseFormula {\n    return { type: constants.CLOSE_FORMULA_CLICK };\n}\n\nexport function openFormula(): OpenFormula {\n    return { type: constants.OPEN_FORMULA_CLICK };\n}\n","export const formula = `if (p === '?' || p === t) {\n  table[row][col] = table[row - 1][col - 1];\n} else if (p === '*') {\n  table[row][col] = \n    table[row][col - 1] || table[row - 1][col];\n}`;\n\nexport const description = `'?' Matches any single character. \n'*' Matches any sequence of characters (including the empty sequence). \nThe matching should cover the entire input string (not partial). \n`;\n\nexport const alUsecases = '';\nexport const example = `\"aa\",\"a\" → false\n\"aa\",\"aa\" → true\n\"aa\", \"*\" → true\n\"aa\", \"a*\" → true\n\"ab\", \"?*\" → true\n\"aab\", \"c*a*b\" → false\n`;\n","const getTableSize = (pattern: string, text: string) => {\n    const rows = text.length + 1;\n    const cols = pattern.length + 1;\n    return { rows, cols };\n};\n\nconst createDPTable = (pattern: string, text: string): boolean[][] => {\n    const { rows, cols } = getTableSize(pattern, text);\n\n    const table = new Array(rows).fill(false).map(() => new Array(cols).fill(false));\n    table[0][0] = true;\n\n    for (let col = 1; col < pattern.length; col += 1) {\n        if (pattern.charAt(col - 1) === '*') {\n            table[0][col] = table[0][col - 1];\n        }\n    }\n\n    for (let row = 1; row < table.length; row++) {\n        const t = text.charAt(row - 1);\n        for (let col = 1; col < table[row].length; col++) {\n            const p = pattern.charAt(col - 1);\n            if (p === '?' || p === t) {\n                table[row][col] = table[row - 1][col - 1];\n            } else if (p === '*') {\n                table[row][col] = table[row][col - 1] || table[row - 1][col];\n            }\n        }\n    }\n    return table;\n};\n\nexport default createDPTable;\n","import createDPTable from './algorithm';\nimport { Point } from '../../store/BasicState';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst startPoint: Point = {\n    row: 1,\n    col: 2,\n};\n\ninterface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (pattern: string, text: string): TableSize => {\n    const rows = text.length + 1;\n    const cols = pattern.length + 1;\n    return { rows, cols };\n};\n\nconst createTableMatrix = (pattern: string, text: string): (boolean | string)[][] => {\n    const { rows, cols } = getTableSize(pattern, text);\n    const table = new Array(rows).fill('').map(() => new Array(cols).fill(''));\n\n    for (let col = 2; col < cols; col++) {\n        table[0][col] = pattern.charAt(col - 2);\n    }\n\n    for (let row = 2; row < rows; row++) {\n        table[row][0] = text.charAt(row - 2);\n    }\n\n    table[1][1] = 'T';\n    for (let row = 2; row < rows; row++) {\n        table[row][1] = 'F';\n    }\n\n    table[startPoint.row][startPoint.col] = '?';\n    return table;\n};\n\nconst createComparedTable = (pattern: string, text: string): (boolean | string)[][] => {\n    const { rows, cols } = getTableSize(pattern, text);\n\n    const dpTable = createDPTable(pattern, text);\n    const tableMatrix = createTableMatrix(pattern, text);\n\n    for (let row = 1; row < rows; row++) {\n        for (let col = 1; col < cols; col++) {\n            tableMatrix[row][col] = dpTable[row - 1][col - 1];\n        }\n    }\n    return tableMatrix;\n};\n\nconst addHelperStyles = (styles: React.CSSProperties[][], point: Point): void => {\n    for (let col = 0; col < styles[0].length && col <= point.col; col++) {\n        styles[0][col] = helperStyle;\n    }\n\n    for (let row = 0; row < styles.length && row <= point.row; row++) {\n        styles[row][0] = helperStyle;\n    }\n};\n\nconst createTableStyles = (pattern: string, text: string): (React.CSSProperties)[][] => {\n    const { rows, cols } = getTableSize(pattern, text);\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill({}));\n    addHelperStyles(table, startPoint);\n    return table;\n};\n\nconst createButtons = (): boolean[] => [true, false];\nconst createButtonsStyles = (): (React.CSSProperties)[] => [{}, {}];\n\nexport {\n    addHelperStyles,\n    createTableMatrix,\n    createComparedTable,\n    createTableStyles,\n    createButtons,\n    createButtonsStyles,\n    startPoint,\n};\n","import { Dialog, DialogScroll, Header, BasicInfo, State, Difficulty, Formula } from '../BasicState';\nimport { buttonClick, refresh, openDialog, closeDialog, closeFormula, openFormula } from './actions';\nimport { description, formula, example, alUsecases } from './contents';\nimport * as helper from '../../algorithms/wildcard-matching';\n\nexport const basicInfo: BasicInfo = {\n    id: 18,\n    title: 'Wildcard Matching',\n};\n\nconst codeFormula: Formula = {\n    ...basicInfo,\n    formulaOpen: false,\n    formulaCroll: DialogScroll.Paper,\n    formula: formula,\n    handleCloseFormulaClick: closeFormula,\n};\n\nconst dialog: Dialog = {\n    ...basicInfo,\n    dialogOpen: false,\n    dialogCroll: DialogScroll.Paper,\n    description: description,\n    example: example,\n    alUsecases: alUsecases,\n    handleCloseDialogClick: closeDialog,\n};\n\nconst header: Header = {\n    ...basicInfo,\n    success: false,\n    loading: false,\n    steps: 0,\n    errors: 0,\n    startTime: 0,\n    finishTime: 0,\n    difficulty: Difficulty.Easy,\n    handleRefreshClick: refresh,\n    handleOpenDialogClick: openDialog,\n    handleOpenFormulaClick: openFormula,\n};\n\nconst bases = 'ABC'.split('');\nconst random = (max: number) => Math.floor(Math.random() * max);\n\nconst shuffle = (array: string[]) => {\n    for (let i = array.length - 1; i > 0; i -= 1) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n};\n\nexport const create = () => {\n    const arrayOne: string[] = Array(4).fill(bases.length).map(random).map(i => bases[i]);\n    arrayOne.push('?', '*');\n    const stringOne: string = shuffle(arrayOne).join('');\n    const stringTwo: string = Array(6).fill(bases.length).map(random).map(i => bases[i]).join('');\n    return ({\n        ...header,\n        ...dialog,\n        ...codeFormula,\n        currentPoint: helper.startPoint,\n        comparedTable: helper.createComparedTable(stringOne, stringTwo),\n        table: helper.createTableMatrix(stringOne, stringTwo),\n        tableStyles: helper.createTableStyles(stringOne, stringTwo),\n        buttons: helper.createButtons(),\n        buttonsStyles: helper.createButtonsStyles(),\n        handleButtonClick: buttonClick,\n    });\n};\n\nexport const state: State = create();\n","export const OPEN_DIALOG_CLICK = '@@REGULAR_EXPRESSION/OPEN_DIALOG_CLICK';\nexport type OPEN_DIALOG_CLICK = typeof OPEN_DIALOG_CLICK;\n\nexport const CLOSE_DIALOG_CLICK = '@@REGULAR_EXPRESSION/CLOSE_DIALOG_CLICK';\nexport type CLOSE_DIALOG_CLICK = typeof CLOSE_DIALOG_CLICK;\n\nexport const OPEN_FORMULA_CLICK = '@@REGULAR_EXPRESSION/OPEN_FORMULA_CLICK';\nexport type OPEN_FORMULA_CLICK = typeof OPEN_FORMULA_CLICK;\n\nexport const CLOSE_FORMULA_CLICK = '@@REGULAR_EXPRESSION/CLOSE_FORMULA_CLICK';\nexport type CLOSE_FORMULA_CLICK = typeof CLOSE_FORMULA_CLICK;\n\nexport const BUTTON_CLICK = '@@REGULAR_EXPRESSION/BUTTON_CLICK';\nexport type BUTTON_CLICK = typeof BUTTON_CLICK;\n\nexport const REFRESH_CLICK = '@@REGULAR_EXPRESSION/REFRESH_CLICK';\nexport type REFRESH_CLICK = typeof REFRESH_CLICK;\n\nexport const GET_RECORD = '@@REGULAR_EXPRESSION/GET_SUCCESS_COUNT';\nexport type GET_RECORD = typeof GET_RECORD;\n\nexport const RECEIVED_RECORD = '@@REGULAR_EXPRESSION/RECEIVED_SUCCESS_COUNT';\nexport type RECEIVED_RECORD = typeof RECEIVED_RECORD;\n\nexport const INCREASE_RECORD = '@@REGULAR_EXPRESSION/INCREASE_RECORD';\nexport type INCREASE_RECORD = typeof INCREASE_RECORD;\n","import * as constants from './constants';\n\nexport interface Refresh {\n    type: constants.REFRESH_CLICK;\n}\n\nexport interface ButtonClick {\n    type: constants.BUTTON_CLICK;\n    payload: any;\n}\n\nexport interface FetchSuccess {\n    type: constants.RECEIVED_RECORD;\n    payload: any;\n}\n\nexport interface IncreaseSuccess {\n    type: constants.INCREASE_RECORD;\n}\n\nexport interface CloseDialog {\n    type: constants.CLOSE_DIALOG_CLICK;\n}\n\nexport interface OpenDialog {\n    type: constants.OPEN_DIALOG_CLICK;\n}\n\nexport interface CloseFormula {\n    type: constants.CLOSE_FORMULA_CLICK;\n}\n\nexport interface OpenFormula {\n    type: constants.OPEN_FORMULA_CLICK;\n}\n\nexport type Action = Refresh | ButtonClick | FetchSuccess | IncreaseSuccess |\n    CloseDialog | OpenDialog | CloseFormula | OpenFormula;\n\nexport function refresh(): Refresh {\n    return { type: constants.REFRESH_CLICK };\n}\n\nexport function buttonClick(data: any): ButtonClick {\n    return { type: constants.BUTTON_CLICK, payload: data };\n}\n\nexport function fetchSuccess(data: any): FetchSuccess {\n    return { type: constants.RECEIVED_RECORD, payload: data };\n}\n\nexport function increaseSuccess(): IncreaseSuccess {\n    return { type: constants.INCREASE_RECORD };\n}\n\nexport function closeDialog(): CloseDialog {\n    return { type: constants.CLOSE_DIALOG_CLICK };\n}\n\nexport function openDialog(): OpenDialog {\n    return { type: constants.OPEN_DIALOG_CLICK };\n}\n\nexport function closeFormula(): CloseFormula {\n    return { type: constants.CLOSE_FORMULA_CLICK };\n}\n\nexport function openFormula(): OpenFormula {\n    return { type: constants.OPEN_FORMULA_CLICK };\n}\n","export const formula = `const p = pattern.charAt(col - 1);\nconst prev = pattern.charAt(col - 2);\n\nif (p === '.' || p === t) {\n  table[row][col] = table[row - 1][col - 1];\n} else if (p === '*') {\n  if (table[row][col - 2] === true) {\n    table[row][col] = true\n  } else if (prev === '.' || prev === t) {\n    table[row][col] = table[row - 1][col];\n  }\n}`;\n\nexport const description = `'.' Matches any single character. \n'*' Matches zero or more of the preceding element. \nThe matching should cover the entire input string (not partial). \n`;\n\nexport const alUsecases = '';\nexport const example = `'aa','a' → false\n'aa','aa' → true\n'aa', 'a*' → true\n'aa', '.*' → true\n'ab', '.*' → true\n'aab', 'c*a*b' → true\n`;\n","const getTableSize = (pattern: string, text: string) => {\n    const rows = text.length + 1;\n    const cols = pattern.length + 1;\n    return { rows, cols };\n};\n\nconst createDPTable = (pattern: string, text: string): boolean[][] => {\n    const { rows, cols } = getTableSize(pattern, text);\n\n    const table = new Array(rows).fill(false).map(() => new Array(cols).fill(false));\n    table[0][0] = true;\n\n    for (let col = 1; col < pattern.length; col += 1) {\n        if (pattern.charAt(col - 1) === '*') {\n            table[0][col] = table[0][col - 2] || false;\n        }\n    }\n\n    for (let row = 1; row < table.length; row++) {\n        const t = text.charAt(row - 1);\n        for (let col = 1; col < table[row].length; col++) {\n            const p = pattern.charAt(col - 1);\n            if (p === '.' || p === t) {\n                table[row][col] = table[row - 1][col - 1];\n            } else if (p === '*') {\n                if (table[row][col - 2]) {\n                    table[row][col] = table[row][col - 2];\n                } else if (pattern.charAt(col - 2) === '.' || pattern.charAt(col - 2) === t) {\n                    table[row][col] = table[row - 1][col];\n                }\n            }\n        }\n    }\n    return table;\n};\n\nexport default createDPTable;\n","import createDPTable from './algorithm';\nimport { Point } from '../../store/BasicState';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst startPoint: Point = {\n    row: 1,\n    col: 2,\n};\n\ninterface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (pattern: string, text: string): TableSize => {\n    const rows = text.length + 1;\n    const cols = pattern.length + 1;\n    return { rows, cols };\n};\n\nconst createTableMatrix = (pattern: string, text: string): (boolean | string)[][] => {\n    const { rows, cols } = getTableSize(pattern, text);\n    const table = new Array(rows).fill('').map(() => new Array(cols).fill(''));\n\n    for (let col = 2; col < cols; col++) {\n        table[0][col] = pattern.charAt(col - 2);\n    }\n\n    for (let row = 2; row < rows; row++) {\n        table[row][0] = text.charAt(row - 2);\n    }\n\n    table[1][1] = 'T';\n    for (let row = 2; row < rows; row++) {\n        table[row][1] = 'F';\n    }\n\n    table[startPoint.row][startPoint.col] = '?';\n    return table;\n};\n\nconst createComparedTable = (pattern: string, text: string): (boolean | string)[][] => {\n    const { rows, cols } = getTableSize(pattern, text);\n\n    const dpTable = createDPTable(pattern, text);\n    const tableMatrix = createTableMatrix(pattern, text);\n\n    for (let row = 1; row < rows; row++) {\n        for (let col = 1; col < cols; col++) {\n            tableMatrix[row][col] = dpTable[row - 1][col - 1];\n        }\n    }\n    return tableMatrix;\n};\n\nconst addHelperStyles = (styles: React.CSSProperties[][], point: Point): void => {\n    for (let col = 0; col < styles[0].length && col <= point.col; col++) {\n        styles[0][col] = helperStyle;\n    }\n\n    for (let row = 0; row < styles.length && row <= point.row; row++) {\n        styles[row][0] = helperStyle;\n    }\n};\n\nconst createTableStyles = (pattern: string, text: string): (React.CSSProperties)[][] => {\n    const { rows, cols } = getTableSize(pattern, text);\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill({}));\n    addHelperStyles(table, startPoint);\n    return table;\n};\n\nconst createButtons = (): boolean[] => [true, false];\nconst createButtonsStyles = (): (React.CSSProperties)[] => [{}, {}];\n\nexport {\n    addHelperStyles,\n    createTableMatrix,\n    createComparedTable,\n    createTableStyles,\n    createButtons,\n    createButtonsStyles,\n    startPoint,\n};\n","import { Dialog, DialogScroll, Header, BasicInfo, State, Difficulty, Formula } from '../BasicState';\nimport { buttonClick, refresh, openDialog, closeDialog, closeFormula, openFormula } from './actions';\nimport { description, formula, example, alUsecases } from './contents';\nimport * as helper from '../../algorithms/regular-expression';\n\nexport const basicInfo: BasicInfo = {\n    id: 17,\n    title: 'Regular Expression',\n};\n\nconst codeFormula: Formula = {\n    ...basicInfo,\n    formulaOpen: false,\n    formulaCroll: DialogScroll.Paper,\n    formula: formula,\n    handleCloseFormulaClick: closeFormula,\n};\n\nconst dialog: Dialog = {\n    ...basicInfo,\n    dialogOpen: false,\n    dialogCroll: DialogScroll.Paper,\n    description: description,\n    example: example,\n    alUsecases: alUsecases,\n    handleCloseDialogClick: closeDialog,\n};\n\nconst header: Header = {\n    ...basicInfo,\n    success: false,\n    loading: false,\n    steps: 0,\n    errors: 0,\n    startTime: 0,\n    finishTime: 0,\n    difficulty: Difficulty.Easy,\n    handleRefreshClick: refresh,\n    handleOpenDialogClick: openDialog,\n    handleOpenFormulaClick: openFormula,\n};\n\nconst bases = 'AAAABBBC'.split('');\nconst random = (max: number) => Math.floor(Math.random() * max);\n\nexport const create = () => {\n    const arrayOne: string[] = Array(6).fill(bases.length).map(random).map(i => bases[i]);\n    arrayOne[random(6 - 1) + 1] = '*';\n    arrayOne[random(6 - 1) + 1] = '.';\n    const stringOne: string = arrayOne.join('');\n    const stringTwo: string = Array(6).fill(bases.length).map(random).map(i => bases[i]).join('');\n    return ({\n        ...header,\n        ...dialog,\n        ...codeFormula,\n        currentPoint: helper.startPoint,\n        comparedTable: helper.createComparedTable(stringOne, stringTwo),\n        table: helper.createTableMatrix(stringOne, stringTwo),\n        tableStyles: helper.createTableStyles(stringOne, stringTwo),\n        buttons: helper.createButtons(),\n        buttonsStyles: helper.createButtonsStyles(),\n        handleButtonClick: buttonClick,\n    });\n};\n\nexport const state: State = create();\n","export const OPEN_DIALOG_CLICK = '@@COIN_CHANGE_FEWEST_NUMBER/OPEN_DIALOG_CLICK';\nexport type OPEN_DIALOG_CLICK = typeof OPEN_DIALOG_CLICK;\n\nexport const CLOSE_DIALOG_CLICK = '@@COIN_CHANGE_FEWEST_NUMBER/CLOSE_DIALOG_CLICK';\nexport type CLOSE_DIALOG_CLICK = typeof CLOSE_DIALOG_CLICK;\n\nexport const OPEN_FORMULA_CLICK = '@@COIN_CHANGE_FEWEST_NUMBER/OPEN_FORMULA_CLICK';\nexport type OPEN_FORMULA_CLICK = typeof OPEN_FORMULA_CLICK;\n\nexport const CLOSE_FORMULA_CLICK = '@@COIN_CHANGE_FEWEST_NUMBER/CLOSE_FORMULA_CLICK';\nexport type CLOSE_FORMULA_CLICK = typeof CLOSE_FORMULA_CLICK;\n\nexport const BUTTON_CLICK = '@@COIN_CHANGE_FEWEST_NUMBER/BUTTON_CLICK';\nexport type BUTTON_CLICK = typeof BUTTON_CLICK;\n\nexport const REFRESH_CLICK = '@@COIN_CHANGE_FEWEST_NUMBER/REFRESH_CLICK';\nexport type REFRESH_CLICK = typeof REFRESH_CLICK;\n\nexport const GET_RECORD = '@@COIN_CHANGE_FEWEST_NUMBER/GET_SUCCESS_COUNT';\nexport type GET_RECORD = typeof GET_RECORD;\n\nexport const RECEIVED_RECORD = '@@COIN_CHANGE_FEWEST_NUMBER/RECEIVED_SUCCESS_COUNT';\nexport type RECEIVED_RECORD = typeof RECEIVED_RECORD;\n\nexport const INCREASE_RECORD = '@@COIN_CHANGE_FEWEST_NUMBER/INCREASE_RECORD';\nexport type INCREASE_RECORD = typeof INCREASE_RECORD;\n","import * as constants from './constants';\n\nexport interface Refresh {\n    type: constants.REFRESH_CLICK;\n}\n\nexport interface ButtonClick {\n    type: constants.BUTTON_CLICK;\n    payload: any;\n}\n\nexport interface FetchSuccess {\n    type: constants.RECEIVED_RECORD;\n    payload: any;\n}\n\nexport interface IncreaseSuccess {\n    type: constants.INCREASE_RECORD;\n}\n\nexport interface CloseDialog {\n    type: constants.CLOSE_DIALOG_CLICK;\n}\n\nexport interface OpenDialog {\n    type: constants.OPEN_DIALOG_CLICK;\n}\n\nexport interface CloseFormula {\n    type: constants.CLOSE_FORMULA_CLICK;\n}\n\nexport interface OpenFormula {\n    type: constants.OPEN_FORMULA_CLICK;\n}\n\nexport type Action = Refresh | ButtonClick | FetchSuccess | IncreaseSuccess |\n    CloseDialog | OpenDialog | CloseFormula | OpenFormula;\n\nexport function refresh(): Refresh {\n    return { type: constants.REFRESH_CLICK };\n}\n\nexport function buttonClick(data: any): ButtonClick {\n    return { type: constants.BUTTON_CLICK, payload: data };\n}\n\nexport function fetchSuccess(data: any): FetchSuccess {\n    return { type: constants.RECEIVED_RECORD, payload: data };\n}\n\nexport function increaseSuccess(): IncreaseSuccess {\n    return { type: constants.INCREASE_RECORD };\n}\n\nexport function closeDialog(): CloseDialog {\n    return { type: constants.CLOSE_DIALOG_CLICK };\n}\n\nexport function openDialog(): OpenDialog {\n    return { type: constants.OPEN_DIALOG_CLICK };\n}\n\nexport function closeFormula(): CloseFormula {\n    return { type: constants.CLOSE_FORMULA_CLICK };\n}\n\nexport function openFormula(): OpenFormula {\n    return { type: constants.OPEN_FORMULA_CLICK };\n}\n","export const formula = `if (coin > col) {\n  table[row][col] = table[row - 1][col];\n} else {\n  table[row][col] = Math.min(\n    table[row][col - coin] + 1, \n    table[row - 1][col]);\n}`;\n\nexport const description = `You are given coins of different denominations and a total amount \nof money amount. Find the fewest number of coins that you need to \nmake up that amount. If that amount of money cannot be made up by \nany combination of the coins, return -1.`;\n\nexport const alUsecases = '';\nexport const example = '';\n","interface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (coins: number[], total: number): TableSize => {\n    const rows = coins.length + 1;\n    const cols = total + 1;\n    return { rows, cols };\n};\n\nconst createDPTable = (coins: number[], total: number): number[][] => {\n    const { rows, cols } = getTableSize(coins, total);\n\n    const table = new Array(rows).fill(Infinity).map(() => new Array(cols).fill(Infinity));\n\n    for (let row = 0; row < rows; row++) {\n        table[row][0] = 0;\n    }\n\n    for (let row = 1; row < table.length; row += 1) {\n        const coin = coins[row - 1];\n        for (let col = 1; col < table[row].length; col += 1) {\n            if (coin > col) {\n                table[row][col] = table[row - 1][col];\n            } else {\n                table[row][col] = Math.min(table[row][col - coin] + 1, table[row - 1][col]);\n            }\n        }\n    }\n\n    return table;\n};\n\nexport default createDPTable;\n","import createDPTable from './algorithm';\nimport { Point } from '../../store/BasicState';\nimport { helperStyle, helperStyleSecondary, helperStyleThird } from '../../pages/withRoot';\n\nconst startPoint: Point = {\n    row: 2,\n    col: 2,\n};\n\ninterface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (coins: number[], total: number): TableSize => {\n    const rows = coins.length + 2;\n    const cols = total + 2;\n    return { rows, cols };\n};\n\nconst createTableMatrix = (coins: number[], total: number): (number | string)[][] => {\n    const { rows, cols } = getTableSize(coins, total);\n\n    const table = new Array(rows).fill('').map(() => new Array(cols).fill(''));\n\n    for (let col = 2; col < cols; col++) {\n        table[0][col] = col - 1;\n        table[1][col] = Infinity;\n    }\n\n    for (let row = 2; row < rows; row++) {\n        table[row][0] = coins[row - 2];\n        table[row][1] = 0;\n    }\n\n    table[startPoint.row][startPoint.col] = '?';\n    return table;\n};\n\nconst createComparedTable = (coins: number[], total: number): (number | string)[][] => {\n    const { rows, cols } = getTableSize(coins, total);\n\n    const dpTable = createDPTable(coins, total);\n    const tableMatrix = createTableMatrix(coins, total);\n\n    for (let row = 1; row < rows; row++) {\n        for (let col = 1; col < cols; col++) {\n            tableMatrix[row][col] = dpTable[row - 1][col - 1];\n        }\n    }\n    return tableMatrix;\n};\n\nconst addHelperStyles = (styles: React.CSSProperties[][], point: Point, table: (number | string)[][]): void => {\n    styles[0][point.col] = helperStyle;\n    styles[point.row][0] = helperStyle;\n    styles[point.row - 1][point.col] = helperStyleSecondary;\n    const coin = Number(table[point.row][0]);\n    if (point.col - coin - 1 >= 0) {\n        styles[point.row][point.col - coin] = helperStyleThird;\n    }\n};\n\nconst createTableStyles = (coins: number[], total: number): (React.CSSProperties)[][] => {\n    const { rows, cols } = getTableSize(coins, total);\n    const dpTable = createTableMatrix(coins, total);\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill({}));\n    addHelperStyles(table, startPoint, dpTable);\n    return table;\n};\n\nconst createButtons = (coins: number[], total: number): number[] => {\n    const dpTable = createDPTable(coins, total);\n    const set = new Set<number>();\n    for (let row = 1; row < dpTable.length; row++) {\n        for (let col = 1; col < dpTable[row].length; col++) {\n            const value = dpTable[row][col];\n            if (value === Infinity) {\n                set.add(Infinity);\n            } else {\n                set.add(value);\n            }\n        }\n    }\n    return Array.from(set).sort();\n};\n\nconst createButtonsStyles = (coins: number[], total: number): (React.CSSProperties)[] => {\n    return createButtons(coins, total).map(() => ({ color: 'back' }));\n};\n\nexport {\n    addHelperStyles,\n    createTableMatrix,\n    createComparedTable,\n    createTableStyles,\n    createButtons,\n    createButtonsStyles,\n    startPoint,\n};\n","import { Dialog, DialogScroll, Header, BasicInfo, State, Difficulty, Formula } from '../BasicState';\nimport { buttonClick, refresh, openDialog, closeDialog, closeFormula, openFormula } from './actions';\nimport { description, formula, example, alUsecases } from './contents';\nimport * as helper from '../../algorithms/coin-change-fewest-number';\n\nexport const basicInfo: BasicInfo = {\n    id: 7,\n    title: 'Coin Change Fewest Number',\n};\n\nconst codeFormula: Formula = {\n    ...basicInfo,\n    formulaOpen: false,\n    formulaCroll: DialogScroll.Paper,\n    formula: formula,\n    handleCloseFormulaClick: closeFormula,\n};\n\nconst dialog: Dialog = {\n    ...basicInfo,\n    dialogOpen: false,\n    dialogCroll: DialogScroll.Paper,\n    description: description,\n    example: example,\n    alUsecases: alUsecases,\n    handleCloseDialogClick: closeDialog,\n};\n\nconst header: Header = {\n    ...basicInfo,\n    success: false,\n    loading: false,\n    steps: 0,\n    errors: 0,\n    startTime: 0,\n    finishTime: 0,\n    difficulty: Difficulty.Easy,\n    handleRefreshClick: refresh,\n    handleOpenDialogClick: openDialog,\n    handleOpenFormulaClick: openFormula,\n};\n\nconst shuffle = (array: number[]) => {\n    for (let i = array.length - 1; i > 0; i -= 1) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n};\n\nconst totalCoins = [1, 2, 3, 4, 5, 6, 7];\nconst total = 6;\n\nexport const create = () => {\n    const coins = Array.from(shuffle(totalCoins));\n    coins.pop();\n    coins.pop();\n    return ({\n        ...header,\n        ...dialog,\n        ...codeFormula,\n        currentPoint: helper.startPoint,\n        comparedTable: helper.createComparedTable(coins, total),\n        table: helper.createTableMatrix(coins, total),\n        tableStyles: helper.createTableStyles(coins, total),\n        buttons: helper.createButtons(coins, total),\n        buttonsStyles: helper.createButtonsStyles(coins, total),\n        handleButtonClick: buttonClick,\n    });\n};\n\nexport const state: State = create();\n","export const OPEN_DIALOG_CLICK = '@@COIN_CHANGE_HOW_MANY_WAYS/OPEN_DIALOG_CLICK';\nexport type OPEN_DIALOG_CLICK = typeof OPEN_DIALOG_CLICK;\n\nexport const CLOSE_DIALOG_CLICK = '@@COIN_CHANGE_HOW_MANY_WAYS/CLOSE_DIALOG_CLICK';\nexport type CLOSE_DIALOG_CLICK = typeof CLOSE_DIALOG_CLICK;\n\nexport const OPEN_FORMULA_CLICK = '@@COIN_CHANGE_HOW_MANY_WAYS/OPEN_FORMULA_CLICK';\nexport type OPEN_FORMULA_CLICK = typeof OPEN_FORMULA_CLICK;\n\nexport const CLOSE_FORMULA_CLICK = '@@COIN_CHANGE_HOW_MANY_WAYS/CLOSE_FORMULA_CLICK';\nexport type CLOSE_FORMULA_CLICK = typeof CLOSE_FORMULA_CLICK;\n\nexport const BUTTON_CLICK = '@@COIN_CHANGE_HOW_MANY_WAYS/BUTTON_CLICK';\nexport type BUTTON_CLICK = typeof BUTTON_CLICK;\n\nexport const REFRESH_CLICK = '@@COIN_CHANGE_HOW_MANY_WAYS/REFRESH_CLICK';\nexport type REFRESH_CLICK = typeof REFRESH_CLICK;\n\nexport const GET_RECORD = '@@COIN_CHANGE_HOW_MANY_WAYS/GET_SUCCESS_COUNT';\nexport type GET_RECORD = typeof GET_RECORD;\n\nexport const RECEIVED_RECORD = '@@COIN_CHANGE_HOW_MANY_WAYS/RECEIVED_SUCCESS_COUNT';\nexport type RECEIVED_RECORD = typeof RECEIVED_RECORD;\n\nexport const INCREASE_RECORD = '@@COIN_CHANGE_HOW_MANY_WAYS/INCREASE_RECORD';\nexport type INCREASE_RECORD = typeof INCREASE_RECORD;\n","import * as constants from './constants';\n\nexport interface Refresh {\n    type: constants.REFRESH_CLICK;\n}\n\nexport interface ButtonClick {\n    type: constants.BUTTON_CLICK;\n    payload: any;\n}\n\nexport interface FetchSuccess {\n    type: constants.RECEIVED_RECORD;\n    payload: any;\n}\n\nexport interface IncreaseSuccess {\n    type: constants.INCREASE_RECORD;\n}\n\nexport interface CloseDialog {\n    type: constants.CLOSE_DIALOG_CLICK;\n}\n\nexport interface OpenDialog {\n    type: constants.OPEN_DIALOG_CLICK;\n}\n\nexport interface CloseFormula {\n    type: constants.CLOSE_FORMULA_CLICK;\n}\n\nexport interface OpenFormula {\n    type: constants.OPEN_FORMULA_CLICK;\n}\n\nexport type Action = Refresh | ButtonClick | FetchSuccess | IncreaseSuccess |\n    CloseDialog | OpenDialog | CloseFormula | OpenFormula;\n\nexport function refresh(): Refresh {\n    return { type: constants.REFRESH_CLICK };\n}\n\nexport function buttonClick(data: any): ButtonClick {\n    return { type: constants.BUTTON_CLICK, payload: data };\n}\n\nexport function fetchSuccess(data: any): FetchSuccess {\n    return { type: constants.RECEIVED_RECORD, payload: data };\n}\n\nexport function increaseSuccess(): IncreaseSuccess {\n    return { type: constants.INCREASE_RECORD };\n}\n\nexport function closeDialog(): CloseDialog {\n    return { type: constants.CLOSE_DIALOG_CLICK };\n}\n\nexport function openDialog(): OpenDialog {\n    return { type: constants.OPEN_DIALOG_CLICK };\n}\n\nexport function closeFormula(): CloseFormula {\n    return { type: constants.CLOSE_FORMULA_CLICK };\n}\n\nexport function openFormula(): OpenFormula {\n    return { type: constants.OPEN_FORMULA_CLICK };\n}\n","export const formula = `if (coin > col) {\n  table[row][col] = table[row - 1][col];\n} else {\n  table[row][col] = table[row][col - coin] + table[row - 1][col];\n}`;\n\nexport const description = `You have some types of coins available in infinite quantities \nwhere the value of each coin is given in the array. Can you \ndetermine the number of ways of making change for units using \nthe given types of coins? `;\n\nexport const alUsecases = '';\nexport const example = '';\n","interface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (coins: number[], total: number): TableSize => {\n    const rows = coins.length + 1;\n    const cols = total + 1;\n    return { rows, cols };\n};\n\nconst createDPTable = (coins: number[], total: number): number[][] => {\n    const { rows, cols } = getTableSize(coins, total);\n\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill(0));\n\n    for (let row = 1; row < rows; row++) {\n        table[row][0] = 1;\n    }\n\n    for (let row = 1; row < table.length; row += 1) {\n        const coin = coins[row - 1];\n        for (let col = 1; col < table[row].length; col += 1) {\n            if (coin > col) {\n                table[row][col] = table[row - 1][col];\n            } else {\n                table[row][col] = table[row][col - coin] + table[row - 1][col];\n            }\n        }\n    }\n\n    return table;\n};\n\nexport default createDPTable;\n","import createDPTable from './algorithm';\nimport { Point } from '../../store/BasicState';\nimport { helperStyle, helperStyleSecondary } from '../../pages/withRoot';\n\nconst startPoint: Point = {\n    row: 2,\n    col: 2,\n};\n\ninterface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (coins: number[], total: number): TableSize => {\n    const rows = coins.length + 2;\n    const cols = total + 2;\n    return { rows, cols };\n};\n\nconst createTableMatrix = (coins: number[], total: number): (number | string)[][] => {\n    const { rows, cols } = getTableSize(coins, total);\n\n    const table = new Array(rows).fill('').map(() => new Array(cols).fill(''));\n\n    for (let col = 2; col < cols; col++) {\n        table[0][col] = col - 1;\n        table[1][col] = 0;\n    }\n\n    for (let row = 2; row < rows; row++) {\n        table[row][0] = coins[row - 2];\n        table[row][1] = 1;\n    }\n\n    table[1][1] = 0;\n    table[startPoint.row][startPoint.col] = '?';\n    return table;\n};\n\nconst createComparedTable = (coins: number[], total: number): (number | string)[][] => {\n    const { rows, cols } = getTableSize(coins, total);\n\n    const dpTable = createDPTable(coins, total);\n    const tableMatrix = createTableMatrix(coins, total);\n\n    for (let row = 1; row < rows; row++) {\n        for (let col = 1; col < cols; col++) {\n            tableMatrix[row][col] = dpTable[row - 1][col - 1];\n        }\n    }\n    return tableMatrix;\n};\n\nconst addHelperStyles = (styles: React.CSSProperties[][], point: Point, table: (number | string)[][]): void => {\n    styles[0][point.col] = helperStyle;\n    styles[point.row][0] = helperStyle;\n    styles[point.row - 1][point.col] = helperStyleSecondary;\n    const coin = Number(table[point.row][0]);\n    if (point.col - coin - 1 >= 0) {\n        styles[point.row][point.col - coin] = helperStyleSecondary;\n    }\n};\n\nconst createTableStyles = (coins: number[], total: number): (React.CSSProperties)[][] => {\n    const { rows, cols } = getTableSize(coins, total);\n    const dpTable = createTableMatrix(coins, total);\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill({}));\n    addHelperStyles(table, startPoint, dpTable);\n    return table;\n};\n\nconst createButtons = (coins: number[], total: number): number[] => {\n    const dpTable = createDPTable(coins, total);\n    const set = new Set<number>();\n    for (let row = 1; row < dpTable.length; row++) {\n        for (let col = 1; col < dpTable[row].length; col++) {\n            set.add(dpTable[row][col]);\n        }\n    }\n    return Array.from(set).sort();\n};\n\nconst createButtonsStyles = (coins: number[], total: number): (React.CSSProperties)[] => {\n    return createButtons(coins, total).map(() => ({ color: 'back' }));\n};\n\nexport {\n    addHelperStyles,\n    createTableMatrix,\n    createComparedTable,\n    createTableStyles,\n    createButtons,\n    createButtonsStyles,\n    startPoint,\n};\n","import { Dialog, DialogScroll, Header, BasicInfo, State, Difficulty, Formula } from '../BasicState';\nimport { buttonClick, refresh, openDialog, closeDialog, closeFormula, openFormula } from './actions';\nimport { description, formula, example, alUsecases } from './contents';\nimport * as helper from '../../algorithms/coin-change-how-many-ways';\n\nexport const basicInfo: BasicInfo = {\n    id: 8,\n    title: 'Coin Change How Many Ways',\n};\n\nconst codeFormula: Formula = {\n    ...basicInfo,\n    formulaOpen: false,\n    formulaCroll: DialogScroll.Paper,\n    formula: formula,\n    handleCloseFormulaClick: closeFormula,\n};\n\nconst dialog: Dialog = {\n    ...basicInfo,\n    dialogOpen: false,\n    dialogCroll: DialogScroll.Paper,\n    description: description,\n    example: example,\n    alUsecases: alUsecases,\n    handleCloseDialogClick: closeDialog,\n};\n\nconst header: Header = {\n    ...basicInfo,\n    success: false,\n    loading: false,\n    steps: 0,\n    errors: 0,\n    startTime: 0,\n    finishTime: 0,\n    difficulty: Difficulty.Easy,\n    handleRefreshClick: refresh,\n    handleOpenDialogClick: openDialog,\n    handleOpenFormulaClick: openFormula,\n};\n\nconst shuffle = (array: number[]) => {\n    for (let i = array.length - 1; i > 0; i -= 1) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n};\n\nconst totalCoins = [1, 2, 3, 4, 5, 6, 7];\nconst total = 6;\n\nexport const create = () => {\n    const coins = Array.from(shuffle(totalCoins));\n    coins.pop();\n    coins.pop();\n    return ({\n        ...header,\n        ...dialog,\n        ...codeFormula,\n        currentPoint: helper.startPoint,\n        comparedTable: helper.createComparedTable(coins, total),\n        table: helper.createTableMatrix(coins, total),\n        tableStyles: helper.createTableStyles(coins, total),\n        buttons: helper.createButtons(coins, total),\n        buttonsStyles: helper.createButtonsStyles(coins, total),\n        handleButtonClick: buttonClick,\n    });\n};\n\nexport const state: State = create();\n","export const OPEN_DIALOG_CLICK = '@@IS_SUBSEQUENCE/OPEN_DIALOG_CLICK';\nexport type OPEN_DIALOG_CLICK = typeof OPEN_DIALOG_CLICK;\n\nexport const CLOSE_DIALOG_CLICK = '@@IS_SUBSEQUENCE/CLOSE_DIALOG_CLICK';\nexport type CLOSE_DIALOG_CLICK = typeof CLOSE_DIALOG_CLICK;\n\nexport const OPEN_FORMULA_CLICK = '@@IS_SUBSEQUENCE/OPEN_FORMULA_CLICK';\nexport type OPEN_FORMULA_CLICK = typeof OPEN_FORMULA_CLICK;\n\nexport const CLOSE_FORMULA_CLICK = '@@IS_SUBSEQUENCE/CLOSE_FORMULA_CLICK';\nexport type CLOSE_FORMULA_CLICK = typeof CLOSE_FORMULA_CLICK;\n\nexport const BUTTON_CLICK = '@@IS_SUBSEQUENCE/BUTTON_CLICK';\nexport type BUTTON_CLICK = typeof BUTTON_CLICK;\n\nexport const REFRESH_CLICK = '@@IS_SUBSEQUENCE/REFRESH_CLICK';\nexport type REFRESH_CLICK = typeof REFRESH_CLICK;\n\nexport const GET_RECORD = '@@IS_SUBSEQUENCE/GET_SUCCESS_COUNT';\nexport type GET_RECORD = typeof GET_RECORD;\n\nexport const RECEIVED_RECORD = '@@IS_SUBSEQUENCE/RECEIVED_SUCCESS_COUNT';\nexport type RECEIVED_RECORD = typeof RECEIVED_RECORD;\n\nexport const INCREASE_RECORD = '@@IS_SUBSEQUENCE/INCREASE_RECORD';\nexport type INCREASE_RECORD = typeof INCREASE_RECORD;\n","import * as constants from './constants';\n\nexport interface Refresh {\n    type: constants.REFRESH_CLICK;\n}\n\nexport interface ButtonClick {\n    type: constants.BUTTON_CLICK;\n    payload: any;\n}\n\nexport interface FetchSuccess {\n    type: constants.RECEIVED_RECORD;\n    payload: any;\n}\n\nexport interface IncreaseSuccess {\n    type: constants.INCREASE_RECORD;\n}\n\nexport interface CloseDialog {\n    type: constants.CLOSE_DIALOG_CLICK;\n}\n\nexport interface OpenDialog {\n    type: constants.OPEN_DIALOG_CLICK;\n}\n\nexport interface CloseFormula {\n    type: constants.CLOSE_FORMULA_CLICK;\n}\n\nexport interface OpenFormula {\n    type: constants.OPEN_FORMULA_CLICK;\n}\n\nexport type Action = Refresh | ButtonClick | FetchSuccess | IncreaseSuccess |\n    CloseDialog | OpenDialog | CloseFormula | OpenFormula;\n\nexport function refresh(): Refresh {\n    return { type: constants.REFRESH_CLICK };\n}\n\nexport function buttonClick(data: any): ButtonClick {\n    return { type: constants.BUTTON_CLICK, payload: data };\n}\n\nexport function fetchSuccess(data: any): FetchSuccess {\n    return { type: constants.RECEIVED_RECORD, payload: data };\n}\n\nexport function increaseSuccess(): IncreaseSuccess {\n    return { type: constants.INCREASE_RECORD };\n}\n\nexport function closeDialog(): CloseDialog {\n    return { type: constants.CLOSE_DIALOG_CLICK };\n}\n\nexport function openDialog(): OpenDialog {\n    return { type: constants.OPEN_DIALOG_CLICK };\n}\n\nexport function closeFormula(): CloseFormula {\n    return { type: constants.CLOSE_FORMULA_CLICK };\n}\n\nexport function openFormula(): OpenFormula {\n    return { type: constants.OPEN_FORMULA_CLICK };\n}\n","export const formula = `if (ch1 === ch2 && table[row - 1][col - 1]) {\n  table[row][col] = true\n} else {\n  table[row][col] = table[row][col - 1]\n}`;\n\nexport const description = `Given a string s and a string t, \ncheck if s is subsequence of t.`;\n\nexport const alUsecases = '';\nexport const example = '';\n","const createDPTable = (stringOne: string, stringTwo: string): boolean[][] => {\n    const rows = stringTwo.length + 1;\n    const cols = stringOne.length + 1;\n\n    const table = new Array(rows).fill(false).map(() => new Array(cols).fill(false));\n\n    for (let col = 0; col < cols; col++) {\n        table[0][col] = true;\n    }\n\n    for (let row = 1; row < rows; row++) {\n        const ch1 = stringTwo.charAt(row - 1);\n        for (let col = 1; col < cols; col++) {\n            const ch2 = stringOne.charAt(col - 1);\n            if (ch1 === ch2 && table[row - 1][col - 1]) {\n                table[row][col] = true;\n            } else {\n                table[row][col] = table[row][col - 1];\n            }\n        }\n    }\n\n    return table;\n};\n\nexport default createDPTable;\n","import createDPTable from './algorithm';\nimport { Point } from '../../store/BasicState';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst startPoint: Point = {\n    row: 2,\n    col: 2,\n};\n\ninterface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (stringOne: string, stringTwo: string): TableSize => {\n    const rows = stringTwo.length + 2;\n    const cols = stringOne.length + 2;\n    return { rows, cols };\n};\n\nconst createTableMatrix = (stringOne: string, stringTwo: string): (boolean | string)[][] => {\n    const { rows, cols } = getTableSize(stringOne, stringTwo);\n\n    const table = new Array(rows).fill('').map(() => new Array(cols).fill(''));\n\n    for (let col = 2; col < cols; col++) {\n        table[0][col] = stringOne.charAt(col - 2);\n        table[1][col] = 'T';\n    }\n\n    for (let row = 2; row < rows; row++) {\n        table[row][0] = stringTwo.charAt(row - 2);\n        table[row][1] = 'F';\n    }\n\n    table[1][1] = 'T';\n    table[startPoint.row][startPoint.col] = '?';\n    return table;\n};\n\nconst createComparedTable = (stringOne: string, stringTwo: string): (boolean | string)[][] => {\n    const { rows, cols } = getTableSize(stringOne, stringTwo);\n\n    const dpTable = createDPTable(stringOne, stringTwo);\n    const tableMatrix = createTableMatrix(stringOne, stringTwo);\n\n    for (let row = 1; row < rows; row++) {\n        for (let col = 1; col < cols; col++) {\n            tableMatrix[row][col] = dpTable[row - 1][col - 1];\n        }\n    }\n    return tableMatrix;\n};\n\nconst addHelperStyles = (styles: React.CSSProperties[][], point: Point): void => {\n    for (let col = 0; col < styles[0].length && col <= point.col; col++) {\n        styles[0][col] = helperStyle;\n    }\n\n    for (let row = 0; row < styles.length && row <= point.row; row++) {\n        styles[row][0] = helperStyle;\n    }\n};\n\nconst createTableStyles = (stringOne: string, stringTwo: string): (React.CSSProperties)[][] => {\n    const rows = stringTwo.length + 2;\n    const cols = stringOne.length + 2;\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill({}));\n    addHelperStyles(table, startPoint);\n    return table;\n};\n\nconst createButtons = (stringOne: string, stringTwo: string): boolean[] => [true, false];\n\nconst createButtonsStyles = (stringOne: string, stringTwo: string): (React.CSSProperties)[] => {\n    return createButtons(stringOne, stringTwo).map(() => ({ color: 'back' }));\n};\n\nexport {\n    addHelperStyles,\n    createTableMatrix,\n    createComparedTable,\n    createTableStyles,\n    createButtons,\n    createButtonsStyles,\n    startPoint,\n};\n","import { Dialog, DialogScroll, Header, BasicInfo, State, Difficulty, Formula } from '../BasicState';\nimport { buttonClick, refresh, openDialog, closeDialog, closeFormula, openFormula } from './actions';\nimport { description, formula, example, alUsecases } from './contents';\nimport * as helper from '../../algorithms/is-subsequence';\n\nexport const basicInfo: BasicInfo = {\n    id: 2,\n    title: 'Is Subsequence',\n};\n\nconst codeFormula: Formula = {\n    ...basicInfo,\n    formulaOpen: false,\n    formulaCroll: DialogScroll.Paper,\n    formula: formula,\n    handleCloseFormulaClick: closeFormula,\n};\n\nconst dialog: Dialog = {\n    ...basicInfo,\n    dialogOpen: false,\n    dialogCroll: DialogScroll.Paper,\n    description: description,\n    example: example,\n    alUsecases: alUsecases,\n    handleCloseDialogClick: closeDialog,\n};\n\nconst header: Header = {\n    ...basicInfo,\n    success: false,\n    loading: false,\n    steps: 0,\n    errors: 0,\n    startTime: 0,\n    finishTime: 0,\n    difficulty: Difficulty.Easy,\n    handleRefreshClick: refresh,\n    handleOpenDialogClick: openDialog,\n    handleOpenFormulaClick: openFormula,\n};\n\nconst bases = 'ACGT';\nconst random = (max: number) => Math.floor(Math.random() * max);\n\nexport const create = () => {\n    const stringOne: string = Array(8).fill(bases.length).map(random).map(i => bases[i]).join('');\n    const stringTwo: string = Array(4).fill(bases.length).map(random).map(i => bases[i]).join('');\n    return ({\n        ...header,\n        ...dialog,\n        ...codeFormula,\n        currentPoint: helper.startPoint,\n        comparedTable: helper.createComparedTable(stringOne, stringTwo),\n        table: helper.createTableMatrix(stringOne, stringTwo),\n        tableStyles: helper.createTableStyles(stringOne, stringTwo),\n        buttons: helper.createButtons(stringOne, stringTwo),\n        buttonsStyles: helper.createButtonsStyles(stringOne, stringTwo),\n        handleButtonClick: buttonClick,\n    });\n};\n\nexport const state: State = create();\n","export const OPEN_DIALOG_CLICK = '@@LONGEST_COMMON_SUBSEQUENCE/OPEN_DIALOG_CLICK';\nexport type OPEN_DIALOG_CLICK = typeof OPEN_DIALOG_CLICK;\n\nexport const CLOSE_DIALOG_CLICK = '@@LONGEST_COMMON_SUBSEQUENCE/CLOSE_DIALOG_CLICK';\nexport type CLOSE_DIALOG_CLICK = typeof CLOSE_DIALOG_CLICK;\n\nexport const OPEN_FORMULA_CLICK = '@@LONGEST_COMMON_SUBSEQUENCE/OPEN_FORMULA_CLICK';\nexport type OPEN_FORMULA_CLICK = typeof OPEN_FORMULA_CLICK;\n\nexport const CLOSE_FORMULA_CLICK = '@@LONGEST_COMMON_SUBSEQUENCE/CLOSE_FORMULA_CLICK';\nexport type CLOSE_FORMULA_CLICK = typeof CLOSE_FORMULA_CLICK;\n\nexport const BUTTON_CLICK = '@@LONGEST_COMMON_SUBSEQUENCE/BUTTON_CLICK';\nexport type BUTTON_CLICK = typeof BUTTON_CLICK;\n\nexport const REFRESH_CLICK = '@@LONGEST_COMMON_SUBSEQUENCE/REFRESH_CLICK';\nexport type REFRESH_CLICK = typeof REFRESH_CLICK;\n\nexport const GET_RECORD = '@@LONGEST_COMMON_SUBSEQUENCE/GET_SUCCESS_COUNT';\nexport type GET_RECORD = typeof GET_RECORD;\n\nexport const RECEIVED_RECORD = '@@LONGEST_COMMON_SUBSEQUENCE/RECEIVED_SUCCESS_COUNT';\nexport type RECEIVED_RECORD = typeof RECEIVED_RECORD;\n\nexport const INCREASE_RECORD = '@@LONGEST_COMMON_SUBSEQUENCE/INCREASE_RECORD';\nexport type INCREASE_RECORD = typeof INCREASE_RECORD;\n","import * as constants from './constants';\n\nexport interface Refresh {\n    type: constants.REFRESH_CLICK;\n}\n\nexport interface ButtonClick {\n    type: constants.BUTTON_CLICK;\n    payload: any;\n}\n\nexport interface FetchSuccess {\n    type: constants.RECEIVED_RECORD;\n    payload: any;\n}\n\nexport interface IncreaseSuccess {\n    type: constants.INCREASE_RECORD;\n}\n\nexport interface CloseDialog {\n    type: constants.CLOSE_DIALOG_CLICK;\n}\n\nexport interface OpenDialog {\n    type: constants.OPEN_DIALOG_CLICK;\n}\n\nexport interface CloseFormula {\n    type: constants.CLOSE_FORMULA_CLICK;\n}\n\nexport interface OpenFormula {\n    type: constants.OPEN_FORMULA_CLICK;\n}\n\nexport type Action = Refresh | ButtonClick | FetchSuccess | IncreaseSuccess |\n    CloseDialog | OpenDialog | CloseFormula | OpenFormula;\n\nexport function refresh(): Refresh {\n    return { type: constants.REFRESH_CLICK };\n}\n\nexport function buttonClick(data: any): ButtonClick {\n    return { type: constants.BUTTON_CLICK, payload: data };\n}\n\nexport function fetchSuccess(data: any): FetchSuccess {\n    return { type: constants.RECEIVED_RECORD, payload: data };\n}\n\nexport function increaseSuccess(): IncreaseSuccess {\n    return { type: constants.INCREASE_RECORD };\n}\n\nexport function closeDialog(): CloseDialog {\n    return { type: constants.CLOSE_DIALOG_CLICK };\n}\n\nexport function openDialog(): OpenDialog {\n    return { type: constants.OPEN_DIALOG_CLICK };\n}\n\nexport function closeFormula(): CloseFormula {\n    return { type: constants.CLOSE_FORMULA_CLICK };\n}\n\nexport function openFormula(): OpenFormula {\n    return { type: constants.OPEN_FORMULA_CLICK };\n}\n","export const formula = `if (a === b) {\n  table[row][col] = table[row - 1][col - 1] + 1\n} else {\n  table[row][col] = Math.max(\n    table[row][col - 1], table[row - 1][col]\n  )\n}`;\n\nexport const description = `Given two sequences, find the length of longest \nsubsequence present in both of them. A subsequence \nis a sequence that appears in the same relative \norder, but not necessarily contiguous. `;\n\nexport const alUsecases = '';\n\nexport const example = `“abc”, “abg”, “bdf”, “aeg”, ‘”acefg”, .. etc \nare subsequences of “abcdefg”.`;\n","const createDPTable = (stringOne: string, stringTwo: string): number[][] => {\n    const rows = stringTwo.length + 1;\n    const cols = stringOne.length + 1;\n\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill(0));\n\n    for (let row = 1; row < rows; row++) {\n        for (let col = 1; col < cols; col++) {\n            if (stringOne.charAt(col - 1) === stringTwo.charAt(row - 1)) {\n                table[row][col] = table[row - 1][col - 1] + 1;\n            } else {\n                table[row][col] = Math.max(table[row][col - 1], table[row - 1][col]);\n            }\n        }\n    }\n\n    return table;\n};\n\nexport default createDPTable;\n","import createDPTable from './algorithm';\nimport { Point } from '../../store/BasicState';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst startPoint: Point = {\n    row: 2,\n    col: 2,\n};\n\ninterface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (stringOne: string, stringTwo: string): TableSize => {\n    const rows = stringTwo.length + 2;\n    const cols = stringOne.length + 2;\n    return { rows, cols };\n};\n\nconst createTableMatrix = (stringOne: string, stringTwo: string): (number | string)[][] => {\n    const { rows, cols } = getTableSize(stringOne, stringTwo);\n\n    const table = new Array(rows).fill('').map(() => new Array(cols).fill(''));\n\n    for (let col = 2; col < cols; col++) {\n        table[0][col] = stringOne.charAt(col - 2);\n        table[1][col] = 0;\n    }\n\n    for (let row = 2; row < rows; row++) {\n        table[row][0] = stringTwo.charAt(row - 2);\n        table[row][1] = 0;\n    }\n\n    table[1][1] = 0;\n    table[startPoint.row][startPoint.col] = '?';\n    return table;\n};\n\nconst createComparedTable = (stringOne: string, stringTwo: string): (number | string)[][] => {\n    const { rows, cols } = getTableSize(stringOne, stringTwo);\n\n    const dpTable = createDPTable(stringOne, stringTwo);\n    const tableMatrix = createTableMatrix(stringOne, stringTwo);\n\n    for (let row = 1; row < rows; row++) {\n        for (let col = 1; col < cols; col++) {\n            tableMatrix[row][col] = dpTable[row - 1][col - 1];\n        }\n    }\n    return tableMatrix;\n};\n\nconst addHelperStyles = (styles: React.CSSProperties[][], point: Point): void => {\n    for (let col = 0; col < styles[0].length && col <= point.col; col++) {\n        styles[0][col] = helperStyle;\n    }\n\n    for (let row = 0; row < styles.length && row <= point.row; row++) {\n        styles[row][0] = helperStyle;\n    }\n};\n\nconst createTableStyles = (stringOne: string, stringTwo: string): (React.CSSProperties)[][] => {\n    const rows = stringTwo.length + 2;\n    const cols = stringOne.length + 2;\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill({}));\n    addHelperStyles(table, startPoint);\n    return table;\n};\n\nconst createButtons = (stringOne: string, stringTwo: string): number[] => {\n    const dpTable = createDPTable(stringOne, stringTwo);\n    const set = new Set<number>();\n    for (let row = 1; row < dpTable.length; row++) {\n        for (let col = 1; col < dpTable[row].length; col++) {\n            set.add(dpTable[row][col]);\n        }\n    }\n    return Array.from(set).sort();\n};\n\nconst createButtonsStyles = (stringOne: string, stringTwo: string): (React.CSSProperties)[] => {\n    return createButtons(stringOne, stringTwo).map(() => ({ color: 'back' }));\n};\n\nexport {\n    addHelperStyles,\n    createTableMatrix,\n    createComparedTable,\n    createTableStyles,\n    createButtons,\n    createButtonsStyles,\n    startPoint,\n};\n","import { Dialog, DialogScroll, Header, BasicInfo, State, Difficulty, Formula } from '../BasicState';\nimport { buttonClick, refresh, openDialog, closeDialog, closeFormula, openFormula } from './actions';\nimport { description, formula, example, alUsecases } from './contents';\nimport * as helper from '../../algorithms/longest-common-subsequence';\n\nexport const basicInfo: BasicInfo = {\n    id: 3,\n    title: 'Longest Common Subsequence',\n};\n\nconst codeFormula: Formula = {\n    ...basicInfo,\n    formulaOpen: false,\n    formulaCroll: DialogScroll.Paper,\n    formula: formula,\n    handleCloseFormulaClick: closeFormula,\n};\n\nconst dialog: Dialog = {\n    ...basicInfo,\n    dialogOpen: false,\n    dialogCroll: DialogScroll.Paper,\n    description: description,\n    example: example,\n    alUsecases: alUsecases,\n    handleCloseDialogClick: closeDialog,\n};\n\nconst header: Header = {\n    ...basicInfo,\n    success: false,\n    loading: false,\n    steps: 0,\n    errors: 0,\n    startTime: 0,\n    finishTime: 0,\n    difficulty: Difficulty.Easy,\n    handleRefreshClick: refresh,\n    handleOpenDialogClick: openDialog,\n    handleOpenFormulaClick: openFormula,\n};\n\nconst bases = 'ACGT';\nconst random = (max: number) => Math.floor(Math.random() * max);\n\nexport const create = () => {\n    const stringOne: string = Array(8).fill(bases.length).map(random).map(i => bases[i]).join('');\n    const stringTwo: string = Array(4).fill(bases.length).map(random).map(i => bases[i]).join('');\n    return ({\n        ...header,\n        ...dialog,\n        ...codeFormula,\n        currentPoint: helper.startPoint,\n        comparedTable: helper.createComparedTable(stringOne, stringTwo),\n        table: helper.createTableMatrix(stringOne, stringTwo),\n        tableStyles: helper.createTableStyles(stringOne, stringTwo),\n        buttons: helper.createButtons(stringOne, stringTwo),\n        buttonsStyles: helper.createButtonsStyles(stringOne, stringTwo),\n        handleButtonClick: buttonClick,\n    });\n};\n\nexport const state: State = create();\n","export const OPEN_DIALOG_CLICK = '@@LONGEST_COMMON_SUBSTRING/OPEN_DIALOG_CLICK';\nexport type OPEN_DIALOG_CLICK = typeof OPEN_DIALOG_CLICK;\n\nexport const CLOSE_DIALOG_CLICK = '@@LONGEST_COMMON_SUBSTRING/CLOSE_DIALOG_CLICK';\nexport type CLOSE_DIALOG_CLICK = typeof CLOSE_DIALOG_CLICK;\n\nexport const OPEN_FORMULA_CLICK = '@@LONGEST_COMMON_SUBSTRING/OPEN_FORMULA_CLICK';\nexport type OPEN_FORMULA_CLICK = typeof OPEN_FORMULA_CLICK;\n\nexport const CLOSE_FORMULA_CLICK = '@@LONGEST_COMMON_SUBSTRING/CLOSE_FORMULA_CLICK';\nexport type CLOSE_FORMULA_CLICK = typeof CLOSE_FORMULA_CLICK;\n\nexport const BUTTON_CLICK = '@@LONGEST_COMMON_SUBSTRING/BUTTON_CLICK';\nexport type BUTTON_CLICK = typeof BUTTON_CLICK;\n\nexport const REFRESH_CLICK = '@@LONGEST_COMMON_SUBSTRING/REFRESH_CLICK';\nexport type REFRESH_CLICK = typeof REFRESH_CLICK;\n\nexport const GET_RECORD = '@@LONGEST_COMMON_SUBSTRING/GET_SUCCESS_COUNT';\nexport type GET_RECORD = typeof GET_RECORD;\n\nexport const RECEIVED_RECORD = '@@LONGEST_COMMON_SUBSTRING/RECEIVED_SUCCESS_COUNT';\nexport type RECEIVED_RECORD = typeof RECEIVED_RECORD;\n\nexport const INCREASE_RECORD = '@@LONGEST_COMMON_SUBSTRING/INCREASE_RECORD';\nexport type INCREASE_RECORD = typeof INCREASE_RECORD;\n","import * as constants from './constants';\n\nexport interface Refresh {\n    type: constants.REFRESH_CLICK;\n}\n\nexport interface ButtonClick {\n    type: constants.BUTTON_CLICK;\n    payload: any;\n}\n\nexport interface FetchSuccess {\n    type: constants.RECEIVED_RECORD;\n    payload: any;\n}\n\nexport interface IncreaseSuccess {\n    type: constants.INCREASE_RECORD;\n}\n\nexport interface CloseDialog {\n    type: constants.CLOSE_DIALOG_CLICK;\n}\n\nexport interface OpenDialog {\n    type: constants.OPEN_DIALOG_CLICK;\n}\n\nexport interface CloseFormula {\n    type: constants.CLOSE_FORMULA_CLICK;\n}\n\nexport interface OpenFormula {\n    type: constants.OPEN_FORMULA_CLICK;\n}\n\nexport type Action = Refresh | ButtonClick | FetchSuccess | IncreaseSuccess |\n    CloseDialog | OpenDialog | CloseFormula | OpenFormula;\n\nexport function refresh(): Refresh {\n    return { type: constants.REFRESH_CLICK };\n}\n\nexport function buttonClick(data: any): ButtonClick {\n    return { type: constants.BUTTON_CLICK, payload: data };\n}\n\nexport function fetchSuccess(data: any): FetchSuccess {\n    return { type: constants.RECEIVED_RECORD, payload: data };\n}\n\nexport function increaseSuccess(): IncreaseSuccess {\n    return { type: constants.INCREASE_RECORD };\n}\n\nexport function closeDialog(): CloseDialog {\n    return { type: constants.CLOSE_DIALOG_CLICK };\n}\n\nexport function openDialog(): OpenDialog {\n    return { type: constants.OPEN_DIALOG_CLICK };\n}\n\nexport function closeFormula(): CloseFormula {\n    return { type: constants.CLOSE_FORMULA_CLICK };\n}\n\nexport function openFormula(): OpenFormula {\n    return { type: constants.OPEN_FORMULA_CLICK };\n}\n","export const formula = `if (a === b) {\n  table[row][col] = table[row - 1][col - 1] + 1;\n} else {\n  table[row][col] = 0;\n}`;\n\nexport const description = `Given two strings ‘X’ and ‘Y’, find the length \nof the longest common substring.`;\n\nexport const alUsecases = '';\n\nexport const example = `\nInput : X = \"abcdxyz\", y = \"xyzabcd\"\nOutput : 4\nThe longest common substring is \"abcd\" and is of length 4.\n\nInput : X = \"zxabcdezy\", y = \"yzabcdezx\"\nOutput : 6\nThe longest common substring is \"abcdez\" and is of length 6.\n`;\n","const createDPTable = (stringOne: string, stringTwo: string): number[][] => {\n    const rows = stringTwo.length + 1;\n    const cols = stringOne.length + 1;\n\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill(0));\n\n    for (let row = 1; row < rows; row++) {\n        for (let col = 1; col < cols; col++) {\n            if (stringOne.charAt(col - 1) === stringTwo.charAt(row - 1)) {\n                table[row][col] = table[row - 1][col - 1] + 1;\n            } else {\n                table[row][col] = 0;\n            }\n        }\n    }\n\n    return table;\n};\n\nexport default createDPTable;\n","import createDPTable from './algorithm';\nimport { Point } from '../../store/BasicState';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst startPoint: Point = {\n    row: 2,\n    col: 2,\n};\n\ninterface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (stringOne: string, stringTwo: string): TableSize => {\n    const rows = stringTwo.length + 2;\n    const cols = stringOne.length + 2;\n    return { rows, cols };\n};\n\nconst createTableMatrix = (stringOne: string, stringTwo: string): (number | string)[][] => {\n    const { rows, cols } = getTableSize(stringOne, stringTwo);\n\n    const table = new Array(rows).fill('').map(() => new Array(cols).fill(''));\n\n    for (let col = 2; col < cols; col++) {\n        table[0][col] = stringOne.charAt(col - 2);\n        table[1][col] = 0;\n    }\n\n    for (let row = 2; row < rows; row++) {\n        table[row][0] = stringTwo.charAt(row - 2);\n        table[row][1] = 0;\n    }\n\n    table[1][1] = 0;\n    table[startPoint.row][startPoint.col] = '?';\n    return table;\n};\n\nconst createComparedTable = (stringOne: string, stringTwo: string): (number | string)[][] => {\n    const { rows, cols } = getTableSize(stringOne, stringTwo);\n\n    const dpTable = createDPTable(stringOne, stringTwo);\n    const tableMatrix = createTableMatrix(stringOne, stringTwo);\n\n    for (let row = 1; row < rows; row++) {\n        for (let col = 1; col < cols; col++) {\n            tableMatrix[row][col] = dpTable[row - 1][col - 1];\n        }\n    }\n    return tableMatrix;\n};\n\nconst addHelperStyles = (styles: React.CSSProperties[][], point: Point): void => {\n    for (let col = 0; col < styles[0].length && col <= point.col; col++) {\n        styles[0][col] = helperStyle;\n    }\n\n    for (let row = 0; row < styles.length && row <= point.row; row++) {\n        styles[row][0] = helperStyle;\n    }\n};\n\nconst createTableStyles = (stringOne: string, stringTwo: string): (React.CSSProperties)[][] => {\n    const { rows, cols } = getTableSize(stringOne, stringTwo);\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill({}));\n    addHelperStyles(table, startPoint);\n    return table;\n};\n\nconst createButtons = (stringOne: string, stringTwo: string): number[] => {\n    const dpTable = createDPTable(stringOne, stringTwo);\n    const set = new Set<number>();\n    for (let row = 1; row < dpTable.length; row++) {\n        for (let col = 1; col < dpTable[row].length; col++) {\n            set.add(dpTable[row][col]);\n        }\n    }\n    return Array.from(set).sort();\n};\n\nconst createButtonsStyles = (stringOne: string, stringTwo: string): (React.CSSProperties)[] => {\n    return createButtons(stringOne, stringTwo).map(() => ({ color: 'back' }));\n};\n\nexport {\n    addHelperStyles,\n    createTableMatrix,\n    createComparedTable,\n    createTableStyles,\n    createButtons,\n    createButtonsStyles,\n    startPoint,\n};\n","import { Dialog, DialogScroll, Header, BasicInfo, State, Difficulty, Formula } from '../BasicState';\nimport { buttonClick, refresh, openDialog, closeDialog, closeFormula, openFormula } from './actions';\nimport { description, formula, example, alUsecases } from './contents';\nimport * as helper from '../../algorithms/longest-common-substring';\n\nexport const basicInfo: BasicInfo = {\n    id: 4,\n    title: 'Longest Common Substring',\n};\n\nconst codeFormula: Formula = {\n    ...basicInfo,\n    formulaOpen: false,\n    formulaCroll: DialogScroll.Paper,\n    formula: formula,\n    handleCloseFormulaClick: closeFormula,\n};\n\nconst dialog: Dialog = {\n    ...basicInfo,\n    dialogOpen: false,\n    dialogCroll: DialogScroll.Paper,\n    description: description,\n    example: example,\n    alUsecases: alUsecases,\n    handleCloseDialogClick: closeDialog,\n};\n\nconst header: Header = {\n    ...basicInfo,\n    success: false,\n    loading: false,\n    steps: 0,\n    errors: 0,\n    startTime: 0,\n    finishTime: 0,\n    difficulty: Difficulty.Easy,\n    handleRefreshClick: refresh,\n    handleOpenDialogClick: openDialog,\n    handleOpenFormulaClick: openFormula,\n};\n\nconst bases = 'ACGT';\nconst random = (max: number) => Math.floor(Math.random() * max);\n\nexport const create = () => {\n    const stringOne: string = Array(8).fill(bases.length).map(random).map(i => bases[i]).join('');\n    const stringTwo: string = Array(4).fill(bases.length).map(random).map(i => bases[i]).join('');\n    return ({\n        ...header,\n        ...dialog,\n        ...codeFormula,\n        currentPoint: helper.startPoint,\n        comparedTable: helper.createComparedTable(stringOne, stringTwo),\n        table: helper.createTableMatrix(stringOne, stringTwo),\n        tableStyles: helper.createTableStyles(stringOne, stringTwo),\n        buttons: helper.createButtons(stringOne, stringTwo),\n        buttonsStyles: helper.createButtonsStyles(stringOne, stringTwo),\n        handleButtonClick: buttonClick,\n    });\n};\n\nexport const state: State = create();\n","export const OPEN_DIALOG_CLICK = '@@SUBSET_SUM_PROBLEM/OPEN_DIALOG_CLICK';\nexport type OPEN_DIALOG_CLICK = typeof OPEN_DIALOG_CLICK;\n\nexport const CLOSE_DIALOG_CLICK = '@@SUBSET_SUM_PROBLEM/CLOSE_DIALOG_CLICK';\nexport type CLOSE_DIALOG_CLICK = typeof CLOSE_DIALOG_CLICK;\n\nexport const OPEN_FORMULA_CLICK = '@@SUBSET_SUM_PROBLEM/OPEN_FORMULA_CLICK';\nexport type OPEN_FORMULA_CLICK = typeof OPEN_FORMULA_CLICK;\n\nexport const CLOSE_FORMULA_CLICK = '@@SUBSET_SUM_PROBLEM/CLOSE_FORMULA_CLICK';\nexport type CLOSE_FORMULA_CLICK = typeof CLOSE_FORMULA_CLICK;\n\nexport const BUTTON_CLICK = '@@SUBSET_SUM_PROBLEM/BUTTON_CLICK';\nexport type BUTTON_CLICK = typeof BUTTON_CLICK;\n\nexport const REFRESH_CLICK = '@@SUBSET_SUM_PROBLEM/REFRESH_CLICK';\nexport type REFRESH_CLICK = typeof REFRESH_CLICK;\n\nexport const GET_RECORD = '@@SUBSET_SUM_PROBLEM/GET_SUCCESS_COUNT';\nexport type GET_RECORD = typeof GET_RECORD;\n\nexport const RECEIVED_RECORD = '@@SUBSET_SUM_PROBLEM/RECEIVED_SUCCESS_COUNT';\nexport type RECEIVED_RECORD = typeof RECEIVED_RECORD;\n\nexport const INCREASE_RECORD = '@@SUBSET_SUM_PROBLEM/INCREASE_RECORD';\nexport type INCREASE_RECORD = typeof INCREASE_RECORD;\n","import * as constants from './constants';\n\nexport interface Refresh {\n    type: constants.REFRESH_CLICK;\n}\n\nexport interface ButtonClick {\n    type: constants.BUTTON_CLICK;\n    payload: any;\n}\n\nexport interface FetchSuccess {\n    type: constants.RECEIVED_RECORD;\n    payload: any;\n}\n\nexport interface IncreaseSuccess {\n    type: constants.INCREASE_RECORD;\n}\n\nexport interface CloseDialog {\n    type: constants.CLOSE_DIALOG_CLICK;\n}\n\nexport interface OpenDialog {\n    type: constants.OPEN_DIALOG_CLICK;\n}\n\nexport interface CloseFormula {\n    type: constants.CLOSE_FORMULA_CLICK;\n}\n\nexport interface OpenFormula {\n    type: constants.OPEN_FORMULA_CLICK;\n}\n\nexport type Action = Refresh | ButtonClick | FetchSuccess | IncreaseSuccess |\n    CloseDialog | OpenDialog | CloseFormula | OpenFormula;\n\nexport function refresh(): Refresh {\n    return { type: constants.REFRESH_CLICK };\n}\n\nexport function buttonClick(data: any): ButtonClick {\n    return { type: constants.BUTTON_CLICK, payload: data };\n}\n\nexport function fetchSuccess(data: any): FetchSuccess {\n    return { type: constants.RECEIVED_RECORD, payload: data };\n}\n\nexport function increaseSuccess(): IncreaseSuccess {\n    return { type: constants.INCREASE_RECORD };\n}\n\nexport function closeDialog(): CloseDialog {\n    return { type: constants.CLOSE_DIALOG_CLICK };\n}\n\nexport function openDialog(): OpenDialog {\n    return { type: constants.OPEN_DIALOG_CLICK };\n}\n\nexport function closeFormula(): CloseFormula {\n    return { type: constants.CLOSE_FORMULA_CLICK };\n}\n\nexport function openFormula(): OpenFormula {\n    return { type: constants.OPEN_FORMULA_CLICK };\n}\n","export const formula = `if (element > weight) {\n  table[row][col] = table[row - 1][col];\n} else {\n  table[row][col] = (table[row - 1][col] || \n    table[row - 1][weight - element]);\n}`;\n\nexport const description = `Given a set of non-negative integers, and a \nvalue sum, determine if there is a subset of\nthe given set with sum equal to given sum. `;\n\nexport const alUsecases = '';\n\nexport const example = `set = [3, 34, 4, 12, 5, 2], sum = 9\noutput: True\n\nsubset[4, 5] with sum 9`;\n","const createDPTable = (total: number, array: number[]): boolean[][] => {\n    const rows = array.length + 1;\n    const cols = total + 1;\n\n    const table = new Array(rows).fill(false).map(() => new Array(cols).fill(false));\n\n    for (let row = 0; row < rows; row++) {\n        table[row][0] = true;\n    }\n\n    for (let row = 1; row < rows; row++) {\n        const element = array[row - 1];\n        for (let col = 1; col < cols; col++) {\n            if (element > col) {\n                table[row][col] = table[row - 1][col];\n            } else {\n                table[row][col] = table[row - 1][col] || table[row - 1][col - element];\n            }\n        }\n    }\n\n    return table;\n};\n\nexport default createDPTable;\n","import createDPTable from './algorithm';\nimport { Point } from '../../store/BasicState';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst startPoint: Point = {\n    row: 2,\n    col: 2,\n};\n\ninterface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (total: number, array: number[]): TableSize => {\n    const rows = array.length + 2;\n    const cols = total + 2;\n    return { rows, cols };\n};\n\nconst createTableMatrix = (total: number, array: number[]): (boolean | string)[][] => {\n    const { rows, cols } = getTableSize(total, array);\n\n    const table = new Array(rows).fill('').map(() => new Array(cols).fill(''));\n\n    for (let col = 2; col < cols; col++) {\n        table[0][col] = col - 1;\n        table[1][col] = 'F';\n    }\n\n    for (let row = 2; row < rows; row++) {\n        table[row][0] = array[row - 2];\n        table[row][1] = 'T';\n    }\n\n    table[1][1] = 'T';\n    table[startPoint.row][startPoint.col] = '?';\n    return table;\n};\n\nconst createComparedTable = (total: number, array: number[]): (boolean | string)[][] => {\n    const { rows, cols } = getTableSize(total, array);\n\n    const dpTable = createDPTable(total, array);\n    const tableMatrix = createTableMatrix(total, array);\n\n    for (let row = 1; row < rows; row++) {\n        for (let col = 1; col < cols; col++) {\n            tableMatrix[row][col] = dpTable[row - 1][col - 1];\n        }\n    }\n    return tableMatrix;\n};\n\nconst addHelperStyles = (styles: React.CSSProperties[][], point: Point): void => {\n    for (let col = 0; col < styles[0].length && col <= point.col; col++) {\n        styles[0][col] = helperStyle;\n    }\n\n    for (let row = 0; row < styles.length && row <= point.row; row++) {\n        styles[row][0] = helperStyle;\n    }\n};\n\nconst createTableStyles = (total: number, array: number[]): (React.CSSProperties)[][] => {\n    const { rows, cols } = getTableSize(total, array);\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill({}));\n    addHelperStyles(table, startPoint);\n    return table;\n};\n\nconst createButtons = (total: number, array: number[]): boolean[] =>  [true, false];\n\nconst createButtonsStyles = (total: number, array: number[]): (React.CSSProperties)[] => {\n    return createButtons(total, array).map(() => ({ color: 'back' }));\n};\n\nexport {\n    addHelperStyles,\n    createTableMatrix,\n    createComparedTable,\n    createTableStyles,\n    createButtons,\n    createButtonsStyles,\n    startPoint,\n};\n","import { Dialog, DialogScroll, Header, BasicInfo, State, Difficulty, Formula } from '../BasicState';\nimport { buttonClick, refresh, openDialog, closeDialog, closeFormula, openFormula } from './actions';\nimport { description, formula, example, alUsecases } from './contents';\nimport * as helper from '../../algorithms/subset-sum-problem';\n\nexport const basicInfo: BasicInfo = {\n    id: 11,\n    title: 'Subset Sum Problem',\n};\n\nconst codeFormula: Formula = {\n    ...basicInfo,\n    formulaOpen: false,\n    formulaCroll: DialogScroll.Paper,\n    formula: formula,\n    handleCloseFormulaClick: closeFormula,\n};\n\nconst dialog: Dialog = {\n    ...basicInfo,\n    dialogOpen: false,\n    dialogCroll: DialogScroll.Paper,\n    description: description,\n    example: example,\n    alUsecases: alUsecases,\n    handleCloseDialogClick: closeDialog,\n};\n\nconst header: Header = {\n    ...basicInfo,\n    success: false,\n    loading: false,\n    steps: 0,\n    errors: 0,\n    startTime: 0,\n    finishTime: 0,\n    difficulty: Difficulty.Easy,\n    handleRefreshClick: refresh,\n    handleOpenDialogClick: openDialog,\n    handleOpenFormulaClick: openFormula,\n};\n\nconst total = 8;\nconst random = (max: number) => Math.floor(Math.random() * max) + 1;\n\nexport const create = () => {\n    const array: number[] = Array(4).fill(4).map(random);\n    return ({\n        ...header,\n        ...dialog,\n        ...codeFormula,\n        currentPoint: helper.startPoint,\n        comparedTable: helper.createComparedTable(total, array),\n        table: helper.createTableMatrix(total, array),\n        tableStyles: helper.createTableStyles(total, array),\n        buttons: helper.createButtons(total, array),\n        buttonsStyles: helper.createButtonsStyles(total, array),\n        handleButtonClick: buttonClick,\n    });\n};\n\nexport const state: State = create();\n","export const OPEN_DIALOG_CLICK = '@@MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END/OPEN_DIALOG_CLICK';\nexport type OPEN_DIALOG_CLICK = typeof OPEN_DIALOG_CLICK;\n\nexport const CLOSE_DIALOG_CLICK = '@@MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END/CLOSE_DIALOG_CLICK';\nexport type CLOSE_DIALOG_CLICK = typeof CLOSE_DIALOG_CLICK;\n\nexport const OPEN_FORMULA_CLICK = '@@MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END/OPEN_FORMULA_CLICK';\nexport type OPEN_FORMULA_CLICK = typeof OPEN_FORMULA_CLICK;\n\nexport const CLOSE_FORMULA_CLICK = '@@MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END/CLOSE_FORMULA_CLICK';\nexport type CLOSE_FORMULA_CLICK = typeof CLOSE_FORMULA_CLICK;\n\nexport const BUTTON_CLICK = '@@MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END/BUTTON_CLICK';\nexport type BUTTON_CLICK = typeof BUTTON_CLICK;\n\nexport const REFRESH_CLICK = '@@MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END/REFRESH_CLICK';\nexport type REFRESH_CLICK = typeof REFRESH_CLICK;\n\nexport const GET_RECORD = '@@MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END/GET_SUCCESS_COUNT';\nexport type GET_RECORD = typeof GET_RECORD;\n\nexport const RECEIVED_RECORD = '@@MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END/RECEIVED_SUCCESS_COUNT';\nexport type RECEIVED_RECORD = typeof RECEIVED_RECORD;\n\nexport const INCREASE_RECORD = '@@MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END/INCREASE_RECORD';\nexport type INCREASE_RECORD = typeof INCREASE_RECORD;\n","import * as constants from './constants';\n\nexport interface Refresh {\n    type: constants.REFRESH_CLICK;\n}\n\nexport interface ButtonClick {\n    type: constants.BUTTON_CLICK;\n    payload: any;\n}\n\nexport interface FetchSuccess {\n    type: constants.RECEIVED_RECORD;\n    payload: any;\n}\n\nexport interface IncreaseSuccess {\n    type: constants.INCREASE_RECORD;\n}\n\nexport interface CloseDialog {\n    type: constants.CLOSE_DIALOG_CLICK;\n}\n\nexport interface OpenDialog {\n    type: constants.OPEN_DIALOG_CLICK;\n}\n\nexport interface CloseFormula {\n    type: constants.CLOSE_FORMULA_CLICK;\n}\n\nexport interface OpenFormula {\n    type: constants.OPEN_FORMULA_CLICK;\n}\n\nexport type Action = Refresh | ButtonClick | FetchSuccess | IncreaseSuccess |\n    CloseDialog | OpenDialog | CloseFormula | OpenFormula;\n\nexport function refresh(): Refresh {\n    return { type: constants.REFRESH_CLICK };\n}\n\nexport function buttonClick(data: any): ButtonClick {\n    return { type: constants.BUTTON_CLICK, payload: data };\n}\n\nexport function fetchSuccess(data: any): FetchSuccess {\n    return { type: constants.RECEIVED_RECORD, payload: data };\n}\n\nexport function increaseSuccess(): IncreaseSuccess {\n    return { type: constants.INCREASE_RECORD };\n}\n\nexport function closeDialog(): CloseDialog {\n    return { type: constants.CLOSE_DIALOG_CLICK };\n}\n\nexport function openDialog(): OpenDialog {\n    return { type: constants.OPEN_DIALOG_CLICK };\n}\n\nexport function closeFormula(): CloseFormula {\n    return { type: constants.CLOSE_FORMULA_CLICK };\n}\n\nexport function openFormula(): OpenFormula {\n    return { type: constants.OPEN_FORMULA_CLICK };\n}\n","export const formula = '';\n\nexport const description = `Given an array of non negative integers, start \nfrom the first element and reach the last by \njumping. The jump length can be at most the \nvalue at the current position in the array. \nOptimum result is when you reach the goal in\nminimum number of jumps.`;\n\nexport const alUsecases = '';\nexport const example = '';\n","const max = Number.MAX_SAFE_INTEGER;\n\nconst initTable = (array: number[]): number[][] => {\n    const table: number[][] = [];\n    for (let row = 0; row < array.length; row++) {\n        table.push(Array(array.length).fill(max));\n    }\n    table[0][0] = 0;\n    return table;\n};\n\nconst createDPTable = (array: number[]): number[][] => {\n\n    const table = initTable(array);\n\n    for (let i = 0; i < table.length; i++) {\n        for (let j = 0; j < i; j++) {\n            const prev = j === 0 ? max : table[j - 1][i];\n            let last = (j === 0 ? 0 : table[j - 1][j]) + 1;\n            if (j + array[j] < i) {\n                last = max;\n            }\n            table[j][i] = Math.min(last, prev);\n        }\n    }\n\n    return table;\n};\n\nexport default createDPTable;\n","import createDPTable from './algorithm';\nimport { Point } from '../../store/BasicState';\nimport { helperStyle, helperStyleSecondary, helperStyleThird } from '../../pages/withRoot';\n\nconst max = Number.MAX_SAFE_INTEGER;\n\nconst startPoint: Point = {\n    row: 0,\n    col: 1,\n};\n\ninterface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (array: number[]): TableSize => {\n    const rows = 3;\n    const cols = array.length + 1;\n    return { rows, cols };\n};\n\nconst createTableMatrix = (array: number[]): (number | string)[][] => {\n    const table: (number | string)[][] = [];\n    const indices: (string | number)[] = ['INDEX', ...Array.from(Array(array.length).keys())];\n    const jumps: (string | number)[] = ['JUMPS', ...array];\n    const result: (string | number)[] = ['RESULT', 0, ...Array(array.length - 1).fill('')];\n    table[0] = indices;\n    table[1] = jumps;\n    table[2] = result;\n    return table;\n};\n\nconst createComparedTable = (array: number[]): number[][] => createDPTable(array);\n\nconst addHelperStyles = (styles: React.CSSProperties[][], point: Point, table: (string | number)[][]): void => {\n    styles[0][point.row + 1] = helperStyle;\n    styles[0][point.col + 1] = helperStyle;\n    const jumpIndex = point.row + 2;\n    const jumpLength = Number(table[1][point.row + 1]);\n\n    const jumpsStyles = styles[1];\n    for (let i = jumpIndex; i < jumpsStyles.length && i < (jumpIndex + jumpLength); i++) {\n        jumpsStyles[i] = helperStyleSecondary;\n    }\n\n    styles[2][point.col + 1] = helperStyleThird;\n};\n\nconst createTableStyles = (array: number[]): (React.CSSProperties)[][] => {\n    const { rows, cols } = getTableSize(array);\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill({}));\n    addHelperStyles(table, startPoint, createTableMatrix(array));\n    return table;\n};\n\nconst createButtons = (array: number[]): (string | number)[] => {\n    const dpTable = createDPTable(array);\n    const set = new Set<string | number>();\n    for (let row = 0; row < dpTable.length; row++) {\n        for (let col = 0; col < dpTable[row].length; col++) {\n            const value = dpTable[row][col];\n            if (value === max) {\n                set.add('x');\n            } else {\n                set.add(value);\n            }\n        }\n    }\n    set.delete(0);\n    return Array.from(set).sort();\n};\n\nconst createButtonsStyles = (array: number[]): (React.CSSProperties)[] => {\n    return createButtons(array).map(() => ({ color: 'back' }));\n};\n\nexport {\n    addHelperStyles,\n    createTableMatrix,\n    createComparedTable,\n    createTableStyles,\n    createButtons,\n    createButtonsStyles,\n    startPoint,\n};\n","import { Dialog, DialogScroll, Header, BasicInfo, State, Difficulty, Formula } from '../BasicState';\nimport { buttonClick, refresh, openDialog, closeDialog, closeFormula, openFormula } from './actions';\nimport { description, formula, example, alUsecases } from './contents';\nimport * as helper from '../../algorithms/minimum-number-of-jumps-to-reach-end';\n\nexport const basicInfo: BasicInfo = {\n    id: 21,\n    title: 'Minimum Number Of Jumps To Reach End',\n};\n\nconst codeFormula: Formula = {\n    ...basicInfo,\n    formulaOpen: false,\n    formulaCroll: DialogScroll.Paper,\n    formula: formula,\n    handleCloseFormulaClick: closeFormula,\n};\n\nconst dialog: Dialog = {\n    ...basicInfo,\n    dialogOpen: false,\n    dialogCroll: DialogScroll.Paper,\n    description: description,\n    example: example,\n    alUsecases: alUsecases,\n    handleCloseDialogClick: closeDialog,\n};\n\nconst header: Header = {\n    ...basicInfo,\n    success: false,\n    loading: false,\n    steps: 0,\n    errors: 0,\n    startTime: 0,\n    finishTime: 0,\n    difficulty: Difficulty.Easy,\n    handleRefreshClick: refresh,\n    handleOpenDialogClick: openDialog,\n    handleOpenFormulaClick: openFormula,\n};\n\nconst random = (max: number) => Math.floor(Math.random() * max);\n\nexport const create = () => {\n    const array = Array(8).fill(4).map(random);\n    return ({\n        ...header,\n        ...dialog,\n        ...codeFormula,\n        currentPoint: helper.startPoint,\n        comparedTable: helper.createComparedTable(array),\n        table: helper.createTableMatrix(array),\n        tableStyles: helper.createTableStyles(array),\n        buttons: helper.createButtons(array),\n        buttonsStyles: helper.createButtonsStyles(array),\n        handleButtonClick: buttonClick,\n    });\n};\n\nexport const state: State = create();\n","export const OPEN_DIALOG_CLICK = '@@LONGEST_INCREASING_SUBSEQUENCE/OPEN_DIALOG_CLICK';\nexport type OPEN_DIALOG_CLICK = typeof OPEN_DIALOG_CLICK;\n\nexport const CLOSE_DIALOG_CLICK = '@@LONGEST_INCREASING_SUBSEQUENCE/CLOSE_DIALOG_CLICK';\nexport type CLOSE_DIALOG_CLICK = typeof CLOSE_DIALOG_CLICK;\n\nexport const OPEN_FORMULA_CLICK = '@@LONGEST_INCREASING_SUBSEQUENCE/OPEN_FORMULA_CLICK';\nexport type OPEN_FORMULA_CLICK = typeof OPEN_FORMULA_CLICK;\n\nexport const CLOSE_FORMULA_CLICK = '@@LONGEST_INCREASING_SUBSEQUENCE/CLOSE_FORMULA_CLICK';\nexport type CLOSE_FORMULA_CLICK = typeof CLOSE_FORMULA_CLICK;\n\nexport const BUTTON_CLICK = '@@LONGEST_INCREASING_SUBSEQUENCE/BUTTON_CLICK';\nexport type BUTTON_CLICK = typeof BUTTON_CLICK;\n\nexport const REFRESH_CLICK = '@@LONGEST_INCREASING_SUBSEQUENCE/REFRESH_CLICK';\nexport type REFRESH_CLICK = typeof REFRESH_CLICK;\n\nexport const GET_RECORD = '@@LONGEST_INCREASING_SUBSEQUENCE/GET_SUCCESS_COUNT';\nexport type GET_RECORD = typeof GET_RECORD;\n\nexport const RECEIVED_RECORD = '@@LONGEST_INCREASING_SUBSEQUENCE/RECEIVED_SUCCESS_COUNT';\nexport type RECEIVED_RECORD = typeof RECEIVED_RECORD;\n\nexport const INCREASE_RECORD = '@@LONGEST_INCREASING_SUBSEQUENCE/INCREASE_RECORD';\nexport type INCREASE_RECORD = typeof INCREASE_RECORD;\n","import * as constants from './constants';\n\nexport interface Refresh {\n    type: constants.REFRESH_CLICK;\n}\n\nexport interface ButtonClick {\n    type: constants.BUTTON_CLICK;\n    payload: any;\n}\n\nexport interface FetchSuccess {\n    type: constants.RECEIVED_RECORD;\n    payload: any;\n}\n\nexport interface IncreaseSuccess {\n    type: constants.INCREASE_RECORD;\n}\n\nexport interface CloseDialog {\n    type: constants.CLOSE_DIALOG_CLICK;\n}\n\nexport interface OpenDialog {\n    type: constants.OPEN_DIALOG_CLICK;\n}\n\nexport interface CloseFormula {\n    type: constants.CLOSE_FORMULA_CLICK;\n}\n\nexport interface OpenFormula {\n    type: constants.OPEN_FORMULA_CLICK;\n}\n\nexport type Action = Refresh | ButtonClick | FetchSuccess | IncreaseSuccess |\n    CloseDialog | OpenDialog | CloseFormula | OpenFormula;\n\nexport function refresh(): Refresh {\n    return { type: constants.REFRESH_CLICK };\n}\n\nexport function buttonClick(data: any): ButtonClick {\n    return { type: constants.BUTTON_CLICK, payload: data };\n}\n\nexport function fetchSuccess(data: any): FetchSuccess {\n    return { type: constants.RECEIVED_RECORD, payload: data };\n}\n\nexport function increaseSuccess(): IncreaseSuccess {\n    return { type: constants.INCREASE_RECORD };\n}\n\nexport function closeDialog(): CloseDialog {\n    return { type: constants.CLOSE_DIALOG_CLICK };\n}\n\nexport function openDialog(): OpenDialog {\n    return { type: constants.OPEN_DIALOG_CLICK };\n}\n\nexport function closeFormula(): CloseFormula {\n    return { type: constants.CLOSE_FORMULA_CLICK };\n}\n\nexport function openFormula(): OpenFormula {\n    return { type: constants.OPEN_FORMULA_CLICK };\n}\n","export const formula = `if (toCompare < target) {\n  table[row][col] = Math.max(\n    table[row - 1][col], \n    table[row - 1][row - 1] + 1\n  );\n} else {\n  table[row][col] = table[row - 1][col];\n}`;\n\nexport const description = `Given an unsorted array of integers, find the \nlength of longest increasing subsequence. `;\n\nexport const alUsecases = '';\n\nexport const example = `Given [10, 9, 2, 5, 3, 7, 101, 18],\nThe longest increasing subsequence is \n[2, 3, 7, 101], therefore the length is 4.`;\n","const initTable = (array: number[]) => array.map(() => Array(array.length).fill(1));\n\nconst createDPTable = (array: number[]): number[][] => {\n    const table = initTable(array);\n\n    for (let col = 1; col < array.length; col++) {\n        for (let row = 1; row <= col; row++) {\n            const toCompare = array[row - 1];\n            const target = array[col];\n            if (toCompare < target) {\n                table[row][col] = Math.max(table[row - 1][col], table[row - 1][row - 1] + 1);\n            } else {\n                table[row][col] = table[row - 1][col];\n            }\n        }\n    }\n\n    return table;\n};\n\nexport default createDPTable;\n","import createDPTable from './algorithm';\nimport { Point } from '../../store/BasicState';\nimport { helperStyle, helperStyleSecondary } from '../../pages/withRoot';\n\nconst startPoint: Point = {\n    row: 1,\n    col: 1,\n};\n\ninterface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (array: number[]): TableSize => {\n    return { rows: 2, cols: array.length };\n};\n\nconst createTableMatrix = (array: number[]): number[][] => {\n    const table: number[][] = [];\n    table[0] = array.map(item => item);\n    table[1] = Array(array.length).fill(1);\n    return table;\n};\n\nconst createComparedTable = (array: number[]): number[][] => {\n    return createDPTable(array);\n};\n\nconst addHelperStyles = (styles: React.CSSProperties[][], { row, col }: Point): void => {\n    styles[0][row - 1] = helperStyleSecondary;\n    styles[1][row - 1] = helperStyle;\n\n    styles[0][col] = helperStyleSecondary;\n    styles[1][col] = helperStyle;\n};\n\nconst createTableStyles = (array: number[]): (React.CSSProperties)[][] => {\n    const { rows, cols } = getTableSize(array);\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill({}));\n    addHelperStyles(table, startPoint);\n    return table;\n};\n\nconst createButtons = (array: number[]): number[] => {\n    const dpTable = createDPTable(array);\n    const set = new Set<number>();\n    for (let row = 1; row < dpTable.length; row++) {\n        for (let col = 1; col < dpTable[row].length; col++) {\n            set.add(dpTable[row][col]);\n        }\n    }\n    return Array.from(set).sort();\n};\n\nconst createButtonsStyles = (array: number[]): (React.CSSProperties)[] => {\n    return createButtons(array).map(() => ({ color: 'back' }));\n};\n\nexport {\n    addHelperStyles,\n    createTableMatrix,\n    createComparedTable,\n    createTableStyles,\n    createButtons,\n    createButtonsStyles,\n    startPoint,\n};\n","import { Dialog, DialogScroll, Header, BasicInfo, State, Difficulty, Formula } from '../BasicState';\nimport { buttonClick, refresh, openDialog, closeDialog, closeFormula, openFormula } from './actions';\nimport { description, formula, example, alUsecases } from './contents';\nimport * as helper from '../../algorithms/longest-increasing-subsequence';\n\nexport const basicInfo: BasicInfo = {\n    id: 16,\n    title: 'Longest Increasing Subsequence',\n};\n\nconst codeFormula: Formula = {\n    ...basicInfo,\n    formulaOpen: false,\n    formulaCroll: DialogScroll.Paper,\n    formula: formula,\n    handleCloseFormulaClick: closeFormula,\n};\n\nconst dialog: Dialog = {\n    ...basicInfo,\n    dialogOpen: false,\n    dialogCroll: DialogScroll.Paper,\n    description: description,\n    example: example,\n    alUsecases: alUsecases,\n    handleCloseDialogClick: closeDialog,\n};\n\nconst header: Header = {\n    ...basicInfo,\n    success: false,\n    loading: false,\n    steps: 0,\n    errors: 0,\n    startTime: 0,\n    finishTime: 0,\n    difficulty: Difficulty.Easy,\n    handleRefreshClick: refresh,\n    handleOpenDialogClick: openDialog,\n    handleOpenFormulaClick: openFormula,\n};\n\nconst random = (max: number) => Math.floor(Math.random() * max);\n\nexport const create = () => {\n\n    const array = Array(8).fill(10).map(random);\n\n    return ({\n        ...header,\n        ...dialog,\n        ...codeFormula,\n        currentPoint: helper.startPoint,\n        comparedTable: helper.createComparedTable(array),\n        table: helper.createTableMatrix(array),\n        tableStyles: helper.createTableStyles(array),\n        buttons: helper.createButtons(array),\n        buttonsStyles: helper.createButtonsStyles(array),\n        handleButtonClick: buttonClick,\n    });\n};\n\nexport const state: State = create();\n","export const OPEN_DIALOG_CLICK = '@@MINIMUM_PATH_SUM/OPEN_DIALOG_CLICK';\nexport type OPEN_DIALOG_CLICK = typeof OPEN_DIALOG_CLICK;\n\nexport const CLOSE_DIALOG_CLICK = '@@MINIMUM_PATH_SUM/CLOSE_DIALOG_CLICK';\nexport type CLOSE_DIALOG_CLICK = typeof CLOSE_DIALOG_CLICK;\n\nexport const OPEN_FORMULA_CLICK = '@@MINIMUM_PATH_SUM/OPEN_FORMULA_CLICK';\nexport type OPEN_FORMULA_CLICK = typeof OPEN_FORMULA_CLICK;\n\nexport const CLOSE_FORMULA_CLICK = '@@MINIMUM_PATH_SUM/CLOSE_FORMULA_CLICK';\nexport type CLOSE_FORMULA_CLICK = typeof CLOSE_FORMULA_CLICK;\n\nexport const BUTTON_CLICK = '@@MINIMUM_PATH_SUM/BUTTON_CLICK';\nexport type BUTTON_CLICK = typeof BUTTON_CLICK;\n\nexport const REFRESH_CLICK = '@@MINIMUM_PATH_SUM/REFRESH_CLICK';\nexport type REFRESH_CLICK = typeof REFRESH_CLICK;\n\nexport const GET_RECORD = '@@MINIMUM_PATH_SUM/GET_SUCCESS_COUNT';\nexport type GET_RECORD = typeof GET_RECORD;\n\nexport const RECEIVED_RECORD = '@@MINIMUM_PATH_SUM/RECEIVED_SUCCESS_COUNT';\nexport type RECEIVED_RECORD = typeof RECEIVED_RECORD;\n\nexport const INCREASE_RECORD = '@@MINIMUM_PATH_SUM/INCREASE_RECORD';\nexport type INCREASE_RECORD = typeof INCREASE_RECORD;\n","import * as constants from './constants';\n\nexport interface Refresh {\n    type: constants.REFRESH_CLICK;\n}\n\nexport interface ButtonClick {\n    type: constants.BUTTON_CLICK;\n    payload: any;\n}\n\nexport interface FetchSuccess {\n    type: constants.RECEIVED_RECORD;\n    payload: any;\n}\n\nexport interface IncreaseSuccess {\n    type: constants.INCREASE_RECORD;\n}\n\nexport interface CloseDialog {\n    type: constants.CLOSE_DIALOG_CLICK;\n}\n\nexport interface OpenDialog {\n    type: constants.OPEN_DIALOG_CLICK;\n}\n\nexport interface CloseFormula {\n    type: constants.CLOSE_FORMULA_CLICK;\n}\n\nexport interface OpenFormula {\n    type: constants.OPEN_FORMULA_CLICK;\n}\n\nexport type Action = Refresh | ButtonClick | FetchSuccess | IncreaseSuccess |\n    CloseDialog | OpenDialog | CloseFormula | OpenFormula;\n\nexport function refresh(): Refresh {\n    return { type: constants.REFRESH_CLICK };\n}\n\nexport function buttonClick(data: any): ButtonClick {\n    return { type: constants.BUTTON_CLICK, payload: data };\n}\n\nexport function fetchSuccess(data: any): FetchSuccess {\n    return { type: constants.RECEIVED_RECORD, payload: data };\n}\n\nexport function increaseSuccess(): IncreaseSuccess {\n    return { type: constants.INCREASE_RECORD };\n}\n\nexport function closeDialog(): CloseDialog {\n    return { type: constants.CLOSE_DIALOG_CLICK };\n}\n\nexport function openDialog(): OpenDialog {\n    return { type: constants.OPEN_DIALOG_CLICK };\n}\n\nexport function closeFormula(): CloseFormula {\n    return { type: constants.CLOSE_FORMULA_CLICK };\n}\n\nexport function openFormula(): OpenFormula {\n    return { type: constants.OPEN_FORMULA_CLICK };\n}\n","export const formula = `table[row][col] = table[row][col] + Math.min(\n  table[row - 1][col], \n  table[row][col - 1]\n);`;\n\nexport const description = `Given a m x n grid filled with non-negative \nnumbers, find a path from top left to bottom \nright which minimizes the sum of all numbers \nalong its path.\n\nNote: You can only move either down or right \nat any point in time. \n`;\n\nexport const alUsecases = '';\nexport const example = '';\n","const cloneTable = (table: number[][]): number[][] => table.map(row => row.map(item => item));\n\nconst createDPTable = (table: number[][]): number[][] => {\n    const result: number[][] = cloneTable(table);\n\n    for (let col = 1; col < result[0].length; col++) {\n        result[0][col] = result[0][col - 1] + result[0][col];\n    }\n\n    for (let row = 1; row < result.length; row++) {\n        result[row][0] = result[row - 1][0] + result[row][0];\n    }\n\n    for (let row = 1; row < result.length; row++) {\n        for (let col = 1; col < result[row].length; col++) {\n            result[row][col] = result[row][col] + Math.min(result[row - 1][col], result[row][col - 1]);\n        }\n    }\n\n    return result;\n};\n\nexport default createDPTable;\n","import createDPTable from './algorithm';\nimport { Point } from '../../store/BasicState';\nimport { helperStyle, helperStyleSecondary } from '../../pages/withRoot';\n\nconst startPoint: Point = { row: 0, col: 1 };\n\ninterface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (table: number[][]): TableSize => {\n    const rows = table.length;\n    const cols = table[rows - 1].length;\n    return { rows, cols };\n};\n\nconst createTableMatrix = (table: number[][]): number[][] => {\n    return table.map(row => row.map(item => item));\n};\n\nconst createComparedTable = (table: number[][]): (number | string)[][] => {\n    return createDPTable(table);\n};\n\nconst addHelperStyles = (styles: React.CSSProperties[][], { row, col }: Point): void => {\n    const helper = helperStyle;\n    const target = helperStyleSecondary;\n    if (row === 0) {\n        styles[0][col - 1] = helper;\n        styles[0][col] = target;\n    } else if (col === 0) {\n        styles[row - 1][0] = helper;\n        styles[row][0] = target;\n    } else {\n        styles[row - 1][col] = helper;\n        styles[row][col - 1] = helper;\n        styles[row][col] = target;\n    }\n};\n\nconst createTableStyles = (table: number[][]): (React.CSSProperties)[][] => {\n    const { rows, cols } = getTableSize(table);\n    const styles = new Array(rows).fill(0).map(() => new Array(cols).fill({}));\n    addHelperStyles(styles, startPoint);\n    return styles;\n};\n\nconst createButtons = (table: number[][]): number[] => {\n    const dpTable = createDPTable(table);\n    const set = new Set<number>();\n\n    for (let col = 1; col < dpTable[0].length; col++) {\n        set.add(dpTable[0][col]);\n    }\n\n    for (let row = 1; row < dpTable.length; row++) {\n        set.add(dpTable[row][0]);\n    }\n\n    for (let row = 1; row < dpTable.length; row++) {\n        for (let col = 1; col < dpTable[row].length; col++) {\n            set.add(dpTable[row][col]);\n        }\n    }\n\n    return Array.from(set).sort((a, b) => a - b);\n};\n\nconst createButtonsStyles = (table: number[][]): (React.CSSProperties)[] => {\n    return createButtons(table).map(() => ({ color: 'back' }));\n};\n\nexport {\n    addHelperStyles,\n    createTableMatrix,\n    createComparedTable,\n    createTableStyles,\n    createButtons,\n    createButtonsStyles,\n    startPoint,\n};\n","import { Dialog, DialogScroll, Header, BasicInfo, State, Difficulty, Formula } from '../BasicState';\nimport { buttonClick, refresh, openDialog, closeDialog, closeFormula, openFormula } from './actions';\nimport { description, formula, example, alUsecases } from './contents';\nimport * as helper from '../../algorithms/minimum-path-sum';\n\nexport const basicInfo: BasicInfo = {\n    id: 9,\n    title: 'Minimum Path Sum',\n};\n\nconst codeFormula: Formula = {\n    ...basicInfo,\n    formulaOpen: false,\n    formulaCroll: DialogScroll.Paper,\n    formula: formula,\n    handleCloseFormulaClick: closeFormula,\n};\n\nconst dialog: Dialog = {\n    ...basicInfo,\n    dialogOpen: false,\n    dialogCroll: DialogScroll.Paper,\n    description: description,\n    example: example,\n    alUsecases: alUsecases,\n    handleCloseDialogClick: closeDialog,\n};\n\nconst header: Header = {\n    ...basicInfo,\n    success: false,\n    loading: false,\n    steps: 0,\n    errors: 0,\n    startTime: 0,\n    finishTime: 0,\n    difficulty: Difficulty.Easy,\n    handleRefreshClick: refresh,\n    handleOpenDialogClick: openDialog,\n    handleOpenFormulaClick: openFormula,\n};\n\nconst random = (max: number) => Math.floor(Math.random() * max) + 1;\n\nconst maxNumber = 5;\nconst rows = 4;\nconst cols = 4;\n\nconst createRow = (len: number, max: number): number[] => {\n    return Array(len).fill(max).map(random);\n};\n\nexport const create = () => {\n    const table = Array(rows).fill(0).map(() => createRow(cols, maxNumber));\n    return ({\n        ...header,\n        ...dialog,\n        ...codeFormula,\n        currentPoint: helper.startPoint,\n        comparedTable: helper.createComparedTable(table),\n        table: helper.createTableMatrix(table),\n        tableStyles: helper.createTableStyles(table),\n        buttons: helper.createButtons(table),\n        buttonsStyles: helper.createButtonsStyles(table),\n        handleButtonClick: buttonClick,\n    });\n};\n\nexport const state: State = create();\n","export const OPEN_DIALOG_CLICK = '@@WORD_BREAK/OPEN_DIALOG_CLICK';\nexport type OPEN_DIALOG_CLICK = typeof OPEN_DIALOG_CLICK;\n\nexport const CLOSE_DIALOG_CLICK = '@@WORD_BREAK/CLOSE_DIALOG_CLICK';\nexport type CLOSE_DIALOG_CLICK = typeof CLOSE_DIALOG_CLICK;\n\nexport const OPEN_FORMULA_CLICK = '@@WORD_BREAK/OPEN_FORMULA_CLICK';\nexport type OPEN_FORMULA_CLICK = typeof OPEN_FORMULA_CLICK;\n\nexport const CLOSE_FORMULA_CLICK = '@@WORD_BREAK/CLOSE_FORMULA_CLICK';\nexport type CLOSE_FORMULA_CLICK = typeof CLOSE_FORMULA_CLICK;\n\nexport const BUTTON_CLICK = '@@WORD_BREAK/BUTTON_CLICK';\nexport type BUTTON_CLICK = typeof BUTTON_CLICK;\n\nexport const REFRESH_CLICK = '@@WORD_BREAK/REFRESH_CLICK';\nexport type REFRESH_CLICK = typeof REFRESH_CLICK;\n\nexport const GET_RECORD = '@@WORD_BREAK/GET_SUCCESS_COUNT';\nexport type GET_RECORD = typeof GET_RECORD;\n\nexport const RECEIVED_RECORD = '@@WORD_BREAK/RECEIVED_SUCCESS_COUNT';\nexport type RECEIVED_RECORD = typeof RECEIVED_RECORD;\n\nexport const INCREASE_RECORD = '@@WORD_BREAK/INCREASE_RECORD';\nexport type INCREASE_RECORD = typeof INCREASE_RECORD;\n","import * as constants from './constants';\n\nexport interface Refresh {\n    type: constants.REFRESH_CLICK;\n}\n\nexport interface ButtonClick {\n    type: constants.BUTTON_CLICK;\n    payload: any;\n}\n\nexport interface FetchSuccess {\n    type: constants.RECEIVED_RECORD;\n    payload: any;\n}\n\nexport interface IncreaseSuccess {\n    type: constants.INCREASE_RECORD;\n}\n\nexport interface CloseDialog {\n    type: constants.CLOSE_DIALOG_CLICK;\n}\n\nexport interface OpenDialog {\n    type: constants.OPEN_DIALOG_CLICK;\n}\n\nexport interface CloseFormula {\n    type: constants.CLOSE_FORMULA_CLICK;\n}\n\nexport interface OpenFormula {\n    type: constants.OPEN_FORMULA_CLICK;\n}\n\nexport type Action = Refresh | ButtonClick | FetchSuccess | IncreaseSuccess |\n    CloseDialog | OpenDialog | CloseFormula | OpenFormula;\n\nexport function refresh(): Refresh {\n    return { type: constants.REFRESH_CLICK };\n}\n\nexport function buttonClick(data: any): ButtonClick {\n    return { type: constants.BUTTON_CLICK, payload: data };\n}\n\nexport function fetchSuccess(data: any): FetchSuccess {\n    return { type: constants.RECEIVED_RECORD, payload: data };\n}\n\nexport function increaseSuccess(): IncreaseSuccess {\n    return { type: constants.INCREASE_RECORD };\n}\n\nexport function closeDialog(): CloseDialog {\n    return { type: constants.CLOSE_DIALOG_CLICK };\n}\n\nexport function openDialog(): OpenDialog {\n    return { type: constants.OPEN_DIALOG_CLICK };\n}\n\nexport function closeFormula(): CloseFormula {\n    return { type: constants.CLOSE_FORMULA_CLICK };\n}\n\nexport function openFormula(): OpenFormula {\n    return { type: constants.OPEN_FORMULA_CLICK };\n}\n","export const formula = '';\n\nexport const description = `Given an input string and a dictionary of words, \nfind out if the input string can be segmented \ninto a space-separated sequence of dictionary \nwords.`;\n\nexport const alUsecases = '';\nexport const example = '';\n","const initTable = (sentence: string): boolean[][] => {\n    const length = sentence.length;\n    return Array(length).fill(false).map(() => Array(length).fill(false));\n};\n\nconst createDPTable = (sentence: string, dictionary: string[]): boolean[][] => {\n    const table = initTable(sentence);\n    for (let len = 1; len <= sentence.length; len++) {\n        for (let start = 0, end = start + len - 1; end < sentence.length; start++ , end++) {\n            const sub = sentence.substring(start, end + 1);\n            if (dictionary.includes(sub)) {\n                table[start][end] = true;\n                continue;\n            }\n            for (let i = start; i < end; i++) {\n                if (table[start][i] && table[i + 1][end]) {\n                    table[start][end] = true;\n                    break;\n                }\n            }\n        }\n    }\n    return table;\n};\n\nexport default createDPTable;\n","import createDPTable from './algorithm';\nimport { Point } from '../../store/BasicState';\nimport { helperStyle, helperStyleSecondary } from '../../pages/withRoot';\n\nconst startPoint: Point = {\n    row: 2,\n    col: 2,\n};\n\ninterface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (sentence: string, dictionary: string[]): TableSize => {\n    const rows = sentence.length + 2;\n    const cols = sentence.length + 2;\n    return { rows, cols };\n};\n\nconst createTableMatrix = (sentence: string, dictionary: string[]): (boolean | string)[][] => {\n    const { rows, cols } = getTableSize(sentence, dictionary);\n\n    const table = new Array(rows).fill('').map(() => new Array(cols).fill(''));\n\n    for (let col = 2; col < cols; col++) {\n        table[0][col] = sentence.charAt(col - 2);\n        table[1][col] = col - 1;\n    }\n\n    for (let row = 2; row < rows; row++) {\n        table[row][0] = sentence.charAt(row - 2);\n        table[row][1] = row - 1;\n    }\n\n    table[1][1] = 0;\n    table[startPoint.row][startPoint.col] = '?';\n    return table;\n};\n\nconst createComparedTable = (sentence: string, dictionary: string[]): (boolean | string)[][] => {\n    const { rows, cols } = getTableSize(sentence, dictionary);\n\n    const dpTable = createDPTable(sentence, dictionary);\n    const tableMatrix = createTableMatrix(sentence, dictionary);\n\n    for (let row = 2; row < rows; row++) {\n        for (let col = 2; col < cols; col++) {\n            tableMatrix[row][col] = dpTable[row - 2][col - 2];\n        }\n    }\n    return tableMatrix;\n};\n\nconst addHelperStyles = (styles: React.CSSProperties[][], { row, col }: Point): void => {\n    for (let i = row; i <= col; i++) {\n        styles[0][i] = helperStyleSecondary;\n        styles[1][i] = helperStyle;\n\n        styles[i][0] = helperStyleSecondary;\n        styles[i][1] = helperStyle;\n    }\n};\n\nconst createTableStyles = (sentence: string, dictionary: string[]): (React.CSSProperties)[][] => {\n    const { rows, cols } = getTableSize(sentence, dictionary);\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill({}));\n    addHelperStyles(table, startPoint);\n    return table;\n};\n\nconst createButtons = (sentence: string, dictionary: string[]): boolean[] => [true, false];\n\nconst createButtonsStyles = (sentence: string, dictionary: string[]): (React.CSSProperties)[] => {\n    return createButtons(sentence, dictionary).map(() => ({ color: 'back' }));\n};\n\nexport {\n    addHelperStyles,\n    createTableMatrix,\n    createComparedTable,\n    createTableStyles,\n    createButtons,\n    createButtonsStyles,\n    startPoint,\n};\n","import { Dialog, DialogScroll, Header, BasicInfo, Difficulty, Formula } from '../BasicState';\nimport { buttonClick, refresh, openDialog, closeDialog, closeFormula, openFormula } from './actions';\nimport { description, formula, example, alUsecases } from './contents';\nimport * as helper from '../../algorithms/word-break';\nimport { State } from './state';\n\nexport const basicInfo: BasicInfo = {\n    id: 5,\n    title: 'Word Break',\n};\n\nconst codeFormula: Formula = {\n    ...basicInfo,\n    formulaOpen: false,\n    formulaCroll: DialogScroll.Paper,\n    formula: formula,\n    handleCloseFormulaClick: closeFormula,\n};\n\nconst dialog: Dialog = {\n    ...basicInfo,\n    dialogOpen: false,\n    dialogCroll: DialogScroll.Paper,\n    description: description,\n    example: example,\n    alUsecases: alUsecases,\n    handleCloseDialogClick: closeDialog,\n};\n\nconst header: Header = {\n    ...basicInfo,\n    success: false,\n    loading: false,\n    steps: 0,\n    errors: 0,\n    startTime: 0,\n    finishTime: 0,\n    difficulty: Difficulty.Easy,\n    handleRefreshClick: refresh,\n    handleOpenDialogClick: openDialog,\n    handleOpenFormulaClick: openFormula,\n};\n\nconst arrayShuffle = (array: Array<any>): Array<any> => {\n    for (let i = array.length - 1; i > 0; i -= 1) {\n        const j = Math.floor(Math.random() * (i + 1));\n        swap(array, i, j);\n    }\n    return array;\n};\n\nconst swap = (array: Array<any>, i: number, j: number) => {\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n};\n\nconst stringShuffle = (str: string): string => arrayShuffle(str.split('')).join('');\n\nconst input = 'iamace';\nconst dictionary = ['i', 'a', 'am', 'ace', 'me'];\n\nexport const create = () => {\n    const sentence = stringShuffle(input);\n    return ({\n        ...header,\n        ...dialog,\n        ...codeFormula,\n        currentPoint: helper.startPoint,\n        comparedTable: helper.createComparedTable(sentence, dictionary),\n        table: helper.createTableMatrix(sentence, dictionary),\n        tableStyles: helper.createTableStyles(sentence, dictionary),\n        buttons: helper.createButtons(sentence, dictionary),\n        buttonsStyles: helper.createButtonsStyles(sentence, dictionary),\n        handleButtonClick: buttonClick,\n        length: 1,\n        dictionary,\n    });\n};\n\nexport const state: State = create();\n","export const OPEN_DIALOG_CLICK = '@@MAXIMUM_SUBARRAY_PROBLEM/OPEN_DIALOG_CLICK';\nexport type OPEN_DIALOG_CLICK = typeof OPEN_DIALOG_CLICK;\n\nexport const CLOSE_DIALOG_CLICK = '@@MAXIMUM_SUBARRAY_PROBLEM/CLOSE_DIALOG_CLICK';\nexport type CLOSE_DIALOG_CLICK = typeof CLOSE_DIALOG_CLICK;\n\nexport const OPEN_FORMULA_CLICK = '@@MAXIMUM_SUBARRAY_PROBLEM/OPEN_FORMULA_CLICK';\nexport type OPEN_FORMULA_CLICK = typeof OPEN_FORMULA_CLICK;\n\nexport const CLOSE_FORMULA_CLICK = '@@MAXIMUM_SUBARRAY_PROBLEM/CLOSE_FORMULA_CLICK';\nexport type CLOSE_FORMULA_CLICK = typeof CLOSE_FORMULA_CLICK;\n\nexport const BUTTON_CLICK = '@@MAXIMUM_SUBARRAY_PROBLEM/BUTTON_CLICK';\nexport type BUTTON_CLICK = typeof BUTTON_CLICK;\n\nexport const REFRESH_CLICK = '@@MAXIMUM_SUBARRAY_PROBLEM/REFRESH_CLICK';\nexport type REFRESH_CLICK = typeof REFRESH_CLICK;\n\nexport const GET_RECORD = '@@MAXIMUM_SUBARRAY_PROBLEM/GET_SUCCESS_COUNT';\nexport type GET_RECORD = typeof GET_RECORD;\n\nexport const RECEIVED_RECORD = '@@MAXIMUM_SUBARRAY_PROBLEM/RECEIVED_SUCCESS_COUNT';\nexport type RECEIVED_RECORD = typeof RECEIVED_RECORD;\n\nexport const INCREASE_RECORD = '@@MAXIMUM_SUBARRAY_PROBLEM/INCREASE_RECORD';\nexport type INCREASE_RECORD = typeof INCREASE_RECORD;\n","import * as constants from './constants';\n\nexport interface Refresh {\n    type: constants.REFRESH_CLICK;\n}\n\nexport interface ButtonClick {\n    type: constants.BUTTON_CLICK;\n    payload: any;\n}\n\nexport interface FetchSuccess {\n    type: constants.RECEIVED_RECORD;\n    payload: any;\n}\n\nexport interface IncreaseSuccess {\n    type: constants.INCREASE_RECORD;\n}\n\nexport interface CloseDialog {\n    type: constants.CLOSE_DIALOG_CLICK;\n}\n\nexport interface OpenDialog {\n    type: constants.OPEN_DIALOG_CLICK;\n}\n\nexport interface CloseFormula {\n    type: constants.CLOSE_FORMULA_CLICK;\n}\n\nexport interface OpenFormula {\n    type: constants.OPEN_FORMULA_CLICK;\n}\n\nexport type Action = Refresh | ButtonClick | FetchSuccess | IncreaseSuccess |\n    CloseDialog | OpenDialog | CloseFormula | OpenFormula;\n\nexport function refresh(): Refresh {\n    return { type: constants.REFRESH_CLICK };\n}\n\nexport function buttonClick(data: any): ButtonClick {\n    return { type: constants.BUTTON_CLICK, payload: data };\n}\n\nexport function fetchSuccess(data: any): FetchSuccess {\n    return { type: constants.RECEIVED_RECORD, payload: data };\n}\n\nexport function increaseSuccess(): IncreaseSuccess {\n    return { type: constants.INCREASE_RECORD };\n}\n\nexport function closeDialog(): CloseDialog {\n    return { type: constants.CLOSE_DIALOG_CLICK };\n}\n\nexport function openDialog(): OpenDialog {\n    return { type: constants.OPEN_DIALOG_CLICK };\n}\n\nexport function closeFormula(): CloseFormula {\n    return { type: constants.CLOSE_FORMULA_CLICK };\n}\n\nexport function openFormula(): OpenFormula {\n    return { type: constants.OPEN_FORMULA_CLICK };\n}\n","export const formula = `def kadane(A):\n  max_current = max_global = A[0]\n  for val in A[1:]:\n    max_current = max(val, val + max_current)\n    max_global = max(max_current, max_global)\n  return max_global`;\n\nexport const description = `Finding the contiguous subarray within a \none-dimensional array of numbers which has the \nlargest sum. The list usually contains both \npositive and negative numbers. `;\n\nexport const alUsecases = '';\nexport const example = '';\n","// 这个算法稍微有点难度的地方是计算最大区间的起始位置和结束位置。\n// 首先结束位置容易计算，当每次更新最大值的时候，同时更新结束位置就行。\n// 起始位置比较麻烦：\n// 1. 首先定义一个 maybelaststart\n// 2. 每次当 current > current + currentMaxs[index - 1];\n//     maybelaststart = index;\n// 3. 每次更新最大值的时候，start = maybelaststart\n\nconst createDPTable = (array: number[]): (number | string)[][] => {\n\n    const currentMaxs: (string | number)[] = [array[0]];\n    const globalMaxs: (string | number)[] = [array[0]];\n    const starts: (string | number)[] = [0];\n    const ends: (string | number)[] = [0];\n\n    let lastStart = 0;\n    array.forEach((value, index) => {\n        value = Number(value);\n        if (index < 1) {\n            return;\n        }\n        let [currentMax, globalMax, end] = [0, 0, 0];\n        let start = starts[index - 1];\n        if (value > value + Number(currentMaxs[index - 1])) {\n            currentMax = value;\n            lastStart = index;\n        } else {\n            currentMax = value + Number(currentMaxs[index - 1]);\n        }\n        if (currentMax > globalMaxs[index - 1]) {\n            globalMax = currentMax;\n            end = index;\n            start = lastStart;\n        } else {\n            globalMax = Number(globalMaxs[index - 1]);\n            end = Number(ends[index - 1]);\n        }\n        currentMaxs.push(currentMax);\n        globalMaxs.push(globalMax);\n        ends.push(end);\n        starts.push(start);\n    });\n\n    const table: (number | string)[][] = [];\n    starts.unshift('starts');\n    ends.unshift('ends');\n    currentMaxs.unshift('current_max');\n    globalMaxs.unshift('global_max');\n\n    table.push(starts);\n    table.push(ends);\n    table.push(currentMaxs);\n    table.push(globalMaxs);\n    return table;\n};\n\nexport default createDPTable;\n","import createDPTable from './algorithm';\nimport { Point } from '../../store/BasicState';\n// import { helperStyle } from '../../pages/withRoot';\n\nconst startPoint: Point = { row: 2, col: 1 };\n\ninterface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (array: number[]): TableSize => {\n    const rows = 4;\n    const cols = array.length + 1;\n    return { rows, cols };\n};\n\nconst createTableMatrix = (array: number[]): (number | string)[][] => {\n    const { rows, cols } = getTableSize(array);\n\n    const table = new Array(rows).fill('').map(() => new Array(cols).fill(''));\n    table[0][0] = 'INDEX';\n    table[1][0] = 'VALUE';\n    table[2][0] = 'CUR_MAX';\n    table[3][0] = 'GLO_MAX';\n\n    for (let col = 1; col < cols; col++) {\n        table[0][col] = col - 1;\n        table[1][col] = array[col - 1];\n    }\n\n    table[startPoint.row][startPoint.col] = '?';\n    return table;\n};\n\nconst createComparedTable = (array: number[]): (number | string)[][] => createDPTable(array);\n\nconst addHelperStyles = (styles: React.CSSProperties[][], point: Point, table: (string | number)[][]): void => {\n    // TODO\n};\n\nconst createTableStyles = (array: number[]): (React.CSSProperties)[][] => {\n    const { rows, cols } = getTableSize(array);\n    const compareTable = createComparedTable(array);\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill({}));\n    addHelperStyles(table, startPoint, compareTable);\n    return table;\n};\n\nconst createButtons = (array: number[]): number[] => {\n    const set = new Set<number>();\n    const dpTable = createDPTable(array);\n    for (let col = 0; col < array.length; col++) {\n        const currentMax = Number(dpTable[2][col + 1]);\n        const globalMax = Number(dpTable[3][col + 1]);\n        set.add(currentMax);\n        set.add(globalMax);\n    }\n    return Array.from(set).sort(((a, b) => a - b));\n};\n\nconst createButtonsStyles = (array: number[]): (React.CSSProperties)[] => {\n    return createButtons(array).map(() => ({ color: 'back' }));\n};\n\nexport {\n    addHelperStyles,\n    createTableMatrix,\n    createComparedTable,\n    createTableStyles,\n    createButtons,\n    createButtonsStyles,\n    startPoint,\n};\n","import { Dialog, DialogScroll, Header, BasicInfo, State, Difficulty, Formula } from '../BasicState';\nimport { buttonClick, refresh, openDialog, closeDialog, closeFormula, openFormula } from './actions';\nimport { description, formula, example, alUsecases } from './contents';\nimport * as helper from '../../algorithms/maximum-subarray-problem';\n\nexport const basicInfo: BasicInfo = {\n    id: 10,\n    title: `Maximum Subarray (Kadane's algorithm)`,\n};\n\nconst codeFormula: Formula = {\n    ...basicInfo,\n    formulaOpen: false,\n    formulaCroll: DialogScroll.Paper,\n    formula: formula,\n    handleCloseFormulaClick: closeFormula,\n};\n\nconst dialog: Dialog = {\n    ...basicInfo,\n    dialogOpen: false,\n    dialogCroll: DialogScroll.Paper,\n    description: description,\n    example: example,\n    alUsecases: alUsecases,\n    handleCloseDialogClick: closeDialog,\n};\n\nconst header: Header = {\n    ...basicInfo,\n    success: false,\n    loading: false,\n    steps: 0,\n    errors: 0,\n    startTime: 0,\n    finishTime: 0,\n    difficulty: Difficulty.Easy,\n    handleRefreshClick: refresh,\n    handleOpenDialogClick: openDialog,\n    handleOpenFormulaClick: openFormula,\n};\n\nconst maxNumber = 15;\nconst size = 7;\nconst random = (max: number) => Math.floor(Math.random() * max) + 1;\nconst randomInt = (max: number) => random(2) === 1 ? random(max) : 0 - random(max);\n\nexport const create = () => {\n    const data = Array(size).fill(maxNumber).map(randomInt);\n    return ({\n        ...header,\n        ...dialog,\n        ...codeFormula,\n        currentPoint: helper.startPoint,\n        comparedTable: helper.createComparedTable(data),\n        table: helper.createTableMatrix(data),\n        tableStyles: helper.createTableStyles(data),\n        buttons: helper.createButtons(data),\n        buttonsStyles: helper.createButtonsStyles(data),\n        handleButtonClick: buttonClick,\n    });\n};\n\nexport const state: State = create();\n","export const OPEN_DIALOG_CLICK = '@@EGG_DROPPING_PROBLEM/OPEN_DIALOG_CLICK';\nexport type OPEN_DIALOG_CLICK = typeof OPEN_DIALOG_CLICK;\n\nexport const CLOSE_DIALOG_CLICK = '@@EGG_DROPPING_PROBLEM/CLOSE_DIALOG_CLICK';\nexport type CLOSE_DIALOG_CLICK = typeof CLOSE_DIALOG_CLICK;\n\nexport const OPEN_FORMULA_CLICK = '@@EGG_DROPPING_PROBLEM/OPEN_FORMULA_CLICK';\nexport type OPEN_FORMULA_CLICK = typeof OPEN_FORMULA_CLICK;\n\nexport const CLOSE_FORMULA_CLICK = '@@EGG_DROPPING_PROBLEM/CLOSE_FORMULA_CLICK';\nexport type CLOSE_FORMULA_CLICK = typeof CLOSE_FORMULA_CLICK;\n\nexport const BUTTON_CLICK = '@@EGG_DROPPING_PROBLEM/BUTTON_CLICK';\nexport type BUTTON_CLICK = typeof BUTTON_CLICK;\n\nexport const REFRESH_CLICK = '@@EGG_DROPPING_PROBLEM/REFRESH_CLICK';\nexport type REFRESH_CLICK = typeof REFRESH_CLICK;\n\nexport const GET_RECORD = '@@EGG_DROPPING_PROBLEM/GET_SUCCESS_COUNT';\nexport type GET_RECORD = typeof GET_RECORD;\n\nexport const RECEIVED_RECORD = '@@EGG_DROPPING_PROBLEM/RECEIVED_SUCCESS_COUNT';\nexport type RECEIVED_RECORD = typeof RECEIVED_RECORD;\n\nexport const INCREASE_RECORD = '@@EGG_DROPPING_PROBLEM/INCREASE_RECORD';\nexport type INCREASE_RECORD = typeof INCREASE_RECORD;\n","import * as constants from './constants';\n\nexport interface Refresh {\n    type: constants.REFRESH_CLICK;\n}\n\nexport interface ButtonClick {\n    type: constants.BUTTON_CLICK;\n    payload: any;\n}\n\nexport interface FetchSuccess {\n    type: constants.RECEIVED_RECORD;\n    payload: any;\n}\n\nexport interface IncreaseSuccess {\n    type: constants.INCREASE_RECORD;\n}\n\nexport interface CloseDialog {\n    type: constants.CLOSE_DIALOG_CLICK;\n}\n\nexport interface OpenDialog {\n    type: constants.OPEN_DIALOG_CLICK;\n}\n\nexport interface CloseFormula {\n    type: constants.CLOSE_FORMULA_CLICK;\n}\n\nexport interface OpenFormula {\n    type: constants.OPEN_FORMULA_CLICK;\n}\n\nexport type Action = Refresh | ButtonClick | FetchSuccess | IncreaseSuccess |\n    CloseDialog | OpenDialog | CloseFormula | OpenFormula;\n\nexport function refresh(): Refresh {\n    return { type: constants.REFRESH_CLICK };\n}\n\nexport function buttonClick(data: any): ButtonClick {\n    return { type: constants.BUTTON_CLICK, payload: data };\n}\n\nexport function fetchSuccess(data: any): FetchSuccess {\n    return { type: constants.RECEIVED_RECORD, payload: data };\n}\n\nexport function increaseSuccess(): IncreaseSuccess {\n    return { type: constants.INCREASE_RECORD };\n}\n\nexport function closeDialog(): CloseDialog {\n    return { type: constants.CLOSE_DIALOG_CLICK };\n}\n\nexport function openDialog(): OpenDialog {\n    return { type: constants.OPEN_DIALOG_CLICK };\n}\n\nexport function closeFormula(): CloseFormula {\n    return { type: constants.CLOSE_FORMULA_CLICK };\n}\n\nexport function openFormula(): OpenFormula {\n    return { type: constants.OPEN_FORMULA_CLICK };\n}\n","export const formula = `if (row + 1 > col) {\n    table[row][col] = table[row - 1][col];\n} else {\n    let min = floors;\n    for (let f = 1; f <= col; f += 1) {\n        const max = Math.max(\n            table[row - 1][f - 1],\n            table[row][col - f]\n        );\n        min = Math.min(min, max);\n    }\n    table[row][col] = 1 + min;\n}`;\n\nexport const description = `Objec­tive: There are n number of eggs and building \nwhich has k floors. Write an algorithm to find \nthe minimum number of drops is required to know \nthe floor from which if egg is dropped, it will \nbreak.\n\nNotes:\nOne trial is – dropping an egg once from the particular floor.\n\nIf egg does not break after dropping, will be \nused again.\n\nIf egg breaks when dropped from some floor then \nit will break if dropped from any higher floor.\n\nIf egg does not break when dropped from some floor \nthen it will not break if dropped from any lower floor\n`;\n\nexport const alUsecases = '';\nexport const example = '';\n","const initTable = (eggs: number, floors: number) => {\n    const table = [];\n    table.push(Array.from(Array(floors + 1).keys()));\n    for (let row = 1; row < eggs; row += 1) {\n        table.push(Array(floors + 1).fill(0));\n    }\n    return table;\n};\n\nconst createDPTable = (eggs: number, floors: number): number[][] => {\n    const table = initTable(eggs, floors);\n    for (let row = 1; row < table.length; row += 1) {\n        for (let col = 1; col < table[row].length; col += 1) {\n            if (row + 1 > col) {\n                table[row][col] = table[row - 1][col];\n            } else {\n                let min = floors;\n                for (let f = 1; f <= col; f += 1) {\n                    const max = Math.max(table[row - 1][f - 1], table[row][col - f]);\n                    min = Math.min(min, max);\n                }\n                table[row][col] = 1 + min;\n            }\n        }\n    }\n    return table;\n};\n\nexport default createDPTable;\n","import createDPTable from './algorithm';\nimport { Point } from '../../store/BasicState';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst startPoint: Point = { row: 2, col: 2 };\n\ninterface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (eggs: number, floors: number): TableSize => {\n    const rows = eggs + 1;\n    const cols = floors + 2;\n    return { rows, cols };\n};\n\nconst createTableMatrix = (eggs: number, floors: number): (number | string)[][] => {\n    const { rows, cols } = getTableSize(eggs, floors);\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill(''));\n    table[0][0] = 'EG\\\\FL';\n    for (let col = 1; col < cols; col++) {\n        table[0][col] = col - 1;\n        table[1][col] = col - 1;\n    }\n    for (let row = 1; row < rows; row++) {\n        table[row][0] = row;\n        table[row][1] = 0;\n    }\n    return table;\n};\n\nconst createComparedTable = (eggs: number, floors: number): (number | string)[][] => {\n    const { rows, cols } = getTableSize(eggs, floors);\n\n    const dpTable = createDPTable(eggs, floors);\n    const tableMatrix = createTableMatrix(eggs, floors);\n\n    for (let row = 1; row < rows; row++) {\n        for (let col = 1; col < cols; col++) {\n            tableMatrix[row][col] = dpTable[row - 1][col - 1];\n        }\n    }\n    return tableMatrix;\n};\n\nconst addHelperStyles = (styles: React.CSSProperties[][], point: Point): void => {\n    styles[point.row][point.col] = helperStyle;\n};\n\nconst createTableStyles = (eggs: number, floors: number): (React.CSSProperties)[][] => {\n    const { rows, cols } = getTableSize(eggs, floors);\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill({}));\n    addHelperStyles(table, startPoint);\n    return table;\n};\n\nconst createButtons = (eggs: number, floors: number): number[] => {\n    const dpTable = createDPTable(eggs, floors);\n    const set = new Set<number>();\n    for (let row = 1; row < dpTable.length; row++) {\n        for (let col = 1; col < dpTable[row].length; col++) {\n            set.add(dpTable[row][col]);\n        }\n    }\n    return Array.from(set).sort();\n};\n\nconst createButtonsStyles = (eggs: number, floors: number): (React.CSSProperties)[] => {\n    return createButtons(eggs, floors).map(() => ({ color: 'back' }));\n};\n\nexport {\n    addHelperStyles,\n    createTableMatrix,\n    createComparedTable,\n    createTableStyles,\n    createButtons,\n    createButtonsStyles,\n    startPoint,\n};\n","import { Dialog, DialogScroll, Header, BasicInfo, State, Difficulty, Formula } from '../BasicState';\nimport { buttonClick, refresh, openDialog, closeDialog, closeFormula, openFormula } from './actions';\nimport { description, formula, example, alUsecases } from './contents';\nimport * as helper from '../../algorithms/egg-dropping-problem';\n\nexport const basicInfo: BasicInfo = {\n    id: 20,\n    title: 'Egg Dropping Problem',\n};\n\nconst codeFormula: Formula = {\n    ...basicInfo,\n    formulaOpen: false,\n    formulaCroll: DialogScroll.Paper,\n    formula: formula,\n    handleCloseFormulaClick: closeFormula,\n};\n\nconst dialog: Dialog = {\n    ...basicInfo,\n    dialogOpen: false,\n    dialogCroll: DialogScroll.Paper,\n    description: description,\n    example: example,\n    alUsecases: alUsecases,\n    handleCloseDialogClick: closeDialog,\n};\n\nconst header: Header = {\n    ...basicInfo,\n    success: false,\n    loading: false,\n    steps: 0,\n    errors: 0,\n    startTime: 0,\n    finishTime: 0,\n    difficulty: Difficulty.Easy,\n    handleRefreshClick: refresh,\n    handleOpenDialogClick: openDialog,\n    handleOpenFormulaClick: openFormula,\n};\n\nconst eggs = 3;\nconst size = 7;\n\nexport const create = () => {\n    return ({\n        ...header,\n        ...dialog,\n        ...codeFormula,\n        currentPoint: helper.startPoint,\n        comparedTable: helper.createComparedTable(eggs, size),\n        table: helper.createTableMatrix(eggs, size),\n        tableStyles: helper.createTableStyles(eggs, size),\n        buttons: helper.createButtons(eggs, size),\n        buttonsStyles: helper.createButtonsStyles(eggs, size),\n        handleButtonClick: buttonClick,\n    });\n};\n\nexport const state: State = create();\n","export const OPEN_DIALOG_CLICK = '@@LONGEST_PALINDROMIC_SUBSTRING/OPEN_DIALOG_CLICK';\nexport type OPEN_DIALOG_CLICK = typeof OPEN_DIALOG_CLICK;\n\nexport const CLOSE_DIALOG_CLICK = '@@LONGEST_PALINDROMIC_SUBSTRING/CLOSE_DIALOG_CLICK';\nexport type CLOSE_DIALOG_CLICK = typeof CLOSE_DIALOG_CLICK;\n\nexport const OPEN_FORMULA_CLICK = '@@LONGEST_PALINDROMIC_SUBSTRING/OPEN_FORMULA_CLICK';\nexport type OPEN_FORMULA_CLICK = typeof OPEN_FORMULA_CLICK;\n\nexport const CLOSE_FORMULA_CLICK = '@@LONGEST_PALINDROMIC_SUBSTRING/CLOSE_FORMULA_CLICK';\nexport type CLOSE_FORMULA_CLICK = typeof CLOSE_FORMULA_CLICK;\n\nexport const BUTTON_CLICK = '@@LONGEST_PALINDROMIC_SUBSTRING/BUTTON_CLICK';\nexport type BUTTON_CLICK = typeof BUTTON_CLICK;\n\nexport const REFRESH_CLICK = '@@LONGEST_PALINDROMIC_SUBSTRING/REFRESH_CLICK';\nexport type REFRESH_CLICK = typeof REFRESH_CLICK;\n\nexport const GET_RECORD = '@@LONGEST_PALINDROMIC_SUBSTRING/GET_SUCCESS_COUNT';\nexport type GET_RECORD = typeof GET_RECORD;\n\nexport const RECEIVED_RECORD = '@@LONGEST_PALINDROMIC_SUBSTRING/RECEIVED_SUCCESS_COUNT';\nexport type RECEIVED_RECORD = typeof RECEIVED_RECORD;\n\nexport const INCREASE_RECORD = '@@LONGEST_PALINDROMIC_SUBSTRING/INCREASE_RECORD';\nexport type INCREASE_RECORD = typeof INCREASE_RECORD;\n","import * as constants from './constants';\n\nexport interface Refresh {\n    type: constants.REFRESH_CLICK;\n}\n\nexport interface ButtonClick {\n    type: constants.BUTTON_CLICK;\n    payload: any;\n}\n\nexport interface FetchSuccess {\n    type: constants.RECEIVED_RECORD;\n    payload: any;\n}\n\nexport interface IncreaseSuccess {\n    type: constants.INCREASE_RECORD;\n}\n\nexport interface CloseDialog {\n    type: constants.CLOSE_DIALOG_CLICK;\n}\n\nexport interface OpenDialog {\n    type: constants.OPEN_DIALOG_CLICK;\n}\n\nexport interface CloseFormula {\n    type: constants.CLOSE_FORMULA_CLICK;\n}\n\nexport interface OpenFormula {\n    type: constants.OPEN_FORMULA_CLICK;\n}\n\nexport type Action = Refresh | ButtonClick | FetchSuccess | IncreaseSuccess |\n    CloseDialog | OpenDialog | CloseFormula | OpenFormula;\n\nexport function refresh(): Refresh {\n    return { type: constants.REFRESH_CLICK };\n}\n\nexport function buttonClick(data: any): ButtonClick {\n    return { type: constants.BUTTON_CLICK, payload: data };\n}\n\nexport function fetchSuccess(data: any): FetchSuccess {\n    return { type: constants.RECEIVED_RECORD, payload: data };\n}\n\nexport function increaseSuccess(): IncreaseSuccess {\n    return { type: constants.INCREASE_RECORD };\n}\n\nexport function closeDialog(): CloseDialog {\n    return { type: constants.CLOSE_DIALOG_CLICK };\n}\n\nexport function openDialog(): OpenDialog {\n    return { type: constants.OPEN_DIALOG_CLICK };\n}\n\nexport function closeFormula(): CloseFormula {\n    return { type: constants.CLOSE_FORMULA_CLICK };\n}\n\nexport function openFormula(): OpenFormula {\n    return { type: constants.OPEN_FORMULA_CLICK };\n}\n","export const formula = `// length === 1;\nfor (let i = 0; i < table.length; i++) {\n  table[i][i] = true;\n}\n\n// length === 2;\nfor (let i = 0; i < table.length - 1; i++) {\n  if (sequence.charAt(i) === sequence.charAt(i + 1)) {\n    table[i][i + 1] = true;\n  } else {\n    table[i][i + 1] = false;\n  }\n}\n\n// length > 2;\nfor (let len = 3; len <= table.length; len++) {\n  for (let i = 0; i + len <= table.length; i++) {\n    const front = sequence.charAt(i);\n    const end = sequence.charAt(i + len - 1);\n    if (front === end) {\n      table[i][i + len - 1] = table[i + 1][i + len - 2];\n    } else {\n      table[i][i + len - 1] = false;\n    }\n  }\n}`;\n\nexport const description = `Given a string, find the length of longest \npalindromic substring.`;\n\nexport const alUsecases = '';\n\nexport const example = `Input: \"dbcdcd\"\nOutput: 3\nNote: \"cdc\", \"dcd\" with length 3`;\n","interface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (sequence: string): TableSize => {\n    const rows = sequence.length;\n    const cols = sequence.length;\n    return { rows, cols };\n};\n\nconst createMarksTable = (sequence: string, truthTable: boolean[][]): number[][] => {\n    const { rows, cols } = getTableSize(sequence);\n    const table = Array(rows).fill(1).map(() => Array(cols).fill(1));\n\n    let max = 1;\n    for (let i = 0; i < table.length - 1; i += 1) {\n        if (sequence.charAt(i) === sequence.charAt(i + 1)) {\n            max = 2;\n        }\n        table[i][i + 1] = max;\n    }\n    for (let len = 3; len <= table.length; len += 1) {\n        for (let i = 0; i + len <= table.length; i += 1) {\n            const front = sequence.charAt(i);\n            const end = sequence.charAt(i + len - 1);\n            if (front === end && truthTable[i][i + len - 1]) {\n                max = Math.max(max, 2 + table[i + 1][i + len - 2]);\n            }\n            table[i][i + len - 1] = max;\n        }\n    }\n    return table;\n};\n\nconst createDPTable = (sequence: string): boolean[][] => {\n    const { rows, cols } = getTableSize(sequence);\n\n    const table = Array(rows).fill(false).map(() => Array(cols).fill(false));\n\n    for (let i = 0; i < table.length; i++) {\n        table[i][i] = true;\n    }\n\n    for (let i = 0; i < table.length - 1; i++) {\n        if (sequence.charAt(i) === sequence.charAt(i + 1)) {\n            table[i][i + 1] = true;\n        } else {\n            table[i][i + 1] = false;\n        }\n    }\n\n    for (let len = 3; len <= table.length; len++) {\n        for (let i = 0; i + len <= table.length; i++) {\n            const front = sequence.charAt(i);\n            const end = sequence.charAt(i + len - 1);\n            if (front === end) {\n                table[i][i + len - 1] = table[i + 1][i + len - 2];\n            } else {\n                table[i][i + len - 1] = false;\n            }\n        }\n    }\n\n    return table;\n};\n\nexport { createDPTable, createMarksTable };\n","import { createDPTable, createMarksTable } from './algorithm';\nimport { Point } from '../../store/BasicState';\nimport { helperStyle, helperStyleSecondary, helperStyleThird } from '../../pages/withRoot';\n\nconst startPoint: Point = {\n    row: 2,\n    col: 2,\n};\n\ninterface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (sequence: string): TableSize => {\n    const rows = sequence.length + 2;\n    const cols = sequence.length + 2;\n    return { rows, cols };\n};\n\nconst createTableMatrix = (sequence: string): (boolean | string)[][] => {\n    const { rows, cols } = getTableSize(sequence);\n\n    const table = new Array(rows).fill('').map(() => new Array(cols).fill(''));\n\n    for (let col = 2; col < cols; col++) {\n        table[0][col] = col - 2;\n        table[1][col] = sequence.charAt(col - 2);\n    }\n\n    for (let row = 2; row < rows; row++) {\n        table[row][0] = row - 2;\n        table[row][1] = sequence.charAt(row - 2);\n    }\n\n    table[0][0] = '1';\n    table[startPoint.row][startPoint.col] = '?';\n    return table;\n};\n\nconst createComparedMarksTable = (sequence: string): number[][] => {\n    const dpTable = createDPTable(sequence);\n    const marksTable = createMarksTable(sequence, dpTable);\n    const { rows, cols } = getTableSize(sequence);\n    const table: number[][] = Array(rows).fill(1).map(() => Array(cols).fill(1));\n    for (let row = 2; row < rows; row++) {\n        for (let col = 2; col < cols; col++) {\n            table[row][col] = marksTable[row - 2][col - 2];\n        }\n    }\n    return table;\n};\n\nconst createComparedTable = (sequence: string): (boolean | string)[][] => {\n    const { rows, cols } = getTableSize(sequence);\n\n    const dpTable = createDPTable(sequence);\n    const tableMatrix = createTableMatrix(sequence);\n\n    for (let row = 2; row < rows; row++) {\n        for (let col = 2; col < cols; col++) {\n            tableMatrix[row][col] = dpTable[row - 2][col - 2];\n        }\n    }\n\n    return tableMatrix;\n};\n\nconst addHelperStyles = (\n    styles: React.CSSProperties[][],\n    { row, col }: Point,\n    nextLength: number,\n    table: (string | boolean)[][]\n): void => {\n    for (let i = row; i <= col; i++) {\n        styles[0][i] = helperStyleSecondary;\n        styles[1][i] = helperStyle;\n\n        styles[i][0] = helperStyleSecondary;\n        styles[i][1] = helperStyle;\n    }\n\n    styles[0][0] = helperStyle;\n\n    if (nextLength > 2 && table[1][row] === table[1][row + nextLength - 1]) {\n        styles[1][col] = helperStyleThird;\n        styles[1][row] = helperStyleThird;\n\n        styles[row + 1][row + nextLength - 2] = helperStyleThird;\n    }\n\n    if (nextLength === 2 && table[1][row] === table[1][row + nextLength - 1]) {\n        styles[1][col] = helperStyleThird;\n        styles[1][row] = helperStyleThird;\n\n        styles[col][1] = helperStyleThird;\n        styles[row][1] = helperStyleThird;\n    }\n};\n\nconst createTableStyles = (sequence: string): (React.CSSProperties)[][] => {\n    const { rows, cols } = getTableSize(sequence);\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill({}));\n    addHelperStyles(table, startPoint, 1, []);\n    return table;\n};\n\nconst createButtons = (): boolean[] => [true, false];\n\nconst createButtonsStyles = (): (React.CSSProperties)[] => createButtons().map(() => ({ color: 'back' }));\n\nexport {\n    addHelperStyles,\n    createTableMatrix,\n    createComparedTable,\n    createTableStyles,\n    createButtons,\n    createButtonsStyles,\n    startPoint,\n    createComparedMarksTable,\n};\n","import { Dialog, DialogScroll, Header, BasicInfo, Difficulty, Formula } from '../BasicState';\nimport { buttonClick, refresh, openDialog, closeDialog, closeFormula, openFormula } from './actions';\nimport { description, formula, example, alUsecases } from './contents';\nimport * as helper from '../../algorithms/longest-palindromic-substring';\nimport { State } from './state';\n\nexport const basicInfo: BasicInfo = {\n    id: 12,\n    title: 'Longest Palindromic Substring',\n};\n\nconst codeFormula: Formula = {\n    ...basicInfo,\n    formulaOpen: false,\n    formulaCroll: DialogScroll.Paper,\n    formula: formula,\n    handleCloseFormulaClick: closeFormula,\n};\n\nconst dialog: Dialog = {\n    ...basicInfo,\n    dialogOpen: false,\n    dialogCroll: DialogScroll.Paper,\n    description: description,\n    example: example,\n    alUsecases: alUsecases,\n    handleCloseDialogClick: closeDialog,\n};\n\nconst header: Header = {\n    ...basicInfo,\n    success: false,\n    loading: false,\n    steps: 0,\n    errors: 0,\n    startTime: 0,\n    finishTime: 0,\n    difficulty: Difficulty.Easy,\n    handleRefreshClick: refresh,\n    handleOpenDialogClick: openDialog,\n    handleOpenFormulaClick: openFormula,\n};\n\nconst size = 6;\nconst random = (sequence: string): string => {\n    const index = Math.floor(Math.random() * sequence.length);\n    return sequence.charAt(index);\n};\n\nexport const create = () => {\n    const sequence = 'abcd';\n    const input = Array(size).fill(sequence).map(random).join('');\n\n    return ({\n        ...header,\n        ...dialog,\n        ...codeFormula,\n        currentPoint: helper.startPoint,\n        comparedTable: helper.createComparedTable(input),\n        table: helper.createTableMatrix(input),\n        tableStyles: helper.createTableStyles(input),\n        buttons: helper.createButtons(),\n        buttonsStyles: helper.createButtonsStyles(),\n        handleButtonClick: buttonClick,\n        length: 1,\n        marksTable: helper.createComparedMarksTable(input),\n    });\n};\n\nexport const state: State = create();\n","export const OPEN_DIALOG_CLICK = '@@LONGEST_PALINDROMIC_SUBSEQUENCE/OPEN_DIALOG_CLICK';\nexport type OPEN_DIALOG_CLICK = typeof OPEN_DIALOG_CLICK;\n\nexport const CLOSE_DIALOG_CLICK = '@@LONGEST_PALINDROMIC_SUBSEQUENCE/CLOSE_DIALOG_CLICK';\nexport type CLOSE_DIALOG_CLICK = typeof CLOSE_DIALOG_CLICK;\n\nexport const OPEN_FORMULA_CLICK = '@@LONGEST_PALINDROMIC_SUBSEQUENCE/OPEN_FORMULA_CLICK';\nexport type OPEN_FORMULA_CLICK = typeof OPEN_FORMULA_CLICK;\n\nexport const CLOSE_FORMULA_CLICK = '@@LONGEST_PALINDROMIC_SUBSEQUENCE/CLOSE_FORMULA_CLICK';\nexport type CLOSE_FORMULA_CLICK = typeof CLOSE_FORMULA_CLICK;\n\nexport const BUTTON_CLICK = '@@LONGEST_PALINDROMIC_SUBSEQUENCE/BUTTON_CLICK';\nexport type BUTTON_CLICK = typeof BUTTON_CLICK;\n\nexport const REFRESH_CLICK = '@@LONGEST_PALINDROMIC_SUBSEQUENCE/REFRESH_CLICK';\nexport type REFRESH_CLICK = typeof REFRESH_CLICK;\n\nexport const GET_RECORD = '@@LONGEST_PALINDROMIC_SUBSEQUENCE/GET_SUCCESS_COUNT';\nexport type GET_RECORD = typeof GET_RECORD;\n\nexport const RECEIVED_RECORD = '@@LONGEST_PALINDROMIC_SUBSEQUENCE/RECEIVED_SUCCESS_COUNT';\nexport type RECEIVED_RECORD = typeof RECEIVED_RECORD;\n\nexport const INCREASE_RECORD = '@@LONGEST_PALINDROMIC_SUBSEQUENCE/INCREASE_RECORD';\nexport type INCREASE_RECORD = typeof INCREASE_RECORD;\n","import * as constants from './constants';\n\nexport interface Refresh {\n    type: constants.REFRESH_CLICK;\n}\n\nexport interface ButtonClick {\n    type: constants.BUTTON_CLICK;\n    payload: any;\n}\n\nexport interface FetchSuccess {\n    type: constants.RECEIVED_RECORD;\n    payload: any;\n}\n\nexport interface IncreaseSuccess {\n    type: constants.INCREASE_RECORD;\n}\n\nexport interface CloseDialog {\n    type: constants.CLOSE_DIALOG_CLICK;\n}\n\nexport interface OpenDialog {\n    type: constants.OPEN_DIALOG_CLICK;\n}\n\nexport interface CloseFormula {\n    type: constants.CLOSE_FORMULA_CLICK;\n}\n\nexport interface OpenFormula {\n    type: constants.OPEN_FORMULA_CLICK;\n}\n\nexport type Action = Refresh | ButtonClick | FetchSuccess | IncreaseSuccess |\n    CloseDialog | OpenDialog | CloseFormula | OpenFormula;\n\nexport function refresh(): Refresh {\n    return { type: constants.REFRESH_CLICK };\n}\n\nexport function buttonClick(data: any): ButtonClick {\n    return { type: constants.BUTTON_CLICK, payload: data };\n}\n\nexport function fetchSuccess(data: any): FetchSuccess {\n    return { type: constants.RECEIVED_RECORD, payload: data };\n}\n\nexport function increaseSuccess(): IncreaseSuccess {\n    return { type: constants.INCREASE_RECORD };\n}\n\nexport function closeDialog(): CloseDialog {\n    return { type: constants.CLOSE_DIALOG_CLICK };\n}\n\nexport function openDialog(): OpenDialog {\n    return { type: constants.OPEN_DIALOG_CLICK };\n}\n\nexport function closeFormula(): CloseFormula {\n    return { type: constants.CLOSE_FORMULA_CLICK };\n}\n\nexport function openFormula(): OpenFormula {\n    return { type: constants.OPEN_FORMULA_CLICK };\n}\n","export const formula = `// length === 1;\nfor (let i = 0; i < table.length; i += 1) {\n  table[i][i] = 1;\n}\n\n// length === 2;\nfor (let i = 0; i < table.length - 1; i += 1) {\n  if (sequence.charAt(i) === sequence.charAt(i + 1)) {\n    table[i][i + 1] = 2;\n  } else {\n    table[i][i + 1] = 1;\n  }\n}\n\n// length > 2;\nfor (let len = 3; len <= table.length; len += 1) {\n  for (let i = 0; i + len <= table.length; i += 1) {\n    const front = sequence.charAt(i);\n    const end = sequence.charAt(i + len - 1);\n    if (front === end) {\n      table[i][i + len - 1] = 2 + table[i + 1][i + len - 2];\n    } else {\n      table[i][i + len - 1] = Math.max(\n        table[i][i + len - 2], table[i + 1][i + len - 1]);\n    }\n  }\n}`;\n\nexport const description = `Given a string find the longest palindromic subsequence's length.`;\n\nexport const alUsecases = '';\n\nexport const example = `1:\nInput: \"abbab\"\nOutput: 4 // \"abba\"\n\n2:\nInput: \"abdca\"\nOutput: 3 // \"aba\"`;\n","const createDPTable = (sequence: string): number[][] => {\n    const rows = sequence.length + 1;\n    const cols = sequence.length + 1;\n\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill(0));\n\n    // length === 1;\n    for (let i = 0; i < table.length; i += 1) {\n        table[i][i] = 1;\n    }\n\n    // length === 2;\n    for (let i = 0; i < table.length - 1; i += 1) {\n        if (sequence.charAt(i) === sequence.charAt(i + 1)) {\n            table[i][i + 1] = 2;\n        } else {\n            table[i][i + 1] = 1;\n        }\n    }\n\n    // length > 2;\n    for (let len = 3; len <= table.length; len += 1) {\n        for (let i = 0; i + len <= table.length; i += 1) {\n            const front = sequence.charAt(i);\n            const end = sequence.charAt(i + len - 1);\n            if (front === end) {\n                table[i][i + len - 1] = 2 + table[i + 1][i + len - 2];\n            } else {\n                table[i][i + len - 1] = Math.max(table[i][i + len - 2], table[i + 1][i + len - 1]);\n            }\n        }\n    }\n\n    return table;\n};\n\nexport default createDPTable;\n","import createDPTable from './algorithm';\nimport { Point } from '../../store/BasicState';\nimport { helperStyle, helperStyleSecondary, helperStyleThird } from '../../pages/withRoot';\n\nconst startPoint: Point = {\n    row: 2,\n    col: 2,\n};\n\ninterface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (sequence: string): TableSize => {\n    const rows = sequence.length + 2;\n    const cols = sequence.length + 2;\n    return { rows, cols };\n};\n\nconst createTableMatrix = (sequence: string): (number | string)[][] => {\n    const { rows, cols } = getTableSize(sequence);\n\n    const table = new Array(rows).fill('').map(() => new Array(cols).fill(''));\n\n    for (let col = 2; col < cols; col++) {\n        table[0][col] = col - 2;\n        table[1][col] = sequence.charAt(col - 2);\n    }\n\n    for (let row = 2; row < rows; row++) {\n        table[row][0] = row - 2;\n        table[row][1] = sequence.charAt(row - 2);\n    }\n\n    table[startPoint.row][startPoint.col] = '?';\n    return table;\n};\n\nconst createComparedTable = (sequence: string): (number | string)[][] => {\n    const { rows, cols } = getTableSize(sequence);\n\n    const dpTable = createDPTable(sequence);\n    const tableMatrix = createTableMatrix(sequence);\n\n    for (let row = 2; row < rows; row++) {\n        for (let col = 2; col < cols; col++) {\n            tableMatrix[row][col] = dpTable[row - 2][col - 2];\n        }\n    }\n\n    return tableMatrix;\n};\n\nconst addHelperStyles = (\n    styles: React.CSSProperties[][],\n    { row, col }: Point,\n    nextLength: number,\n    table: (string | number)[][]): void => {\n    for (let i = row; i <= col; i++) {\n        styles[0][i] = helperStyleSecondary;\n        styles[1][i] = helperStyle;\n\n        styles[i][0] = helperStyleSecondary;\n        styles[i][1] = helperStyle;\n    }\n\n    if (nextLength > 2) {\n        if (table[1][row] === table[1][row + nextLength - 1]) {\n            styles[1][col] = helperStyleThird;\n            styles[1][row] = helperStyleThird;\n\n            styles[row + 1][row + nextLength - 2] = helperStyleThird;\n        } else {\n            styles[row][row + nextLength - 2] = helperStyleThird;\n            styles[row + 1][row + nextLength - 1] = helperStyleThird;\n        }\n    }\n\n    if (nextLength === 2 && table[1][row] === table[1][row + nextLength - 1]) {\n        styles[1][col] = helperStyleThird;\n        styles[1][row] = helperStyleThird;\n\n        styles[col][1] = helperStyleThird;\n        styles[row][1] = helperStyleThird;\n    }\n};\n\nconst createTableStyles = (sequence: string): (React.CSSProperties)[][] => {\n    const { rows, cols } = getTableSize(sequence);\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill({}));\n    addHelperStyles(table, startPoint, 1, []);\n    return table;\n};\n\nconst createButtons = (sequence: string): number[] => {\n    const dpTable = createDPTable(sequence);\n    const set = new Set<number>();\n    for (let row = 0; row < dpTable.length; row++) {\n        for (let col = 0; col < dpTable[row].length; col++) {\n            set.add(dpTable[row][col]);\n        }\n    }\n    set.delete(0);\n    return Array.from(set).sort();\n};\n\nconst createButtonsStyles = (sequence: string): (React.CSSProperties)[] => {\n    return createButtons(sequence).map(() => ({ color: 'back' }));\n};\n\nexport {\n    addHelperStyles,\n    createTableMatrix,\n    createComparedTable,\n    createTableStyles,\n    createButtons,\n    createButtonsStyles,\n    startPoint,\n};\n","import { Dialog, DialogScroll, Header, BasicInfo, State, Difficulty, Formula } from '../BasicState';\nimport { buttonClick, refresh, openDialog, closeDialog, closeFormula, openFormula } from './actions';\nimport { description, formula, example, alUsecases } from './contents';\nimport * as helper from '../../algorithms/longest-palindromic-subsequence';\n\nexport const basicInfo: BasicInfo = {\n    id: 13,\n    title: 'Longest Palindromic Subsequence',\n};\n\nconst codeFormula: Formula = {\n    ...basicInfo,\n    formulaOpen: false,\n    formulaCroll: DialogScroll.Paper,\n    formula: formula,\n    handleCloseFormulaClick: closeFormula,\n};\n\nconst dialog: Dialog = {\n    ...basicInfo,\n    dialogOpen: false,\n    dialogCroll: DialogScroll.Paper,\n    description: description,\n    example: example,\n    alUsecases: alUsecases,\n    handleCloseDialogClick: closeDialog,\n};\n\nconst header: Header = {\n    ...basicInfo,\n    success: false,\n    loading: false,\n    steps: 0,\n    errors: 0,\n    startTime: 0,\n    finishTime: 0,\n    difficulty: Difficulty.Easy,\n    handleRefreshClick: refresh,\n    handleOpenDialogClick: openDialog,\n    handleOpenFormulaClick: openFormula,\n};\n\nconst size = 6;\nconst random = (sequence: string): string => {\n    const index = Math.floor(Math.random() * sequence.length);\n    return sequence.charAt(index);\n};\n\nexport const create = () => {\n    const sequence = 'abcd';\n    const input = Array(size).fill(sequence).map(random).join('');\n\n    return ({\n        ...header,\n        ...dialog,\n        ...codeFormula,\n        currentPoint: helper.startPoint,\n        comparedTable: helper.createComparedTable(input),\n        table: helper.createTableMatrix(input),\n        tableStyles: helper.createTableStyles(input),\n        buttons: helper.createButtons(input),\n        buttonsStyles: helper.createButtonsStyles(input),\n        handleButtonClick: buttonClick,\n        length: 1,\n    });\n};\n\nexport const state: State = create();\n","export const OPEN_DIALOG_CLICK = '@@PALINDROME_PARTITIONING/OPEN_DIALOG_CLICK';\nexport type OPEN_DIALOG_CLICK = typeof OPEN_DIALOG_CLICK;\n\nexport const CLOSE_DIALOG_CLICK = '@@PALINDROME_PARTITIONING/CLOSE_DIALOG_CLICK';\nexport type CLOSE_DIALOG_CLICK = typeof CLOSE_DIALOG_CLICK;\n\nexport const OPEN_FORMULA_CLICK = '@@PALINDROME_PARTITIONING/OPEN_FORMULA_CLICK';\nexport type OPEN_FORMULA_CLICK = typeof OPEN_FORMULA_CLICK;\n\nexport const CLOSE_FORMULA_CLICK = '@@PALINDROME_PARTITIONING/CLOSE_FORMULA_CLICK';\nexport type CLOSE_FORMULA_CLICK = typeof CLOSE_FORMULA_CLICK;\n\nexport const BUTTON_CLICK = '@@PALINDROME_PARTITIONING/BUTTON_CLICK';\nexport type BUTTON_CLICK = typeof BUTTON_CLICK;\n\nexport const REFRESH_CLICK = '@@PALINDROME_PARTITIONING/REFRESH_CLICK';\nexport type REFRESH_CLICK = typeof REFRESH_CLICK;\n\nexport const GET_RECORD = '@@PALINDROME_PARTITIONING/GET_SUCCESS_COUNT';\nexport type GET_RECORD = typeof GET_RECORD;\n\nexport const RECEIVED_RECORD = '@@PALINDROME_PARTITIONING/RECEIVED_SUCCESS_COUNT';\nexport type RECEIVED_RECORD = typeof RECEIVED_RECORD;\n\nexport const INCREASE_RECORD = '@@PALINDROME_PARTITIONING/INCREASE_RECORD';\nexport type INCREASE_RECORD = typeof INCREASE_RECORD;\n","import * as constants from './constants';\n\nexport interface Refresh {\n    type: constants.REFRESH_CLICK;\n}\n\nexport interface ButtonClick {\n    type: constants.BUTTON_CLICK;\n    payload: any;\n}\n\nexport interface FetchSuccess {\n    type: constants.RECEIVED_RECORD;\n    payload: any;\n}\n\nexport interface IncreaseSuccess {\n    type: constants.INCREASE_RECORD;\n}\n\nexport interface CloseDialog {\n    type: constants.CLOSE_DIALOG_CLICK;\n}\n\nexport interface OpenDialog {\n    type: constants.OPEN_DIALOG_CLICK;\n}\n\nexport interface CloseFormula {\n    type: constants.CLOSE_FORMULA_CLICK;\n}\n\nexport interface OpenFormula {\n    type: constants.OPEN_FORMULA_CLICK;\n}\n\nexport type Action = Refresh | ButtonClick | FetchSuccess | IncreaseSuccess |\n    CloseDialog | OpenDialog | CloseFormula | OpenFormula;\n\nexport function refresh(): Refresh {\n    return { type: constants.REFRESH_CLICK };\n}\n\nexport function buttonClick(data: any): ButtonClick {\n    return { type: constants.BUTTON_CLICK, payload: data };\n}\n\nexport function fetchSuccess(data: any): FetchSuccess {\n    return { type: constants.RECEIVED_RECORD, payload: data };\n}\n\nexport function increaseSuccess(): IncreaseSuccess {\n    return { type: constants.INCREASE_RECORD };\n}\n\nexport function closeDialog(): CloseDialog {\n    return { type: constants.CLOSE_DIALOG_CLICK };\n}\n\nexport function openDialog(): OpenDialog {\n    return { type: constants.OPEN_DIALOG_CLICK };\n}\n\nexport function closeFormula(): CloseFormula {\n    return { type: constants.CLOSE_FORMULA_CLICK };\n}\n\nexport function openFormula(): OpenFormula {\n    return { type: constants.OPEN_FORMULA_CLICK };\n}\n","export const formula = `if (!isPalindrome(row, col)) {\n  let min = sequence.length;\n  for (let k = row; k < col; k++) {\n    min = Math.min(min, table[row][k] + table[k + 1][col]);\n  }\n  table[row][col] = min + 1;\n} else {\n  table[row][col] = 0;\n}`;\n\nexport const description = `Given a string s partition s such that every \nsubstring of the partition is a palindrome. Return \nthe minimum cuts needed for a palindrome \npartitioning of s.`;\n\nexport const alUsecases = '';\n\nexport const example = `Input: \"abbab\"\nOutput: 1 // \"abba\", \"b\"`;\n","interface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (sequence: string): TableSize => {\n    const rows = sequence.length;\n    const cols = sequence.length;\n    return { rows, cols };\n};\n\nconst createPalindromeBooleanTable = (sequence: string): boolean[][] => {\n    const { rows, cols } = getTableSize(sequence);\n    const table = Array(rows).fill(false).map(() => Array(cols).fill(false));\n\n    // length === 1;\n    for (let i = 0; i < table.length; i += 1) {\n        table[i][i] = true;\n    }\n\n    // length === 2;\n    for (let i = 0; i < table.length - 1; i += 1) {\n        if (sequence.charAt(i) === sequence.charAt(i + 1)) {\n            table[i][i + 1] = true;\n        }\n    }\n\n    // length > 2;\n    for (let len = 3; len <= table.length; len += 1) {\n        for (let i = 0; i + len <= table.length; i += 1) {\n            const front = sequence.charAt(i);\n            const end = sequence.charAt(i + len - 1);\n            if (front === end) {\n                table[i][i + len - 1] = table[i + 1][i + len - 2];\n            }\n        }\n    }\n    return table;\n};\n\nconst createDPTable = (sequence: string): number[][] => {\n    const booleanTable = createPalindromeBooleanTable(sequence);\n    const { rows, cols } = getTableSize(sequence);\n    const table = Array(rows).fill(0).map(() => Array(cols).fill(0));\n\n    // length === 1;\n    for (let i = 0; i < table.length; i += 1) {\n        table[i][i] = 0;\n    }\n\n    // length === 2;\n    for (let i = 0; i < table.length - 1; i += 1) {\n        if (sequence.charAt(i) !== sequence.charAt(i + 1)) {\n            table[i][i + 1] = 1;\n        }\n    }\n\n    // length > 2;\n    for (let len = 3; len <= table.length; len += 1) {\n        for (let row = 0; row + len <= table.length; row += 1) {\n            const col = row + len - 1;\n            if (!booleanTable[row][col]) {\n                let min = sequence.length;\n                for (let k = row; k < col; k += 1) {\n                    min = Math.min(min, table[row][k] + table[k + 1][col]);\n                }\n                table[row][col] = min + 1;\n            }\n        }\n    }\n\n    return table;\n};\n\nexport default createDPTable;\n","import createDPTable from './algorithm';\nimport { Point } from '../../store/BasicState';\nimport { helperStyle, helperStyleSecondary, helperStyleThird } from '../../pages/withRoot';\n\nconst startPoint: Point = {\n    row: 2,\n    col: 2,\n};\n\ninterface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (sequence: string): TableSize => {\n    const rows = sequence.length + 2;\n    const cols = sequence.length + 2;\n    return { rows, cols };\n};\n\nconst createTableMatrix = (sequence: string): (number | string)[][] => {\n    const { rows, cols } = getTableSize(sequence);\n\n    const table = new Array(rows).fill('').map(() => new Array(cols).fill(''));\n\n    for (let col = 2; col < cols; col++) {\n        table[0][col] = col - 2;\n        table[1][col] = sequence.charAt(col - 2);\n    }\n\n    for (let row = 2; row < rows; row++) {\n        table[row][0] = row - 2;\n        table[row][1] = sequence.charAt(row - 2);\n    }\n\n    table[startPoint.row][startPoint.col] = '?';\n    return table;\n};\n\nconst createComparedTable = (sequence: string): (number | string)[][] => {\n    const { rows, cols } = getTableSize(sequence);\n\n    const dpTable = createDPTable(sequence);\n    const tableMatrix = createTableMatrix(sequence);\n\n    for (let row = 2; row < rows; row++) {\n        for (let col = 2; col < cols; col++) {\n            tableMatrix[row][col] = dpTable[row - 2][col - 2];\n        }\n    }\n\n    return tableMatrix;\n};\n\nconst addHelperStyles = (\n    styles: React.CSSProperties[][],\n    { row, col }: Point,\n    nextLength: number,\n    table: (string | number)[][]\n): void => {\n    for (let i = row; i <= col; i++) {\n        styles[0][i] = helperStyleSecondary;\n        styles[1][i] = helperStyle;\n\n        styles[i][0] = helperStyleSecondary;\n        styles[i][1] = helperStyle;\n    }\n\n    if (nextLength === 2 && table[1][row] === table[1][row + nextLength - 1]) {\n        styles[1][col] = helperStyleThird;\n        styles[1][row] = helperStyleThird;\n\n        styles[col][1] = helperStyleThird;\n        styles[row][1] = helperStyleThird;\n    }\n};\n\nconst createTableStyles = (sequence: string): (React.CSSProperties)[][] => {\n    const { rows, cols } = getTableSize(sequence);\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill({}));\n    addHelperStyles(table, startPoint, 1, []);\n    return table;\n};\n\nconst createButtons = (sequence: string): number[] => {\n    const dpTable = createDPTable(sequence);\n    const set = new Set<number>();\n    for (let row = 0; row < dpTable.length; row++) {\n        for (let col = 0; col < dpTable[row].length; col++) {\n            set.add(dpTable[row][col]);\n        }\n    }\n    return Array.from(set).sort();\n};\n\nconst createButtonsStyles = (sequence: string): (React.CSSProperties)[] => {\n    return createButtons(sequence).map(() => ({ color: 'back' }));\n};\n\nexport {\n    addHelperStyles,\n    createTableMatrix,\n    createComparedTable,\n    createTableStyles,\n    createButtons,\n    createButtonsStyles,\n    startPoint,\n};\n","import { Dialog, DialogScroll, Header, BasicInfo, Difficulty, Formula } from '../BasicState';\nimport { buttonClick, refresh, openDialog, closeDialog, closeFormula, openFormula } from './actions';\nimport { description, formula, example, alUsecases } from './contents';\nimport * as helper from '../../algorithms/palindrome-partitioning';\nimport { State } from './state';\n\nexport const basicInfo: BasicInfo = {\n    id: 14,\n    title: 'Palindrome Partitioning',\n};\n\nconst codeFormula: Formula = {\n    ...basicInfo,\n    formulaOpen: false,\n    formulaCroll: DialogScroll.Paper,\n    formula: formula,\n    handleCloseFormulaClick: closeFormula,\n};\n\nconst dialog: Dialog = {\n    ...basicInfo,\n    dialogOpen: false,\n    dialogCroll: DialogScroll.Paper,\n    description: description,\n    example: example,\n    alUsecases: alUsecases,\n    handleCloseDialogClick: closeDialog,\n};\n\nconst header: Header = {\n    ...basicInfo,\n    success: false,\n    loading: false,\n    steps: 0,\n    errors: 0,\n    startTime: 0,\n    finishTime: 0,\n    difficulty: Difficulty.Easy,\n    handleRefreshClick: refresh,\n    handleOpenDialogClick: openDialog,\n    handleOpenFormulaClick: openFormula,\n};\n\nconst size = 6;\nconst random = (sequence: string): string => {\n    const index = Math.floor(Math.random() * sequence.length);\n    return sequence.charAt(index);\n};\n\nexport const create = () => {\n    const sequence = 'abcd';\n    const input = Array(size).fill(sequence).map(random).join('');\n\n    return ({\n        ...header,\n        ...dialog,\n        ...codeFormula,\n        currentPoint: helper.startPoint,\n        comparedTable: helper.createComparedTable(input),\n        table: helper.createTableMatrix(input),\n        tableStyles: helper.createTableStyles(input),\n        buttons: helper.createButtons(input),\n        buttonsStyles: helper.createButtonsStyles(input),\n        handleButtonClick: buttonClick,\n        length: 1,\n    });\n};\n\nexport const state: State = create();\n","export const OPEN_DIALOG_CLICK = '@@HOUSE_ROBBER/OPEN_DIALOG_CLICK';\nexport type OPEN_DIALOG_CLICK = typeof OPEN_DIALOG_CLICK;\n\nexport const CLOSE_DIALOG_CLICK = '@@HOUSE_ROBBER/CLOSE_DIALOG_CLICK';\nexport type CLOSE_DIALOG_CLICK = typeof CLOSE_DIALOG_CLICK;\n\nexport const OPEN_FORMULA_CLICK = '@@HOUSE_ROBBER/OPEN_FORMULA_CLICK';\nexport type OPEN_FORMULA_CLICK = typeof OPEN_FORMULA_CLICK;\n\nexport const CLOSE_FORMULA_CLICK = '@@HOUSE_ROBBER/CLOSE_FORMULA_CLICK';\nexport type CLOSE_FORMULA_CLICK = typeof CLOSE_FORMULA_CLICK;\n\nexport const BUTTON_CLICK = '@@HOUSE_ROBBER/BUTTON_CLICK';\nexport type BUTTON_CLICK = typeof BUTTON_CLICK;\n\nexport const REFRESH_CLICK = '@@HOUSE_ROBBER/REFRESH_CLICK';\nexport type REFRESH_CLICK = typeof REFRESH_CLICK;\n\nexport const GET_RECORD = '@@HOUSE_ROBBER/GET_SUCCESS_COUNT';\nexport type GET_RECORD = typeof GET_RECORD;\n\nexport const RECEIVED_RECORD = '@@HOUSE_ROBBER/RECEIVED_SUCCESS_COUNT';\nexport type RECEIVED_RECORD = typeof RECEIVED_RECORD;\n\nexport const INCREASE_RECORD = '@@HOUSE_ROBBER/INCREASE_RECORD';\nexport type INCREASE_RECORD = typeof INCREASE_RECORD;\n","import * as constants from './constants';\n\nexport interface Refresh {\n    type: constants.REFRESH_CLICK;\n}\n\nexport interface ButtonClick {\n    type: constants.BUTTON_CLICK;\n    payload: any;\n}\n\nexport interface FetchSuccess {\n    type: constants.RECEIVED_RECORD;\n    payload: any;\n}\n\nexport interface IncreaseSuccess {\n    type: constants.INCREASE_RECORD;\n}\n\nexport interface CloseDialog {\n    type: constants.CLOSE_DIALOG_CLICK;\n}\n\nexport interface OpenDialog {\n    type: constants.OPEN_DIALOG_CLICK;\n}\n\nexport interface CloseFormula {\n    type: constants.CLOSE_FORMULA_CLICK;\n}\n\nexport interface OpenFormula {\n    type: constants.OPEN_FORMULA_CLICK;\n}\n\nexport type Action = Refresh | ButtonClick | FetchSuccess | IncreaseSuccess |\n    CloseDialog | OpenDialog | CloseFormula | OpenFormula;\n\nexport function refresh(): Refresh {\n    return { type: constants.REFRESH_CLICK };\n}\n\nexport function buttonClick(data: any): ButtonClick {\n    return { type: constants.BUTTON_CLICK, payload: data };\n}\n\nexport function fetchSuccess(data: any): FetchSuccess {\n    return { type: constants.RECEIVED_RECORD, payload: data };\n}\n\nexport function increaseSuccess(): IncreaseSuccess {\n    return { type: constants.INCREASE_RECORD };\n}\n\nexport function closeDialog(): CloseDialog {\n    return { type: constants.CLOSE_DIALOG_CLICK };\n}\n\nexport function openDialog(): OpenDialog {\n    return { type: constants.OPEN_DIALOG_CLICK };\n}\n\nexport function closeFormula(): CloseFormula {\n    return { type: constants.CLOSE_FORMULA_CLICK };\n}\n\nexport function openFormula(): OpenFormula {\n    return { type: constants.OPEN_FORMULA_CLICK };\n}\n","export const formula = `if (table.length < 2) {\n  return table;\n}\n\ntable[1] = Math.max(table[0], table[1]);\n\nfor (let i = 2; i < table.length; i++) {\n  table[i] = Math.max(\n    table[i] + table[i - 2], table[i - 1]\n  );\n}`;\n\nexport const description = `You are a professional robber planning to rob houses\nalong a street. Each house has a certain amount of money stashed, \nthe only constraint stopping you from robbing each of them is that \nadjacent houses have security system connected and it will \nautomatically contact the police if two adjacent houses were \nbroken into on the same night.\n\nGiven a list of non-negative integers representing the amount \nof money of each house, determine the maximum amount of money \nyou can rob tonight without alerting the police.`;\n\nexport const alUsecases = '';\nexport const example = `Input: [1,2,3,1]\nOutput: 4\nExplanation: \n    Rob house 1 (money = 1) and then rob house 3 (money = 3).\n    Total amount you can rob = 1 + 3 = 4.\n             \nInput: [2,7,9,3,1]\nOutput: 12\nExplanation: \n    Rob house 1 (money = 2), rob house 3 (money = 9) and rob house 5 (money = 1).\n    Total amount you can rob = 2 + 9 + 1 = 12.`;\n","import { basicInfo as EditDistance } from '../store/edit-distance/initialState';\nimport { basicInfo as KnapsackProblem } from '../store/knapsack-problem/initialState';\nimport { basicInfo as RodCuttingProblem } from '../store/rod-cutting-problem/initialState';\nimport { basicInfo as WildcardMatching } from '../store/wildcard-matching/initialState';\nimport { basicInfo as RegularExpression } from '../store/regular-expression/initialState';\nimport { basicInfo as CoinChangeFewestNumber } from '../store/coin-change-fewest-number/initialState';\nimport { basicInfo as CoinChangeHowManyWays } from '../store/coin-change-how-many-ways/initialState';\nimport { basicInfo as IsSubsequence } from '../store/is-subsequence/initialState';\nimport { basicInfo as LongestCommonSubsequence } from '../store/longest-common-subsequence/initialState';\nimport { basicInfo as LongestCommonSubstring } from '../store/longest-common-substring/initialState';\nimport { basicInfo as SubsetSumProblem } from '../store/subset-sum-problem/initialState';\nimport { basicInfo as MinimumOfJumpsToReachEnd } from '../store/minimum-number-of-jumps-to-reach-end/initialState';\nimport { basicInfo as LongestIncreasingSubsequence } from '../store/longest-increasing-subsequence/initialState';\nimport { basicInfo as MinimumPathSum } from '../store/minimum-path-sum/initialState';\nimport { basicInfo as WordBreak } from '../store/word-break/initialState';\nimport { basicInfo as MaximumSubarrayProblem } from '../store/maximum-subarray-problem/initialState';\nimport { basicInfo as EggDroppingProblem } from '../store/egg-dropping-problem/initialState';\nimport { basicInfo as LongestPalindromicSubstring } from '../store/longest-palindromic-substring/initialState';\nimport { basicInfo as LongestPalindromicSubsequence } from '../store/longest-palindromic-subsequence/initialState';\nimport { basicInfo as PalindromePartitioning } from '../store/palindrome-partitioning/initialState';\nimport { basicInfo as HouseRobber } from '../store/house-robber/initialState';\n\nenum Names {\n    Edit_Distance = 'edit-distance',\n    Word_Break = 'word-break',\n    Minimum_Path_Sum = 'minimum-path-sum',\n    Knapsack_Problem = 'knapsack-problem',\n    RodCutting_Problem = 'rod-cutting-problem',\n    Wildcard_Matching = 'wildcard-matching',\n    Regular_Expression = 'regular-expression-matching',\n    Coin_Change_Fewest_Number = 'coin-change-fewest-number',\n    Coin_Change_How_Many_Ways = 'coin-change-how-many-ways',\n    Is_Subsequence = 'is-subsequence',\n    Longest_Common_Subsequence = 'longest-common-subsequence',\n    Longest_Common_Substring = 'longest-common-substring',\n    Subset_Sum_Problem = 'subset-sum-problem',\n    Minimum_Jumps_To_End = 'minimum-number-of-jumps-to-reach-end',\n    Longest_Increasing_Subsequence = 'longest-increasing-subsequence',\n    Maximum_Subarray_Problem = 'maximum-subarray-problem',\n    EggDropping_Problem = 'egg-dropping-problem',\n    Longest_Palindromic_Substring = 'longest-palindromic-substring',\n    Longest_Palindromic_Subsequence = 'longest-palindromic-subsequence',\n    Palindrome_Partitioning = 'palindrome-partitioning',\n    House_Robber = 'house-robber',\n}\n\nexport const getId = (name: string): number => {\n    switch (name) {\n        case Names.Edit_Distance: return EditDistance.id;\n        case Names.Knapsack_Problem: return KnapsackProblem.id;\n        case Names.RodCutting_Problem: return RodCuttingProblem.id;\n        case Names.Wildcard_Matching: return WildcardMatching.id;\n        case Names.Regular_Expression: return RegularExpression.id;\n        case Names.Coin_Change_Fewest_Number: return CoinChangeFewestNumber.id;\n        case Names.Coin_Change_How_Many_Ways: return CoinChangeHowManyWays.id;\n        case Names.Is_Subsequence: return IsSubsequence.id;\n        case Names.Longest_Common_Subsequence: return LongestCommonSubsequence.id;\n        case Names.Longest_Common_Substring: return LongestCommonSubstring.id;\n        case Names.Subset_Sum_Problem: return SubsetSumProblem.id;\n        case Names.Minimum_Jumps_To_End: return MinimumOfJumpsToReachEnd.id;\n        case Names.Longest_Increasing_Subsequence: return LongestIncreasingSubsequence.id;\n        case Names.Minimum_Path_Sum: return MinimumPathSum.id;\n        case Names.Word_Break: return WordBreak.id;\n        case Names.Maximum_Subarray_Problem: return MaximumSubarrayProblem.id;\n        case Names.EggDropping_Problem: return EggDroppingProblem.id;\n        case Names.Longest_Palindromic_Substring: return LongestPalindromicSubstring.id;\n        case Names.Longest_Palindromic_Subsequence: return LongestPalindromicSubsequence.id;\n        case Names.Palindrome_Partitioning: return PalindromePartitioning.id;\n        case Names.House_Robber: return HouseRobber.id;\n        default: return -1;\n    }\n};\n\nexport default Names;\n","const createDPTable = (houses: number[]): number[] => {\n    const table = houses.map(house => house);\n\n    if (table.length < 2) {\n        return table;\n    }\n\n    table[1] = Math.max(table[0], table[1]);\n    for (let i = 2; i < table.length; i++) {\n        table[i] = Math.max(table[i] + table[i - 2], table[i - 1]);\n    }\n\n    return table;\n};\n\nexport default createDPTable;\n","import createDPTable from './algorithm';\nimport { Point } from '../../store/BasicState';\nimport { helperStyle, helperStyleSecondary } from '../../pages/withRoot';\n\nconst startPoint: Point = {\n    row: 0,\n    col: 1,\n};\n\ninterface TableSize {\n    rows: number;\n    cols: number;\n}\n\nconst getTableSize = (houses: number[]): TableSize => {\n    const rows = 1;\n    const cols = houses.length;\n    return { rows, cols };\n};\n\nconst createTableMatrix = (houses: number[]): (number | string)[][] => {\n    const table = [];\n    table[0] = houses.map(house => house);\n    return table;\n};\n\nconst createComparedTable = (houses: number[]): (number | string)[][] => {\n    const table = [];\n    table[0] = createDPTable(houses);\n    return table;\n};\n\nconst addHelperStyles = (styles: React.CSSProperties[][], { row, col }: Point): void => {\n    styles[row][col] = helperStyle;\n    styles[row][col - 1] = helperStyleSecondary;\n    if (col > 1) {\n        styles[row][col - 2] = helperStyle;\n    }\n};\n\nconst createTableStyles = (houses: number[]): (React.CSSProperties)[][] => {\n    const { rows, cols } = getTableSize(houses);\n    const table = new Array(rows).fill(0).map(() => new Array(cols).fill({}));\n    addHelperStyles(table, startPoint);\n    return table;\n};\n\nconst createButtons = (houses: number[]): number[] => {\n    const dpTable = createDPTable(houses);\n    const set = new Set<number>();\n    for (let i = 1; i < dpTable.length; i++) {\n        set.add(dpTable[i]);\n    }\n    return Array.from(set).sort((a, b) => a - b);\n};\n\nconst createButtonsStyles = (houses: number[]): (React.CSSProperties)[] => {\n    return createButtons(houses).map(() => ({ color: 'back' }));\n};\n\nexport {\n    addHelperStyles,\n    createTableMatrix,\n    createComparedTable,\n    createTableStyles,\n    createButtons,\n    createButtonsStyles,\n    startPoint,\n};\n","import { Dialog, DialogScroll, Header, BasicInfo, State, Difficulty, Formula } from '../BasicState';\nimport { buttonClick, refresh, openDialog, closeDialog, closeFormula, openFormula } from './actions';\nimport { description, formula, example, alUsecases } from './contents';\nimport * as helper from '../../algorithms/house-robber';\n\nexport const basicInfo: BasicInfo = {\n    id: 15,\n    title: 'House Robber',\n};\n\nconst codeFormula: Formula = {\n    ...basicInfo,\n    formulaOpen: false,\n    formulaCroll: DialogScroll.Paper,\n    formula: formula,\n    handleCloseFormulaClick: closeFormula,\n};\n\nconst dialog: Dialog = {\n    ...basicInfo,\n    dialogOpen: false,\n    dialogCroll: DialogScroll.Paper,\n    description: description,\n    example: example,\n    alUsecases: alUsecases,\n    handleCloseDialogClick: closeDialog,\n};\n\nconst header: Header = {\n    ...basicInfo,\n    success: false,\n    loading: false,\n    steps: 0,\n    errors: 0,\n    startTime: 0,\n    finishTime: 0,\n    difficulty: Difficulty.Easy,\n    handleRefreshClick: refresh,\n    handleOpenDialogClick: openDialog,\n    handleOpenFormulaClick: openFormula,\n};\n\nconst random = (max: number) => Math.floor(Math.random() * max) + 1;\n\nexport const create = () => {\n    const houses = Array(8).fill(10).map(random);\n    return ({\n        ...header,\n        ...dialog,\n        ...codeFormula,\n        currentPoint: helper.startPoint,\n        comparedTable: helper.createComparedTable(houses),\n        table: helper.createTableMatrix(houses),\n        tableStyles: helper.createTableStyles(houses),\n        buttons: helper.createButtons(houses),\n        buttonsStyles: helper.createButtonsStyles(houses),\n        handleButtonClick: buttonClick,\n    });\n};\n\nexport const state: State = create();\n","import * as React from 'react';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\n\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { WithStyles } from '@material-ui/core';\nimport Highlight from 'react-highlight';\n\nimport \"../../node_modules/highlight.js/styles/atom-one-light.css\"\n\nconst styles = (theme: Theme) => createStyles({\n    code: {\n        fontSize: \"16px\",\n    },\n});\n\nexport enum Languares {\n    Javascript = 'javascript',\n    Markdown = 'markdown',\n}\n\ninterface Props extends WithStyles<typeof styles> {\n    code: string;\n    language: Languares;\n}\n\nconst Code = (props: Props) => (\n    <Highlight className={`${props.language} ${props.classes.code}`}>\n        {props.code}\n    </Highlight>\n);\n\nexport default withStyles(styles)(Code);\n","import { createContext } from 'react';\nimport { Records } from './records';\n\nexport const RecordsContext = createContext<Partial<Records>>({});\n","import { createContext } from 'react';\nimport { LikesState } from './likesState';\n\nexport const LikesContext = createContext<Partial<LikesState>>({});\n","import * as React from 'react';\nimport { withStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { WithStyles } from '@material-ui/core';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Done from '@material-ui/icons/Done';\nimport Star from '@material-ui/icons/Star';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { drawerWidth } from '../withRoot';\nimport Names, { getId } from '../../algorithms/Names';\nimport { RecordsContext } from '../../records/recordsContext';\nimport { Records } from '../../records/records';\nimport { Record } from '../../records/record';\nimport { LikesContext } from '../../likes/likesContext';\nimport { Like } from '../../likes/like';\nimport { LikesState } from '../../likes/likesState';\n\nconst styles = (theme: Theme) => createStyles({\n    drawerPaper: {\n        position: 'absolute',\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n});\n\ninterface Props extends WithStyles<typeof styles> {\n    open?: boolean;\n    closeDrawer: () => void;\n}\n\nconst linkStyle: React.CSSProperties = {\n    textDecoration: 'none',\n    color: 'inherit',\n    width: '100%',\n    textTransform: 'initial',\n    textAlign: 'left',\n};\n\nconst listStyle: React.CSSProperties = {\n    paddingTop: 0,\n    paddingBottom: 0,\n    paddingLeft: 0,\n    paddingRight: 0,\n    width: '100%',\n    textAlign: 'left',\n};\n\nconst buttonStyle: React.CSSProperties = {\n    borderRadius: 0,\n    width: '100%',\n    textAlign: 'left',\n};\n\nconst doneStyle: React.CSSProperties = {\n    color: 'green',\n    paddingRight: 5,\n};\n\nconst likeStyle: React.CSSProperties = {\n    color: 'gold',\n    paddingRight: 5,\n};\n\nconst getName = (name: string) => name.split('').map(ch => (ch === '_') ? ' ' : ch).join('');\n\ninterface DoneProps {\n    done: boolean;\n}\n\nconst DoneComponent = ({ done }: DoneProps) => {\n    return done ? <Done style={doneStyle} /> : <React.Fragment />;\n};\n\ninterface LikeParams {\n    enabled: boolean;\n}\n\nconst LikeComponent = ({ enabled }: LikeParams) => {\n    return enabled ? <Star style={likeStyle} /> : <React.Fragment />;\n};\n\nconst Challenges = (records: Record[], likes: Like[]) => Object.keys(Names).map(key => {\n    // const name = Names[key];\n    const name = (Names as any)[key];\n    const id = getId(name);\n    const done = records.map(record => record.challengeId).includes(id);\n    const doesLike = likes.filter(like => like.enabled).map(like => like.challengeId).includes(id);\n    return (\n        <ListItem key={key} style={listStyle}>\n            <Button style={buttonStyle}>\n                <DoneComponent done={done} />\n                <Link to={`/algorithms/${name}`} style={linkStyle}>\n                    {getName(key)}\n                </Link>\n                <LikeComponent enabled={doesLike} />\n            </Button>\n        </ListItem>\n    );\n});\n\nconst Sidebar = (props: Props) => {\n    const { classes, open, closeDrawer } = props;\n    const recordsState = React.useContext<Partial<Records>>(RecordsContext);\n    const records = recordsState.records || [];\n    const likesState = React.useContext<Partial<LikesState>>(LikesContext);\n    const likes = likesState.likes || [];\n    return (\n        <Drawer\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n            classes={{\n                paper: classes.drawerPaper,\n            }}\n        >\n            <div\n                tabIndex={0}\n                role=\"button\"\n                onClick={closeDrawer}\n                onKeyDown={closeDrawer}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={closeDrawer}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>{Challenges(records, likes)}</List>\n\n            </div>\n        </Drawer>\n    );\n};\n\nexport default withStyles(styles)(Sidebar);\n","import { getAuthHeaders } from '../user/userUtils';\nimport { Record } from './record';\n\nconst recordsUrl = 'https://api.alchemist-ai.com/api/v1/records/challenges';\n\nexport const save = async (challengeId: number): Promise<Record | null> => {\n    const authHeaders = getAuthHeaders();\n    if (!authHeaders) {\n        return null;\n    }\n\n    const postBody = { challengeId: challengeId };\n\n    const requestInit: RequestInit = {\n        method: 'POST',\n        headers: authHeaders,\n        body: JSON.stringify(postBody),\n    };\n\n    return await fetch(recordsUrl, requestInit)\n        .then(response => response.json())\n        .then(json => json as Record);\n};\n\nexport const getRecords = async (): Promise<Record[]> => {\n    const authHeaders = getAuthHeaders();\n    if (!authHeaders) {\n        return [];\n    }\n\n    const requestInit: RequestInit = {\n        method: 'GET',\n        headers: authHeaders\n    };\n\n    return await fetch(recordsUrl, requestInit)\n        .then(response => response.json())\n        .then(json => json as Record[]);\n};\n","\nimport * as React from 'react';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { WithStyles, Chip } from '@material-ui/core';\nimport green from '@material-ui/core/colors/green';\nimport IconButton from '@material-ui/core/IconButton';\nimport RefreshIcon from '@material-ui/icons/RefreshOutlined';\nimport AssignmentIcon from '@material-ui/icons/AssignmentOutlined';\nimport CheckIcon from '@material-ui/icons/CheckCircleOutlined';\nimport CodeIcon from '@material-ui/icons/CodeRounded';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport WrongIcon from '@material-ui/icons/ErrorOutline';\nimport StepsIcon from '@material-ui/icons/PollOutlined';\n\nimport { Header as HeaderProps } from '../store/BasicState';\nimport { Records } from '../records/records';\nimport { RecordsContext } from '../records/recordsContext';\nimport { save as saveRecord, getRecords } from '../records/recordsUtils';\nimport { Record } from '../records/record';\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        flexGrow: 1,\n        padding: 5,\n    },\n    fabProgress: {\n        color: green[500],\n        position: 'absolute',\n        zIndex: 1,\n    },\n    margin: {\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n});\n\ninterface Props extends HeaderProps, WithStyles<typeof styles> { }\n\n// interface AlertProps {\n//     open: boolean;\n//     setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n// }\n// const PleaseSignIn = ({ open, setOpen }: AlertProps) => (\n//     <Collapse in={open}>\n//         <Alert severity=\"success\" onClose={() => setOpen(false)}>\n//             <strong>Congratulation ! </strong> Also you cloud sign in to save your records.\n//         </Alert>\n//     </Collapse>\n// );\n\n// const [alertOpen, setAlertOpen] = React.useState(false);\n// Uncaught Error: Too many re-renders. React limits the number of renders to prevent an infinite loop.\n// if (success && !userState.user) {\n//     setTimeout(() => { setAlertOpen(true); }, 1000);\n// }\n\ninterface TitleParams {\n    challengeId: number;\n    success: boolean;\n    title: string;\n}\n\nconst Title = ({ success, challengeId, title }: TitleParams) => {\n\n    const { records, setRecords } = React.useContext<Partial<Records>>(RecordsContext);\n\n    const inSucceedList = records ? records.map(record => record.challengeId).includes(challengeId) : false;\n\n    const updateLocalRecords = (currentRecords: Record[], newRecords: Record[]): void => {\n        if (!setRecords) {\n            return;\n        }\n        const currentIds = currentRecords.map(record => record.challengeId).sort();\n        const newIds = newRecords.map(record => record.challengeId).sort();\n\n        const str1 = JSON.stringify(currentIds);\n        const str2 = JSON.stringify(newIds);\n\n        if (str1 !== str2) {\n            setRecords(newRecords);\n        }\n    };\n\n    if (success && setRecords && records && !inSucceedList) {\n        saveRecord(challengeId).then(saveResult => {\n            if (!saveResult) {\n                return;\n            }\n            getRecords().then(newRecords => {\n                if (records && newRecords) {\n                    updateLocalRecords(records, newRecords);\n                }\n            });\n        });\n    }\n\n    return (\n        <React.Fragment>\n            {title.toUpperCase()}\n        </React.Fragment>\n    );\n};\n\nconst Description = ({ title, success, id, handleOpenDialogClick, handleOpenFormulaClick, handleRefreshClick }: Props) => (\n    <div style={{ marginTop: '30px', fontSize: '18px' }} >\n        <Title challengeId={id} success={success} title={title} />\n        <Tooltip title=\"DESCRIPTION\" placement=\"top\">\n            <IconButton onClick={handleOpenDialogClick}>\n                {success ? <CheckIcon style={{ color: 'green' }} /> : <AssignmentIcon style={{ color: '' }} />}\n            </IconButton>\n        </Tooltip>\n        <Tooltip title=\"CODE\" placement=\"top\">\n            <IconButton onClick={handleOpenFormulaClick}>\n                <CodeIcon />\n            </IconButton>\n        </Tooltip>\n\n        <Tooltip title=\"REFRESH\" placement=\"top\">\n            <IconButton onClick={handleRefreshClick}>\n                <RefreshIcon />\n            </IconButton>\n        </Tooltip>\n    </div >\n);\n\nconst RecordsSecion = ({ steps, errors, classes }: Props) => (\n    <div>\n        <Chip\n            style={{ border: \"none\" }}\n            variant=\"outlined\"\n            icon={<StepsIcon />}\n            label={`STEPS: ${steps}`}\n            className={classes.margin}\n        />\n        <Chip\n            style={{ border: \"none\" }}\n            variant=\"outlined\"\n            icon={<WrongIcon />}\n            label={`ERRORS: ${errors}`}\n            className={classes.margin}\n        />\n    </div>\n);\n\nconst Header = (props: Props) => (\n    <React.Fragment>\n        <Description {...props} />\n        <RecordsSecion {...props} />\n    </React.Fragment>\n);\n\nexport default withStyles(styles)(Header);\n","import * as React from 'react';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { WithStyles } from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Table as TableProps } from '../store/BasicState';\n\nconst styles = (theme: Theme) => createStyles({});\n\ninterface Props extends TableProps, WithStyles<typeof styles> { }\n\nconst createCell = (key: number, data: number | string, style: React.CSSProperties) => (\n    <TableCell padding=\"none\" key={key} style={style}>\n        {data}\n    </TableCell>\n);\n\nconst createRow = (key: number, array: Array<string | number>, rowStyles: Array<React.CSSProperties>) => {\n    if (array.length !== rowStyles.length) {\n        throw new Error('Alchemy Display table errors: array-styles size dont match');\n    }\n    return (\n        <TableRow key={key}>\n            {array.map((data, index) => createCell(index, data, rowStyles[index]))}\n        </TableRow>\n    );\n};\n\nconst DisplayTable = (props: Props) => {\n    const { table, tableStyles } = props;\n    if (table.length !== tableStyles.length) {\n        throw new Error('Alchemy Display table errors: matrix-styles size dont match');\n    }\n    return (\n        <Table>\n            <TableBody>\n                {table.map((row, index) => createRow(index, row, tableStyles[index]))}\n            </TableBody>\n        </Table>\n    );\n};\n\nexport default withStyles(styles)(DisplayTable);\n","import * as React from 'react';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\n\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { WithStyles, ButtonGroup, Button } from '@material-ui/core';\n\nimport { Buttons as ButtonsProps } from '../store/BasicState';\n\nconst buttonsStyle = (theme: Theme) => createStyles({\n    cell: {\n        '&:hover': {\n            cursor: 'pointer',\n            backgroundColor: theme.palette.primary.light,\n        },\n        minWidth: 70,\n        minHeight: 35,\n        fontSize: 14,\n        padding: 0,\n    },\n});\n\ninterface Props extends ButtonsProps, WithStyles<typeof buttonsStyle> { }\n\nconst booleanToString = (data: boolean): string => data ? 'TRUE' : 'FALSE';\n\nconst cellContent = (data: number | string | boolean) => {\n    return (typeof data === 'boolean') ? booleanToString(data) : data;\n};\n\nconst cell = (\n    key: number,\n    data: number | string | boolean,\n    style: React.CSSProperties,\n    { handleButtonClick, classes }: Props) => (\n        <Button size=\"large\" key={key} style={style} onClick={() => handleButtonClick(data)} className={classes.cell}>\n            {cellContent(data)}\n        </Button>\n    );\n\nconst Buttons = (props: Props) => {\n    const { buttons, buttonsStyles } = props;\n    if (buttons.length !== buttonsStyles.length) {\n        throw new Error('Alchemy Buttons errors: array-styles size dont match');\n    }\n    return (\n        <ButtonGroup size=\"large\" key={0} style={{ marginTop: \"20px\" }}>\n            {buttons.map((data, index) => cell(index, data, buttonsStyles[index], { ...props }))}\n        </ButtonGroup>\n    );\n};\n\nexport default withStyles(buttonsStyle)(Buttons);\n","export interface Thumbs {\n    ups: number;\n    downs: number;\n}\n\nexport enum ThumbType {\n    DOWN = 0, UP = 1, NONE = 2\n}\n\nexport interface Thumb {\n    challengeId: number;\n    thumb: ThumbType;\n}\n","import * as React from 'react';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { WithStyles, Divider } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n// import ReactMarkdown from \"react-markdown\";\n\nimport { Dialog as DialogProps } from '../store/BasicState';\nimport CodeBlock, { Languares } from './CodeBlock';\n\nconst styles = (theme: Theme) => createStyles({});\n\ninterface Props extends DialogProps, WithStyles<typeof styles> { }\n\nconst description = (props: Props) => (\n    <React.Fragment>\n        {/* <ReactMarkdown source={props.description} /> */}\n        {/* <Typography>Description</Typography> */}\n        <CodeBlock code={props.description} language={Languares.Markdown} />\n    </React.Fragment>\n);\n\nconst alUsecases = (props: Props) => (\n    <React.Fragment>\n        <Typography>Use Cases</Typography>\n        <CodeBlock code={props.alUsecases} language={Languares.Markdown} />\n    </React.Fragment>\n);\n\nconst example = (props: Props) => (\n    <React.Fragment>\n        <Typography>Example</Typography>\n        <CodeBlock code={props.example} language={Languares.Markdown} />\n    </React.Fragment>\n);\n\nconst InfoModal = (props: Props) => (\n    <Dialog open={props.dialogOpen} onClose={props.handleDialogOnClose} scroll={props.dialogCroll} >\n        <DialogTitle>\n            <Typography>{props.title}</Typography>\n        </DialogTitle>\n        <Divider />\n        <DialogContent>\n            {props.description && description(props)}\n            {props.alUsecases && alUsecases(props)}\n            {props.example && example(props)}\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={props.handleCloseDialogClick}>CLOSE</Button>\n        </DialogActions>\n    </Dialog>\n);\n\nexport default withStyles(styles)(InfoModal);\n","import * as React from 'react';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { WithStyles, Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { Formula } from '../store/BasicState';\nimport CodeBlock, { Languares } from './CodeBlock';\n\nconst styles = (theme: Theme) => createStyles({\n    title: {\n        padding: theme.spacing(1),\n        paddingBottom: 0,\n    },\n    content: {\n        paddingTop: 0,\n    },\n    actions: {\n        paddingTop: 0,\n    },\n});\n\ninterface Props extends Formula, WithStyles<typeof styles> { }\n\nconst InfoModal = (props: Props) => (\n    <Dialog open={props.formulaOpen} onClose={props.handleFormulaOnClose} scroll={props.formulaCroll} >\n        <DialogTitle className={props.classes.title} >\n            <Typography variant=\"body1\">FORMULA</Typography>\n        </DialogTitle>\n        <DialogContent className={props.classes.content}>\n            <CodeBlock code={props.formula} language={Languares.Javascript} />\n        </DialogContent>\n        <DialogActions className={props.classes.actions}>\n            <Button autoFocus onClick={props.handleCloseFormulaClick}>CLOSE</Button>\n        </DialogActions>\n    </Dialog>\n);\n\nexport default withStyles(styles)(InfoModal);\n","import { getAuthHeaders } from '../user/userUtils';\nimport { Like } from './like';\n\nconst likesUrl = 'https://api.alchemist-ai.com/api/v1/favorites/challenges';\n\nexport const getLikes = async (): Promise<Like[]> => {\n    const authHeaders = getAuthHeaders();\n    if (!authHeaders) {\n        return [];\n    }\n\n    const requestInit: RequestInit = {\n        method: 'GET',\n        headers: authHeaders\n    };\n\n    return await fetch(likesUrl, requestInit)\n        .then(response => response.json())\n        .then(json => json as Like[]);\n};\n\nexport const save = async (challengeId: number): Promise<any> => {\n    const authHeaders = getAuthHeaders();\n    if (!authHeaders) {\n        return null;\n    }\n\n    const postBody = { challengeId: challengeId };\n\n    const requestInit: RequestInit = {\n        method: 'POST',\n        headers: authHeaders,\n        body: JSON.stringify(postBody),\n    };\n\n    return await fetch(likesUrl, requestInit).then(response => response.json());\n};\n\nexport const update = async (like: Like): Promise<any> => {\n    const authHeaders = getAuthHeaders();\n    if (!authHeaders) {\n        return null;\n    }\n\n    const requestInit: RequestInit = {\n        method: 'PUT',\n        headers: authHeaders,\n        body: JSON.stringify(like),\n    };\n\n    return await fetch(likesUrl, requestInit)\n        .then(response => response.json());\n};\n","import * as React from 'react';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { WithStyles, IconButton } from '@material-ui/core';\nimport FavoriteTrue from '@material-ui/icons/Favorite';\nimport FavoriteFalse from '@material-ui/icons/FavoriteBorderOutlined';\n\nimport { LikesContext } from '../likes/likesContext';\nimport { LikesState } from '../likes/likesState';\nimport { getLikes, save as saveLike, update as updateLike } from '../likes/likesUtils';\nimport { Like } from '../likes/like';\n\nconst styles = (theme: Theme) => createStyles({});\n\ninterface Props extends WithStyles<typeof styles> {\n    challengeId: number;\n}\n\nconst Favorite = ({ challengeId }: Props) => {\n    const { likes, setLikes } = React.useContext<Partial<LikesState>>(LikesContext);\n    const like: Like | null = likes ? likes.filter(item => item.challengeId === challengeId)[0] : null;\n    const enabled: boolean = like ? like.enabled : false;\n\n    const updateLocalLikes = (toUpdate: Like): Like[] => {\n        const clonedLikes: Like[] = likes ? likes.filter(item => item.id !== toUpdate.id) : [];\n        clonedLikes.push(toUpdate);\n        return clonedLikes;\n    };\n\n    const handleUpdate = (newLike: Like): void => {\n        updateLike(newLike).then(result => {\n            if (result && setLikes) {\n                setLikes(updateLocalLikes(newLike));\n            }\n        });\n    }\n\n    const handleEnableLike = () => {\n        if (like) {\n            handleUpdate({ ...like, enabled: true });\n        } else {\n            saveLike(challengeId).then(saved => {\n                if (saved && setLikes) {\n                    getLikes().then(responseLikes => {\n                        if (setLikes) {\n                            setLikes(responseLikes);\n                        }\n                    });\n                }\n            });\n        }\n    };\n\n    const handleDisableLike = () => {\n        if (like && enabled) {\n            handleUpdate({ ...like, enabled: false });\n        }\n    };\n\n    if (enabled) {\n        return (\n            <IconButton onClick={handleDisableLike}>\n                <FavoriteTrue style={{ color: 'rgb(255, 23, 68)' }} />\n            </IconButton>\n        );\n    } else {\n        return (\n            <IconButton onClick={handleEnableLike}>\n                <FavoriteFalse />\n            </IconButton>\n        );\n    }\n};\n\nexport default withStyles(styles)(Favorite);\n","import { getAuthHeaders } from '../user/userUtils';\nimport { Thumb, Thumbs, ThumbType } from './thumbs';\n\nconst thumbsUrl = 'https://api.alchemist-ai.com/api/v1/likes/challenges';\n\nexport const getThumbs = async (challengeId: number): Promise<Thumbs> => {\n\n    const requestInit: RequestInit = { method: 'GET' };\n\n    return await fetch(`${thumbsUrl}/${challengeId}/count`, requestInit)\n        .then(response => response.json())\n        .then(json => json as Thumbs);\n};\n\nexport const sendThumb = async (challengeId: number, thumb: ThumbType): Promise<Thumb | null> => {\n    const authHeaders = getAuthHeaders();\n    if (!authHeaders) {\n        return null;\n    }\n\n    const postBody: Thumb = { challengeId, thumb };\n\n    const requestInit: RequestInit = {\n        method: 'POST',\n        headers: authHeaders,\n        body: JSON.stringify(postBody),\n    };\n\n    return await fetch(thumbsUrl, requestInit)\n        .then(response => response.json())\n        .then(json => json as Thumb);\n};\n\nexport const getThumb = async (challengeId: number): Promise<Thumb> => {\n\n    const authHeaders = getAuthHeaders();\n    if (!authHeaders) {\n        return { challengeId, thumb: ThumbType.NONE };\n    }\n\n    const requestInit: RequestInit = {\n        method: 'GET',\n        headers: authHeaders\n    };\n\n    return await fetch(`${thumbsUrl}/${challengeId}`, requestInit)\n        .then(response => response.json())\n        .then(json => json as Thumb);\n};\n","import * as React from 'react';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { WithStyles, Chip } from '@material-ui/core';\nimport ThumbUp from '@material-ui/icons/ThumbUpOutlined';\nimport ThumbDown from '@material-ui/icons/ThumbDownOutlined';\nimport ThumbedUp from '@material-ui/icons/ThumbUp';\nimport ThumbedDown from '@material-ui/icons/ThumbDown';\n\nimport { getThumbs, getThumb, sendThumb } from '../thumbs/thumbsUtils';\nimport { Thumbs as ThumbsModel, Thumb, ThumbType } from '../thumbs/thumbs';\n\nconst styles = (theme: Theme) => createStyles({\n    margin: {\n        margin: theme.spacing(1),\n    },\n});\n\ninterface Props extends WithStyles<typeof styles> {\n    challengeId: number;\n}\n\ninterface ThumbProps extends WithStyles<typeof styles> {\n    thumbs: ThumbsModel;\n    thumb: ThumbType;\n    handleThumbUp: () => void;\n    handleThumbDown: () => void;\n    handleRemoveThumb: () => void\n}\n\nconst ThumbComponent = (props: ThumbProps) => {\n    switch (props.thumb) {\n        case ThumbType.NONE: return <ThumbNoneComponent  {...props} />\n        case ThumbType.UP: return <ThumbUpComponent  {...props} />\n        case ThumbType.DOWN: return <ThumbDownComponent  {...props} />\n        default: return <ThumbNoneComponent  {...props} />\n    }\n};\n\nconst ThumbNoneComponent = ({ classes, thumbs, handleThumbUp, handleThumbDown }: ThumbProps) => (\n    <React.Fragment>\n        <Chip\n            style={{ border: \"none\" }}\n            variant=\"outlined\"\n            icon={<ThumbUp />}\n            label={thumbs.ups}\n            className={classes.margin}\n            onClick={handleThumbUp}\n        />\n        <Chip\n            style={{ border: \"none\" }}\n            variant=\"outlined\"\n            icon={<ThumbDown />}\n            label={thumbs.downs}\n            className={classes.margin}\n            onClick={handleThumbDown}\n        />\n    </React.Fragment>\n);\n\nconst ThumbUpComponent = ({ classes, thumbs, handleRemoveThumb, handleThumbDown }: ThumbProps) => (\n    <React.Fragment>\n        <Chip\n            style={{ border: \"none\" }}\n            variant=\"outlined\"\n            icon={<ThumbedUp />}\n            label={thumbs.ups}\n            className={classes.margin}\n            onClick={handleRemoveThumb}\n        />\n        <Chip\n            style={{ border: \"none\" }}\n            variant=\"outlined\"\n            icon={<ThumbDown />}\n            label={thumbs.downs}\n            className={classes.margin}\n            onClick={handleThumbDown}\n        />\n    </React.Fragment>\n);\n\nconst ThumbDownComponent = ({ classes, thumbs, handleRemoveThumb, handleThumbUp }: ThumbProps) => (\n    <React.Fragment>\n        <Chip\n            style={{ border: \"none\" }}\n            variant=\"outlined\"\n            icon={<ThumbUp />}\n            label={thumbs.ups}\n            className={classes.margin}\n            onClick={handleThumbUp}\n        />\n        <Chip\n            style={{ border: \"none\" }}\n            variant=\"outlined\"\n            icon={<ThumbedDown />}\n            label={thumbs.downs}\n            className={classes.margin}\n            onClick={handleRemoveThumb}\n        />\n    </React.Fragment>\n);\n\nconst Thumbs = ({ challengeId, classes }: Props) => {\n\n    const [thumbs, setThumbs] = React.useState<ThumbsModel>({ ups: 0, downs: 0 });\n    const [thumb, setThumb] = React.useState<Thumb>({ challengeId, thumb: ThumbType.NONE });\n\n    const updateLocalThumb = (result: Thumb | null): void => {\n        if (result) {\n            setThumb(result);\n        }\n    };\n\n    const handleThumbDown = () => {\n        sendThumb(challengeId, 0).then(result => updateLocalThumb(result));\n    };\n\n    const handleThumbUp = () => {\n        sendThumb(challengeId, 1).then(result => updateLocalThumb(result));\n    };\n\n    const handleRemoveThumb = () => {\n        sendThumb(challengeId, 2).then(result => updateLocalThumb(result));\n    };\n\n    const updateThumbs = (): void => {\n        getThumbs(challengeId).then(results => {\n            if (results) {\n                setThumbs(results);\n            }\n        });\n    };\n\n    const updateThumb = (): void => {\n        getThumb(challengeId).then(result => {\n            if (result && (JSON.stringify(result) !== JSON.stringify(thumb))) {\n                setThumb(result);\n            }\n        });\n    };\n\n    React.useEffect(updateThumbs, []);\n    React.useEffect(updateThumb, []);\n    React.useEffect(updateThumbs, [thumb]);\n\n    return (\n        <ThumbComponent\n            thumbs={thumbs}\n            thumb={thumb.thumb}\n            classes={classes}\n            handleThumbUp={handleThumbUp}\n            handleThumbDown={handleThumbDown}\n            handleRemoveThumb={handleRemoveThumb}\n        />\n    );\n};\n\nexport default withStyles(styles)(Thumbs);\n","import { getAuthHeaders } from '../user/userUtils';\nimport { Pagination } from './pagination';\nimport { Comment } from './comment';\n\nconst commentsUrl = 'https://api.alchemist-ai.com/api/v1/comments';\n\nexport const getComments = async (challengeId: number, page: number): Promise<Pagination> => {\n\n    const requestInit: RequestInit = { method: 'GET' };\n\n    return await fetch(`${commentsUrl}/challenges/${challengeId}?page=${page}`, requestInit)\n        .then(response => response.json())\n        .then(json => json as Pagination);\n};\n\nexport const deleteComment = async (commentId: number): Promise<boolean> => {\n    const authHeaders = getAuthHeaders();\n    if (!authHeaders) {\n        return false;\n    }\n\n    const requestInit: RequestInit = {\n        method: 'DELETE',\n        headers: authHeaders,\n    };\n\n    return await fetch(`${commentsUrl}/${commentId}`, requestInit)\n        .then(response => response.json())\n        .then(json => json as boolean);\n};\n\nexport const saveOrUpdateComment = async (comment: Comment): Promise<Comment | null> => {\n    const authHeaders = getAuthHeaders();\n    if (!authHeaders) {\n        return null;\n    }\n\n    const requestInit: RequestInit = {\n        method: 'POST',\n        headers: authHeaders,\n        body: JSON.stringify(comment),\n    };\n\n    return await fetch(`${commentsUrl}`, requestInit)\n        .then(response => response.json())\n        .then(json => json as Comment);\n};\n","import * as React from 'react';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { WithStyles, IconButton, Avatar, Grid, TextField, Tooltip, Popover, Button } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport MoreCommentsIcon from '@material-ui/icons/MoreHoriz';\nimport { UserContext } from '../user/userContext';\nimport { Comment as CommentModel } from '../comments/comment';\nimport { getComments, saveOrUpdateComment, deleteComment } from '../comments/commentsUtils';\nimport { User } from '../user/user';\nimport { getUser } from '../user/userUtils';\nimport { isLastPage } from '../comments/pagination';\n\nconst styles = (theme: Theme) => createStyles({\n    commentRoot: {\n        marginTop: '30px',\n        flexGrow: 1,\n    },\n    inputNoneBorder: {\n        '& .MuiInput-underline:before': {\n            border: 'none'\n        },\n        '& .MuiInputBase-input': {\n            color: 'black'\n        }\n    },\n    textField: {\n        width: '100%',\n    },\n    margin: {\n        margin: theme.spacing(1),\n    }\n});\n\ninterface Props extends WithStyles<typeof styles> {\n    challengeId: number;\n}\n\ninterface CommentProps extends CommentModel, WithStyles<typeof styles> {\n    meId: number | null;\n    comments: CommentModel[];\n    setComments: React.Dispatch<React.SetStateAction<CommentModel[]>>;\n}\n\nconst EmptyUser: User = { name: \"\", avatar: undefined, id: -1 };\n\nconst Comment = ({ content, classes, userId, meId, id, comments, setComments, createdTime }: CommentProps) => {\n    const [user, setUser] = React.useState<User>({ ...EmptyUser });\n    const ownedComment: boolean = meId ? (meId === userId) : false;\n\n    if (user.id === EmptyUser.id) {\n        setUser({ ...user, id: -2 }); // to prevent loop forever\n        getUser(userId).then(result => {\n            if (result) setUser(result);\n        });\n    }\n\n    const handleDelete = (): void => {\n        if (ownedComment) {\n            deleteComment(id).then(result => {\n                if (result) {\n                    setComments(comments.filter(comment => comment.id !== id));\n                }\n            })\n        }\n    };\n\n    const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n\n    const handlePopoverOpen = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handlePopoverClose = () => {\n        setAnchorEl(null);\n    };\n\n    const openEdit = Boolean(anchorEl);\n    return (\n        <React.Fragment>\n            <Grid container spacing={0} className={classes.commentRoot}>\n                <Grid item xs={1}>\n                    <Avatar\n                        style={{ marginTop: \"5px\" }}\n                        alt={user.name}\n                        src={user.avatar || undefined}\n                    />\n                </Grid>\n                <Grid item xs={10} style={{ paddingLeft: \"15px\" }}>\n                    <TextField\n                        label={`${user.name} ${createdTime}`}\n                        multiline\n                        rowsMax={4}\n                        value={content}\n                        className={`${classes.textField} ${classes.inputNoneBorder}`}\n                        disabled\n                    />\n                </Grid>\n                <Grid item xs={1}>\n                    {ownedComment &&\n                        <React.Fragment>\n                            <IconButton\n                                onClick={handlePopoverOpen}\n                            >\n                                <MoreIcon />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                    <Popover\n                        open={openEdit}\n                        anchorEl={anchorEl}\n                        onClose={handlePopoverClose}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'left',\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left',\n                        }}\n                    >\n                        <Button\n                            variant=\"outlined\"\n                            startIcon={<DeleteIcon />}\n                            onClick={handleDelete}\n                        >\n                            Delete\n                        </Button>\n                    </Popover>\n                </Grid>\n            </Grid>\n\n        </React.Fragment>\n    );\n};\n\ninterface CreateNewCommentProps extends WithStyles<typeof styles> {\n    challengeId: number;\n    userId: number | undefined;\n    userName: string | undefined;\n    userAvatar: string | undefined;\n    comments: CommentModel[];\n    setComments: React.Dispatch<React.SetStateAction<CommentModel[]>>;\n}\n\nconst CreateNewComment = ({ challengeId, userId, userName, userAvatar, classes, comments, setComments }: CreateNewCommentProps) => {\n    const [content, setContent] = React.useState<string>(\"\")\n\n    const handleSend = () => {\n        if (!userId || content.length === 0) {\n            return;\n        } else {\n            const comment: CommentModel = { id: 0, userId, challengeId, content, parentId: undefined, createdTime: null };\n            saveOrUpdateComment(comment).then(result => {\n                if (result) {\n                    setContent(\"\"); // reset input placeholder.\n                    setComments([result, ...comments]);\n                }\n            });\n        }\n    };\n\n    return (\n        <Grid container spacing={0} className={classes.commentRoot}>\n            <Grid item xs={1}>\n                <Avatar\n                    style={{ marginTop: \"5px\" }}\n                    alt={userName}\n                    src={userAvatar}\n                />\n            </Grid>\n            <Grid item xs={10} style={{ paddingLeft: \"15px\" }}>\n                {\n                    (userName && userId) ?\n                        <TextField\n                            className={classes.textField}\n                            multiline\n                            label={`Commenting as ${userName}`}\n                            value={content}\n                            onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>): void => setContent(ev.target.value)}\n                        /> :\n                        <TextField\n                            className={classes.textField}\n                            label=\"Sign in to comment.\"\n                            disabled\n                        />\n                }\n\n            </Grid>\n            <Grid item xs={1}>\n                {\n                    (userName && userId) ?\n                        <Tooltip title=\"SEND COMMENT\" placement=\"right\">\n                            <IconButton onClick={handleSend}>\n                                <SendIcon />\n                            </IconButton>\n                        </Tooltip> :\n                        <IconButton disabled>\n                            <SendIcon />\n                        </IconButton>\n                }\n            </Grid>\n        </Grid>\n    )\n};\n\nconst Comments = (props: Props) => {\n    const { challengeId } = props;\n    const { user } = React.useContext(UserContext);\n\n    const [comments, setComments] = React.useState<CommentModel[]>([]);\n    const [moreComments, setMoreComments] = React.useState<boolean>(false);\n    const [page, setPage] = React.useState<number>(1);\n\n    const getMoreComments = (): void => {\n        getComments(challengeId, page).then(pagination => {\n            setPage(p => p + 1);\n\n            if (isLastPage(pagination)) {\n                setMoreComments(false);\n            } else {\n                setMoreComments(true);\n            }\n\n            if (pagination.content.length > 0) {\n                setComments(current => [...current, ...pagination.content]);\n            }\n        });\n    };\n\n    React.useEffect(getMoreComments, [])\n\n    return (\n        <React.Fragment>\n            <CreateNewComment\n                {...props}\n                userId={user ? user.id : undefined}\n                userName={user ? user.name : undefined}\n                userAvatar={user ? (user.avatar || undefined) : undefined}\n                comments={comments}\n                setComments={setComments}\n            />\n            {\n                comments.map((comment, index) => <Comment\n                    key={index}\n                    {...props}\n                    {...comment}\n                    meId={(user && user.id) || null}\n                    comments={comments}\n                    setComments={setComments}\n                />)\n            }\n            <Grid justify=\"space-between\" container className={props.classes.commentRoot}>\n                {\n                    moreComments && <Tooltip title=\"MORE COMMENTS\" placement=\"right\">\n                        <Avatar onClick={getMoreComments}>\n                            <MoreCommentsIcon />\n                        </Avatar>\n                    </Tooltip>\n                }\n            </Grid>\n\n        </React.Fragment>\n    );\n};\n\nexport default withStyles(styles)(Comments);\n","export interface Page {\n    number: number;\n    size: number;\n    totalElements: number;\n    totalPages: number\n}\n\nexport interface Pagination {\n    page: Page;\n    content: any[];\n}\n\nexport const isLastPage = (pagination: Pagination): boolean => {\n    return pagination.page.number >= pagination.page.totalPages || pagination.content.length === 0\n};\n","import * as React from 'react';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { WithStyles, Divider, Grid } from '@material-ui/core';\n\n\nimport { State as BasicState } from '../store/BasicState';\nimport Favorite from './Favorite';\nimport Thumbs from './Thumbs';\nimport Comments from './Comments';\n\nconst styles = (theme: Theme) => createStyles({\n    sectionDesktop: {\n        display: 'none',\n        width: \"55%\",\n        [theme.breakpoints.up('md')]: {\n            display: 'block',\n        },\n    },\n    sectionMobile: {\n        display: 'block',\n        width: \"96%\",\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    root: {\n        textAlign: 'center',\n        margin: \"auto\",\n        marginTop: \"60px\"\n    },\n});\n\ninterface Props extends BasicState, WithStyles<typeof styles> { }\n\nconst Content = (props: Props) => (\n    <React.Fragment>\n        <Grid container>\n            <Grid item xs={12} sm={6}>\n                <Grid container alignItems=\"flex-start\" justify=\"flex-start\">\n                    <Favorite challengeId={props.id} />\n                    <Thumbs challengeId={props.id} />\n                </Grid>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <Grid container alignItems=\"flex-start\" justify=\"flex-end\">\n                </Grid>\n            </Grid>\n        </Grid>\n        <Divider />\n        <Comments challengeId={props.id} />\n    </React.Fragment>\n);\n\nconst Footer = (props: Props) => (\n    <React.Fragment>\n        <div className={`${props.classes.root} ${props.classes.sectionDesktop}`}>\n            <Content {...props} />\n        </div>\n        <div className={`${props.classes.root} ${props.classes.sectionMobile}`}>\n            <Content {...props} />\n        </div>\n    </React.Fragment>\n);\n\nexport default withStyles(styles)(Footer);\n","import * as React from 'react';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { WithStyles } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Header from './MainHeader';\nimport Table from './Table';\nimport Buttons from './Buttons';\nimport { State } from '../store/BasicState';\nimport Dialog from './Dialog';\nimport Formula from './Formula';\nimport Comments from './MainFooter';\n\nconst styles = (theme: Theme) => createStyles({});\ninterface Props extends State, WithStyles<typeof styles> { }\n\nconst Algorithm = (props: Props) => (\n    <div style={{ margin: 'auto', textAlign: 'center' }}>\n        <Header {...props} />\n        <Table {...props} />\n        <CardContent>\n            <Buttons {...props} />\n        </CardContent>\n        <Comments {...props} />\n        <Dialog  {...props} />\n        <Formula {...props} />\n    </div>\n);\n\nexport default withStyles(styles)(Algorithm);\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { ApplicationState } from '..';\nimport Card from '../../components/Card';\nimport * as actions from './actions';\n\nconst mapStateToProps = ({ editDistance }: ApplicationState) => ({\n    ...editDistance,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<actions.Action>) => ({\n    handleButtonClick: (data: number | string) => {\n        dispatch(actions.buttonClick(data));\n    },\n\n    handleRefreshClick: () => {\n        dispatch(actions.refresh());\n    },\n\n    handleOpenDialogClick: () => {\n        dispatch(actions.openDialog());\n    },\n\n    handleCloseDialogClick: () => {\n        dispatch(actions.closeDialog());\n    },\n\n    handleOpenFormulaClick: () => {\n        dispatch(actions.openFormula());\n    },\n\n    handleCloseFormulaClick: () => {\n        dispatch(actions.closeFormula());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import { State, Point } from '../../store/BasicState';\nimport { addHelperStyles } from '.';\nimport { helperStyle, warn } from '../../pages/withRoot';\n\n// import { watchRecord } from '../../store/edit-distance/sagas';\n\nconst isMatch = ({ row, col }: Point, r: number, c: number) => (row === r && col === c);\n\nconst newTableStyles = (table: React.CSSProperties[][]): React.CSSProperties[][] =>\n    table.map(row => row.map(() => ({})));\n\nconst updateTable = (table: (string | number)[][], point: Point, value: number): (string | number)[][] =>\n    table.map((row, rowIndex) => {\n        return row.map((cell, colIndex) => isMatch(point, rowIndex, colIndex) ? value : cell);\n    });\n\nconst nonCorrect = (comparedTable: (string | number)[][], { row, col }: Point, value: number): boolean =>\n    (comparedTable[row][col] !== value);\n\nconst getLastCell = (table: (string | number)[][]): Point => {\n    const row = table.length - 1;\n    const col = table[row].length - 1;\n    return { row, col };\n};\n\nconst isLastCell = (table: (string | number)[][], point: Point): boolean => {\n    const { row, col } = getLastCell(table);\n    return isMatch(point, row, col);\n};\n\nconst getNextPoint = (table: (string | number)[][], { row, col }: Point): Point =>\n    (col === table[row].length - 1) ? { row: row + 1, col: 2 } : { row, col: col + 1 };\n\nconst update = (value: number, state: State): State => {\n\n    const { currentPoint, errors, success } = state;\n\n    const startTime: number = (state.startTime) ? state.startTime : new Date().getTime();\n\n    if (success) {\n        return state;\n    }\n\n    const steps = state.steps + 1;\n    const table = updateTable(state.table, currentPoint, value);\n    const tableStyles = newTableStyles(state.tableStyles);\n\n    if (nonCorrect(state.comparedTable, currentPoint, value)) {\n        tableStyles[currentPoint.row][currentPoint.col] = { backgroundColor: warn };\n        addHelperStyles(tableStyles, currentPoint);\n        return { ...state, startTime, steps, errors: errors + 1, table, tableStyles };\n    }\n\n    if (isLastCell(table, currentPoint)) {\n        const finishTime = new Date().getTime();\n        const lastCell = getLastCell(table);\n        tableStyles[lastCell.row][lastCell.col] = helperStyle;\n        return { ...state, startTime, finishTime, steps, table, tableStyles, success: true };\n    }\n\n    const nextPoint = getNextPoint(table, currentPoint);\n    table[nextPoint.row][nextPoint.col] = '?';\n    addHelperStyles(tableStyles, nextPoint);\n\n    return { ...state, steps, startTime, table, tableStyles, currentPoint: nextPoint };\n};\n\nexport default update;\n","import update from '../../algorithms/edit-distance/update';\nimport { Reducer } from 'redux';\nimport * as Constants from './constants';\nimport { create } from './initialState';\nimport { State } from '../BasicState';\nimport { Action } from './actions';\n\nconst reducer: Reducer<State> = (state: State = create(), action: Action) => {\n    switch (action.type) {\n        case Constants.BUTTON_CLICK:\n            return update(Number(action.payload), state);\n        case Constants.OPEN_DIALOG_CLICK:\n            return { ...state, dialogOpen: true };\n        case Constants.CLOSE_DIALOG_CLICK:\n            return { ...state, dialogOpen: false };\n        case Constants.OPEN_FORMULA_CLICK:\n            return { ...state, formulaOpen: true };\n        case Constants.CLOSE_FORMULA_CLICK:\n            return { ...state, formulaOpen: false };\n        case Constants.REFRESH_CLICK:\n            return create();\n        case Constants.RECEIVED_RECORD:\n            return { ...state, loading: false, count: action.payload || 0 };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { call, put, take, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport  { GET_RECORD } from './constants';\nimport { fetchSuccess } from './actions';\nimport { basicInfo } from './initialState';\n\nfunction* getRecord() {\n    const response = yield call(axios.get, `/record/algorithm/${basicInfo.id}`);\n    yield put(fetchSuccess(response.data));\n}\n\nexport function* watchRecord() {\n    yield take(GET_RECORD);\n    yield fork(getRecord);\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { ApplicationState } from '..';\nimport Card from '../../components/Card';\nimport * as actions from './actions';\n\nconst mapStateToProps = ({ knapsackProblem }: ApplicationState) => ({\n    ...knapsackProblem,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<actions.Action>) => ({\n    handleButtonClick: (data: number | string) => {\n        dispatch(actions.buttonClick(data));\n    },\n\n    handleRefreshClick: () => {\n        dispatch(actions.refresh());\n    },\n\n    handleOpenDialogClick: () => {\n        dispatch(actions.openDialog());\n    },\n\n    handleCloseDialogClick: () => {\n        dispatch(actions.closeDialog());\n    },\n\n    handleOpenFormulaClick: () => {\n        dispatch(actions.openFormula());\n    },\n\n    handleCloseFormulaClick: () => {\n        dispatch(actions.closeFormula());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import { State, Point } from '../../store/BasicState';\nimport { helperStyle, helperStyleSecondary, helperStyleThird } from '../../pages/withRoot';\n\nconst addHelperStyles = (styles: React.CSSProperties[][], { row, col }: Point, state: State) => {\n    const { comparedTable } = state;\n    const itemWeight: number = Number(comparedTable[row][1]);\n    const currentWeight: number = col - 2;\n\n    styles[0][col] = helperStyleThird;\n    styles[row][1] = helperStyleThird;\n\n    styles[row - 1][col] = helperStyleSecondary;\n    styles[row][0] = helperStyle;\n    if (itemWeight <= currentWeight) {\n        styles[row - 1][col - itemWeight] = helperStyle;\n    }\n};\n\nconst getLastCell = (table: (string | number)[][]): Point => {\n    const row = table.length - 1;\n    const col = table[row].length - 1;\n    return { row, col };\n};\n\nconst isMatch = ({ row, col }: Point, r: number, c: number) => (row === r && col === c);\n\nconst newTableStyles = (table: React.CSSProperties[][]): React.CSSProperties[][] =>\n    table.map(row => row.map(() => ({})));\n\nconst updateTable = (table: (string | number)[][], point: Point, value: number): (string | number)[][] =>\n    table.map((row, rowIndex) => {\n        return row.map((cell, colIndex) => isMatch(point, rowIndex, colIndex) ? value : cell);\n    });\n\nconst nonCorrect = (comparedTable: (string | number)[][], { row, col }: Point, value: number): boolean =>\n    (comparedTable[row][col] !== value);\n\nconst isLastCell = (table: (string | number)[][], point: Point): boolean => {\n    const { row, col } = getLastCell(table);\n    return isMatch(point, row, col);\n};\n\nconst getNextPoint = (table: (string | number)[][], { row, col }: Point): Point =>\n    (col === table[row].length - 1) ? { row: row + 1, col: 3 } : { row, col: col + 1 };\n\nconst update = (value: number, state: State): State => {\n    const { currentPoint, errors, success } = state;\n\n    const startTime: number = (state.startTime) ? state.startTime : new Date().getTime();\n\n    if (success) {\n        return state;\n    }\n\n    const steps = state.steps + 1;\n    const table = updateTable(state.table, currentPoint, value);\n    const tableStyles = newTableStyles(state.tableStyles);\n\n    if (nonCorrect(state.comparedTable, currentPoint, value)) {\n        tableStyles[currentPoint.row][currentPoint.col] = { backgroundColor: 'red' };\n        addHelperStyles(tableStyles, currentPoint, state);\n        return { ...state, startTime, steps, errors: errors + 1, table, tableStyles };\n    }\n\n    if (isLastCell(table, currentPoint)) {\n        const finishTime = new Date().getTime();\n        const lastCell = getLastCell(table);\n        tableStyles[lastCell.row][lastCell.col] = helperStyle;\n        return { ...state, startTime, finishTime, steps, table, tableStyles, success: true };\n    }\n\n    const nextPoint = getNextPoint(table, currentPoint);\n    table[nextPoint.row][nextPoint.col] = '?';\n    addHelperStyles(tableStyles, nextPoint, state);\n\n    return { ...state, steps, startTime, table, tableStyles, currentPoint: nextPoint };\n};\n\nexport default update;\n","import update from '../../algorithms/knapsack-problem/update';\nimport { Reducer } from 'redux';\nimport * as Constants from './constants';\nimport { create } from './initialState';\nimport { State } from '../BasicState';\nimport { Action } from './actions';\n\nconst reducer: Reducer<State> = (state: State = create(), action: Action) => {\n    switch (action.type) {\n        case Constants.BUTTON_CLICK:\n            return update(Number(action.payload), state);\n        case Constants.OPEN_DIALOG_CLICK:\n            return { ...state, dialogOpen: true };\n        case Constants.CLOSE_DIALOG_CLICK:\n            return { ...state, dialogOpen: false };\n        case Constants.OPEN_FORMULA_CLICK:\n            return { ...state, formulaOpen: true };\n        case Constants.CLOSE_FORMULA_CLICK:\n            return { ...state, formulaOpen: false };\n        case Constants.REFRESH_CLICK:\n            return create();\n        case Constants.RECEIVED_RECORD:\n            return { ...state, loading: false, count: action.payload || 0 };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { call, put, take, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport  { GET_RECORD } from './constants';\nimport { fetchSuccess } from './actions';\nimport { basicInfo } from './initialState';\n\nfunction* getRecord() {\n    const response = yield call(axios.get, `/record/algorithm/${basicInfo.id}`);\n    yield put(fetchSuccess(response.data));\n}\n\nexport function* watchRecord() {\n    yield take(GET_RECORD);\n    yield fork(getRecord);\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { ApplicationState } from '..';\nimport Card from '../../components/Card';\nimport * as actions from './actions';\n\nconst mapStateToProps = ({ rodCuttingProblem }: ApplicationState) => ({\n    ...rodCuttingProblem,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<actions.Action>) => ({\n    handleButtonClick: (data: number | string) => {\n        dispatch(actions.buttonClick(data));\n    },\n\n    handleRefreshClick: () => {\n        dispatch(actions.refresh());\n    },\n\n    handleOpenDialogClick: () => {\n        dispatch(actions.openDialog());\n    },\n\n    handleCloseDialogClick: () => {\n        dispatch(actions.closeDialog());\n    },\n\n    handleOpenFormulaClick: () => {\n        dispatch(actions.openFormula());\n    },\n\n    handleCloseFormulaClick: () => {\n        dispatch(actions.closeFormula());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import { State, Point } from '../../store/BasicState';\nimport { helperStyle, helperStyleSecondary, helperStyleThird } from '../../pages/withRoot';\n\nconst addHelperStyles = (styles: React.CSSProperties[][], { row, col }: Point, state: State) => {\n    const { comparedTable } = state;\n    const itemWeight: number = Number(comparedTable[row][1]);\n    const currentWeight: number = col - 2;\n\n    styles[0][col] = helperStyleThird;\n    styles[row][1] = helperStyleThird;\n\n    styles[row - 1][col] = helperStyleSecondary;\n    styles[row][0] = helperStyle;\n    if (itemWeight <= currentWeight) {\n        styles[row][col - itemWeight] = helperStyle;\n    }\n};\n\nconst getLastCell = (table: (string | number)[][]): Point => {\n    const row = table.length - 1;\n    const col = table[row].length - 1;\n    return { row, col };\n};\n\nconst isMatch = ({ row, col }: Point, r: number, c: number) => (row === r && col === c);\n\nconst newTableStyles = (table: React.CSSProperties[][]): React.CSSProperties[][] =>\n    table.map(row => row.map(() => ({})));\n\nconst updateTable = (table: (string | number)[][], point: Point, value: number): (string | number)[][] =>\n    table.map((row, rowIndex) => {\n        return row.map((cell, colIndex) => isMatch(point, rowIndex, colIndex) ? value : cell);\n    });\n\nconst nonCorrect = (comparedTable: (string | number)[][], { row, col }: Point, value: number): boolean =>\n    (comparedTable[row][col] !== value);\n\nconst isLastCell = (table: (string | number)[][], point: Point): boolean => {\n    const { row, col } = getLastCell(table);\n    return isMatch(point, row, col);\n};\n\nconst getNextPoint = (table: (string | number)[][], { row, col }: Point): Point =>\n    (col === table[row].length - 1) ? { row: row + 1, col: 3 } : { row, col: col + 1 };\n\nconst update = (value: number, state: State): State => {\n\n    const { currentPoint, errors, success } = state;\n\n    const startTime: number = (state.startTime) ? state.startTime : new Date().getTime();\n\n    if (success) {\n        return state;\n    }\n\n    const steps = state.steps + 1;\n    const table = updateTable(state.table, currentPoint, value);\n    const tableStyles = newTableStyles(state.tableStyles);\n\n    if (nonCorrect(state.comparedTable, currentPoint, value)) {\n        tableStyles[currentPoint.row][currentPoint.col] = { backgroundColor: 'red' };\n        addHelperStyles(tableStyles, currentPoint, state);\n        return { ...state, startTime, steps, errors: errors + 1, table, tableStyles };\n    }\n\n    if (isLastCell(table, currentPoint)) {\n        const finishTime = new Date().getTime();\n        const lastCell = getLastCell(table);\n        tableStyles[lastCell.row][lastCell.col] = helperStyle;\n        return { ...state, startTime, finishTime, steps, table, tableStyles, success: true };\n    }\n\n    const nextPoint = getNextPoint(table, currentPoint);\n    table[nextPoint.row][nextPoint.col] = '?';\n    addHelperStyles(tableStyles, nextPoint, state);\n\n    return { ...state, steps, startTime, table, tableStyles, currentPoint: nextPoint };\n};\n\nexport default update;\n","import update from '../../algorithms/rod-cutting-problem/update';\nimport { Reducer } from 'redux';\nimport * as Constants from './constants';\nimport { create } from './initialState';\nimport { State } from '../BasicState';\nimport { Action } from './actions';\n\nconst reducer: Reducer<State> = (state: State = create(), action: Action) => {\n    switch (action.type) {\n        case Constants.BUTTON_CLICK:\n            return update(Number(action.payload), state);\n        case Constants.OPEN_DIALOG_CLICK:\n            return { ...state, dialogOpen: true };\n        case Constants.CLOSE_DIALOG_CLICK:\n            return { ...state, dialogOpen: false };\n        case Constants.OPEN_FORMULA_CLICK:\n            return { ...state, formulaOpen: true };\n        case Constants.CLOSE_FORMULA_CLICK:\n            return { ...state, formulaOpen: false };\n        case Constants.REFRESH_CLICK:\n            return create();\n        case Constants.RECEIVED_RECORD:\n            return { ...state, loading: false, count: action.payload || 0 };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { call, put, take, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport  { GET_RECORD } from './constants';\nimport { fetchSuccess } from './actions';\nimport { basicInfo } from './initialState';\n\nfunction* getRecord() {\n    const response = yield call(axios.get, `/record/algorithm/${basicInfo.id}`);\n    yield put(fetchSuccess(response.data));\n}\n\nexport function* watchRecord() {\n    yield take(GET_RECORD);\n    yield fork(getRecord);\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { ApplicationState } from '..';\nimport Card from '../../components/Card';\nimport * as actions from './actions';\n\nconst mapStateToProps = ({ wildcardMatching }: ApplicationState) => ({\n    ...wildcardMatching,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<actions.Action>) => ({\n    handleButtonClick: (data: number | string) => {\n        dispatch(actions.buttonClick(data));\n    },\n\n    handleRefreshClick: () => {\n        dispatch(actions.refresh());\n    },\n\n    handleOpenDialogClick: () => {\n        dispatch(actions.openDialog());\n    },\n\n    handleCloseDialogClick: () => {\n        dispatch(actions.closeDialog());\n    },\n\n    handleOpenFormulaClick: () => {\n        dispatch(actions.openFormula());\n    },\n\n    handleCloseFormulaClick: () => {\n        dispatch(actions.closeFormula());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import { State, Point } from '../../store/BasicState';\nimport { addHelperStyles } from '.';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst getLastCell = (table: (string | boolean)[][]): Point => {\n    const row = table.length - 1;\n    const col = table[row].length - 1;\n    return { row, col };\n};\n\nconst isMatch = ({ row, col }: Point, r: number, c: number) => (row === r && col === c);\n\nconst newTableStyles = (table: React.CSSProperties[][]): React.CSSProperties[][] => {\n    return table.map(row => row.map(() => ({})));\n};\n\nconst booleanToString = (value: boolean): string => {\n    return value ? 'T' : 'F';\n};\n\nconst updateTable = (table: (string | boolean)[][], point: Point, value: boolean): (string | boolean)[][] =>\n    table.map((row, rowIndex) => {\n        return row.map((cell, colIndex) => isMatch(point, rowIndex, colIndex) ? booleanToString(value) : cell);\n    });\n\nconst nonCorrect = (comparedTable: (string | boolean)[][], { row, col }: Point, value: boolean): boolean =>\n    (comparedTable[row][col] !== value);\n\nconst isLastCell = (table: (string | boolean)[][], point: Point): boolean => {\n    const { row, col } = getLastCell(table);\n    return isMatch(point, row, col);\n};\n\nconst getNextPoint = (table: (string | boolean)[][], { row, col }: Point): Point =>\n    (col === table[row].length - 1) ? { row: row + 1, col: 2 } : { row, col: col + 1 };\n\nconst update = (value: boolean, state: State): State => {\n    const { currentPoint, errors, success } = state;\n\n    const startTime: number = (state.startTime) ? state.startTime : new Date().getTime();\n\n    if (success) {\n        return state;\n    }\n\n    const steps = state.steps + 1;\n    const table = updateTable(state.table, currentPoint, value);\n    const tableStyles = newTableStyles(state.tableStyles);\n\n    if (nonCorrect(state.comparedTable, currentPoint, value)) {\n        tableStyles[currentPoint.row][currentPoint.col] = { backgroundColor: 'red' };\n        addHelperStyles(tableStyles, currentPoint);\n        return { ...state, startTime, steps, errors: errors + 1, table, tableStyles };\n    }\n\n    if (isLastCell(table, currentPoint)) {\n        const finishTime = new Date().getTime();\n        const lastCell = getLastCell(table);\n        tableStyles[lastCell.row][lastCell.col] = helperStyle;\n        return { ...state, startTime, finishTime, steps, table, tableStyles, success: true };\n    }\n\n    const nextPoint = getNextPoint(table, currentPoint);\n    table[nextPoint.row][nextPoint.col] = '?';\n    addHelperStyles(tableStyles, nextPoint);\n\n    return { ...state, steps, startTime, table, tableStyles, currentPoint: nextPoint };\n};\n\nexport default update;\n","import update from '../../algorithms/wildcard-matching/update';\nimport { Reducer } from 'redux';\nimport * as Constants from './constants';\nimport { create } from './initialState';\nimport { State } from '../BasicState';\nimport { Action } from './actions';\n\nconst reducer: Reducer<State> = (state: State = create(), action: Action) => {\n    switch (action.type) {\n        case Constants.BUTTON_CLICK:\n            return update(Boolean(action.payload), state);\n        case Constants.OPEN_DIALOG_CLICK:\n            return { ...state, dialogOpen: true };\n        case Constants.CLOSE_DIALOG_CLICK:\n            return { ...state, dialogOpen: false };\n        case Constants.OPEN_FORMULA_CLICK:\n            return { ...state, formulaOpen: true };\n        case Constants.CLOSE_FORMULA_CLICK:\n            return { ...state, formulaOpen: false };\n        case Constants.REFRESH_CLICK:\n            return create();\n        case Constants.RECEIVED_RECORD:\n            return { ...state, loading: false, count: action.payload || 0 };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { call, put, take, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport  { GET_RECORD } from './constants';\nimport { fetchSuccess } from './actions';\nimport { basicInfo } from './initialState';\n\nfunction* getRecord() {\n    const response = yield call(axios.get, `/record/algorithm/${basicInfo.id}`);\n    yield put(fetchSuccess(response.data));\n}\n\nexport function* watchRecord() {\n    yield take(GET_RECORD);\n    yield fork(getRecord);\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { ApplicationState } from '..';\nimport Card from '../../components/Card';\nimport * as actions from './actions';\n\nconst mapStateToProps = ({ regularExpression }: ApplicationState) => ({\n    ...regularExpression,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<actions.Action>) => ({\n    handleButtonClick: (data: number | string) => {\n        dispatch(actions.buttonClick(data));\n    },\n\n    handleRefreshClick: () => {\n        dispatch(actions.refresh());\n    },\n\n    handleOpenDialogClick: () => {\n        dispatch(actions.openDialog());\n    },\n\n    handleCloseDialogClick: () => {\n        dispatch(actions.closeDialog());\n    },\n\n    handleOpenFormulaClick: () => {\n        dispatch(actions.openFormula());\n    },\n\n    handleCloseFormulaClick: () => {\n        dispatch(actions.closeFormula());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import { State, Point } from '../../store/BasicState';\nimport { addHelperStyles } from '.';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst getLastCell = (table: (string | boolean)[][]): Point => {\n    const row = table.length - 1;\n    const col = table[row].length - 1;\n    return { row, col };\n};\n\nconst isMatch = ({ row, col }: Point, r: number, c: number) => (row === r && col === c);\n\nconst newTableStyles = (table: React.CSSProperties[][]): React.CSSProperties[][] => {\n    return table.map(row => row.map(() => ({})));\n};\n\nconst booleanToString = (value: boolean): string => {\n    return value ? 'T' : 'F';\n};\n\nconst updateTable = (table: (string | boolean)[][], point: Point, value: boolean): (string | boolean)[][] =>\n    table.map((row, rowIndex) => {\n        return row.map((cell, colIndex) => isMatch(point, rowIndex, colIndex) ? booleanToString(value) : cell);\n    });\n\nconst nonCorrect = (comparedTable: (string | boolean)[][], { row, col }: Point, value: boolean): boolean =>\n    (comparedTable[row][col] !== value);\n\nconst isLastCell = (table: (string | boolean)[][], point: Point): boolean => {\n    const { row, col } = getLastCell(table);\n    return isMatch(point, row, col);\n};\n\nconst getNextPoint = (table: (string | boolean)[][], { row, col }: Point): Point =>\n    (col === table[row].length - 1) ? { row: row + 1, col: 2 } : { row, col: col + 1 };\n\nconst update = (value: boolean, state: State): State => {\n    const { currentPoint, errors, success } = state;\n\n    const startTime: number = (state.startTime) ? state.startTime : new Date().getTime();\n\n    if (success) {\n        return state;\n    }\n\n    const steps = state.steps + 1;\n    const table = updateTable(state.table, currentPoint, value);\n    const tableStyles = newTableStyles(state.tableStyles);\n\n    if (nonCorrect(state.comparedTable, currentPoint, value)) {\n        tableStyles[currentPoint.row][currentPoint.col] = { backgroundColor: 'red' };\n        addHelperStyles(tableStyles, currentPoint);\n        return { ...state, startTime, steps, errors: errors + 1, table, tableStyles };\n    }\n\n    if (isLastCell(table, currentPoint)) {\n        const finishTime = new Date().getTime();\n        const lastCell = getLastCell(table);\n        tableStyles[lastCell.row][lastCell.col] = helperStyle;\n        return { ...state, startTime, finishTime, steps, table, tableStyles, success: true };\n    }\n\n    const nextPoint = getNextPoint(table, currentPoint);\n    table[nextPoint.row][nextPoint.col] = '?';\n    addHelperStyles(tableStyles, nextPoint);\n\n    return { ...state, steps, startTime, table, tableStyles, currentPoint: nextPoint };\n};\n\nexport default update;\n","import update from '../../algorithms/regular-expression/update';\nimport { Reducer } from 'redux';\nimport * as Constants from './constants';\nimport { create } from './initialState';\nimport { State } from '../BasicState';\nimport { Action } from './actions';\n\nconst reducer: Reducer<State> = (state: State = create(), action: Action) => {\n    switch (action.type) {\n        case Constants.BUTTON_CLICK:\n            return update(Boolean(action.payload), state);\n        case Constants.OPEN_DIALOG_CLICK:\n            return { ...state, dialogOpen: true };\n        case Constants.CLOSE_DIALOG_CLICK:\n            return { ...state, dialogOpen: false };\n        case Constants.OPEN_FORMULA_CLICK:\n            return { ...state, formulaOpen: true };\n        case Constants.CLOSE_FORMULA_CLICK:\n            return { ...state, formulaOpen: false };\n        case Constants.REFRESH_CLICK:\n            return create();\n        case Constants.RECEIVED_RECORD:\n            return { ...state, loading: false, count: action.payload || 0 };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { call, put, take, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport  { GET_RECORD } from './constants';\nimport { fetchSuccess } from './actions';\nimport { basicInfo } from './initialState';\n\nfunction* getRecord() {\n    const response = yield call(axios.get, `/record/algorithm/${basicInfo.id}`);\n    yield put(fetchSuccess(response.data));\n}\n\nexport function* watchRecord() {\n    yield take(GET_RECORD);\n    yield fork(getRecord);\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { ApplicationState } from '..';\nimport Card from '../../components/Card';\nimport * as actions from './actions';\n\nconst mapStateToProps = ({ isSubsequence }: ApplicationState) => ({\n    ...isSubsequence,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<actions.Action>) => ({\n    handleButtonClick: (data: number | string) => {\n        dispatch(actions.buttonClick(data));\n    },\n\n    handleRefreshClick: () => {\n        dispatch(actions.refresh());\n    },\n\n    handleOpenDialogClick: () => {\n        dispatch(actions.openDialog());\n    },\n\n    handleCloseDialogClick: () => {\n        dispatch(actions.closeDialog());\n    },\n\n    handleOpenFormulaClick: () => {\n        dispatch(actions.openFormula());\n    },\n\n    handleCloseFormulaClick: () => {\n        dispatch(actions.closeFormula());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import { State, Point } from '../../store/BasicState';\nimport { addHelperStyles } from '.';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst getLastCell = (table: (string | boolean)[][]): Point => {\n    const row = table.length - 1;\n    const col = table[row].length - 1;\n    return { row, col };\n};\n\nconst booleanToString = (value: boolean): string => (value ? 'T' : 'F');\n\nconst isMatch = ({ row, col }: Point, r: number, c: number) => (row === r && col === c);\n\nconst newTableStyles = (table: React.CSSProperties[][]): React.CSSProperties[][] =>\n    table.map(row => row.map(() => ({})));\n\nconst updateTable = (table: (string | boolean)[][], point: Point, value: boolean): (string | boolean)[][] =>\n    table.map((row, rowIndex) => {\n        return row.map((cell, colIndex) => isMatch(point, rowIndex, colIndex) ? booleanToString(value) : cell);\n    });\n\nconst nonCorrect = (comparedTable: (string | boolean)[][], { row, col }: Point, value: boolean): boolean =>\n    (comparedTable[row][col] !== value);\n\nconst isLastCell = (table: (string | boolean)[][], point: Point): boolean => {\n    const { row, col } = getLastCell(table);\n    return isMatch(point, row, col);\n};\n\nconst getNextPoint = (table: (string | boolean)[][], { row, col }: Point): Point =>\n    (col === table[row].length - 1) ? { row: row + 1, col: 2 } : { row, col: col + 1 };\n\nconst update = (value: boolean, state: State): State => {\n\n    const { currentPoint, errors, success } = state;\n\n    const startTime: number = (state.startTime) ? state.startTime : new Date().getTime();\n\n    if (success) {\n        return state;\n    }\n\n    const steps = state.steps + 1;\n    const table = updateTable(state.table, currentPoint, value);\n    const tableStyles = newTableStyles(state.tableStyles);\n\n    if (nonCorrect(state.comparedTable, currentPoint, value)) {\n        tableStyles[currentPoint.row][currentPoint.col] = { backgroundColor: 'red' };\n        addHelperStyles(tableStyles, currentPoint);\n        return { ...state, startTime, steps, errors: errors + 1, table, tableStyles };\n    }\n\n    if (isLastCell(table, currentPoint)) {\n        const finishTime = new Date().getTime();\n        const lastCell = getLastCell(table);\n        tableStyles[lastCell.row][lastCell.col] = helperStyle;\n        return { ...state, startTime, finishTime, steps, table, tableStyles, success: true };\n    }\n\n    const nextPoint = getNextPoint(table, currentPoint);\n    table[nextPoint.row][nextPoint.col] = '?';\n    addHelperStyles(tableStyles, nextPoint);\n\n    return { ...state, steps, startTime, table, tableStyles, currentPoint: nextPoint };\n};\n\nexport default update;\n","import update from '../../algorithms/is-subsequence/update';\nimport { Reducer } from 'redux';\nimport * as Constants from './constants';\nimport { create } from './initialState';\nimport { State } from '../BasicState';\nimport { Action } from './actions';\n\nconst reducer: Reducer<State> = (state: State = create(), action: Action) => {\n    switch (action.type) {\n        case Constants.BUTTON_CLICK:\n            return update(Boolean(action.payload), state);\n        case Constants.OPEN_DIALOG_CLICK:\n            return { ...state, dialogOpen: true };\n        case Constants.CLOSE_DIALOG_CLICK:\n            return { ...state, dialogOpen: false };\n        case Constants.OPEN_FORMULA_CLICK:\n            return { ...state, formulaOpen: true };\n        case Constants.CLOSE_FORMULA_CLICK:\n            return { ...state, formulaOpen: false };\n        case Constants.REFRESH_CLICK:\n            return create();\n        case Constants.RECEIVED_RECORD:\n            return { ...state, loading: false, count: action.payload || 0 };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { call, put, take, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport  { GET_RECORD } from './constants';\nimport { fetchSuccess } from './actions';\nimport { basicInfo } from './initialState';\n\nfunction* getRecord() {\n    const response = yield call(axios.get, `/record/algorithm/${basicInfo.id}`);\n    yield put(fetchSuccess(response.data));\n}\n\nexport function* watchRecord() {\n    yield take(GET_RECORD);\n    yield fork(getRecord);\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { ApplicationState } from '..';\nimport Card from '../../components/Card';\nimport * as actions from './actions';\n\nconst mapStateToProps = ({ subsetSumProblem }: ApplicationState) => ({\n    ...subsetSumProblem,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<actions.Action>) => ({\n    handleButtonClick: (data: number | string) => {\n        dispatch(actions.buttonClick(data));\n    },\n\n    handleRefreshClick: () => {\n        dispatch(actions.refresh());\n    },\n\n    handleOpenDialogClick: () => {\n        dispatch(actions.openDialog());\n    },\n\n    handleCloseDialogClick: () => {\n        dispatch(actions.closeDialog());\n    },\n\n    handleOpenFormulaClick: () => {\n        dispatch(actions.openFormula());\n    },\n\n    handleCloseFormulaClick: () => {\n        dispatch(actions.closeFormula());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import { State, Point } from '../../store/BasicState';\nimport { addHelperStyles } from '.';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst getLastCell = (table: (string | boolean)[][]): Point => {\n    const row = table.length - 1;\n    const col = table[row].length - 1;\n    return { row, col };\n};\n\nconst booleanToString = (value: boolean): string => (value ? 'T' : 'F');\n\nconst isMatch = ({ row, col }: Point, r: number, c: number) => (row === r && col === c);\n\nconst newTableStyles = (table: React.CSSProperties[][]): React.CSSProperties[][] =>\n    table.map(row => row.map(() => ({})));\n\nconst updateTable = (table: (string | boolean)[][], point: Point, value: boolean): (string | boolean)[][] =>\n    table.map((row, rowIndex) => {\n        return row.map((cell, colIndex) => isMatch(point, rowIndex, colIndex) ? booleanToString(value) : cell);\n    });\n\nconst nonCorrect = (comparedTable: (string | boolean)[][], { row, col }: Point, value: boolean): boolean =>\n    (comparedTable[row][col] !== value);\n\nconst isLastCell = (table: (string | boolean)[][], point: Point): boolean => {\n    const { row, col } = getLastCell(table);\n    return isMatch(point, row, col);\n};\n\nconst getNextPoint = (table: (string | boolean)[][], { row, col }: Point): Point =>\n    (col === table[row].length - 1) ? { row: row + 1, col: 2 } : { row, col: col + 1 };\n\nconst update = (value: boolean, state: State): State => {\n\n    const { currentPoint, errors, success } = state;\n\n    const startTime: number = (state.startTime) ? state.startTime : new Date().getTime();\n\n    if (success) {\n        return state;\n    }\n\n    const steps = state.steps + 1;\n    const table = updateTable(state.table, currentPoint, value);\n    const tableStyles = newTableStyles(state.tableStyles);\n\n    if (nonCorrect(state.comparedTable, currentPoint, value)) {\n        tableStyles[currentPoint.row][currentPoint.col] = { backgroundColor: 'red' };\n        addHelperStyles(tableStyles, currentPoint);\n        return { ...state, startTime, steps, errors: errors + 1, table, tableStyles };\n    }\n\n    if (isLastCell(table, currentPoint)) {\n        const finishTime = new Date().getTime();\n        const lastCell = getLastCell(table);\n        tableStyles[lastCell.row][lastCell.col] = helperStyle;\n        return { ...state, startTime, finishTime, steps, table, tableStyles, success: true };\n    }\n\n    const nextPoint = getNextPoint(table, currentPoint);\n    table[nextPoint.row][nextPoint.col] = '?';\n    addHelperStyles(tableStyles, nextPoint);\n\n    return { ...state, steps, startTime, table, tableStyles, currentPoint: nextPoint };\n};\n\nexport default update;\n","import update from '../../algorithms/subset-sum-problem/update';\nimport { Reducer } from 'redux';\nimport * as Constants from './constants';\nimport { create } from './initialState';\nimport { State } from '../BasicState';\nimport { Action } from './actions';\n\nconst reducer: Reducer<State> = (state: State = create(), action: Action) => {\n    switch (action.type) {\n        case Constants.BUTTON_CLICK:\n            return update(Boolean(action.payload), state);\n        case Constants.OPEN_DIALOG_CLICK:\n            return { ...state, dialogOpen: true };\n        case Constants.CLOSE_DIALOG_CLICK:\n            return { ...state, dialogOpen: false };\n        case Constants.OPEN_FORMULA_CLICK:\n            return { ...state, formulaOpen: true };\n        case Constants.CLOSE_FORMULA_CLICK:\n            return { ...state, formulaOpen: false };\n        case Constants.REFRESH_CLICK:\n            return create();\n        case Constants.RECEIVED_RECORD:\n            return { ...state, loading: false, count: action.payload || 0 };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { call, put, take, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport  { GET_RECORD } from './constants';\nimport { fetchSuccess } from './actions';\nimport { basicInfo } from './initialState';\n\nfunction* getRecord() {\n    const response = yield call(axios.get, `/record/algorithm/${basicInfo.id}`);\n    yield put(fetchSuccess(response.data));\n}\n\nexport function* watchRecord() {\n    yield take(GET_RECORD);\n    yield fork(getRecord);\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { ApplicationState } from '..';\nimport Card from '../../components/Card';\nimport * as actions from './actions';\n\nconst mapStateToProps = ({ minimumPathSum }: ApplicationState) => ({\n    ...minimumPathSum,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<actions.Action>) => ({\n    handleButtonClick: (data: number | string) => {\n        dispatch(actions.buttonClick(data));\n    },\n\n    handleRefreshClick: () => {\n        dispatch(actions.refresh());\n    },\n\n    handleOpenDialogClick: () => {\n        dispatch(actions.openDialog());\n    },\n\n    handleCloseDialogClick: () => {\n        dispatch(actions.closeDialog());\n    },\n\n    handleOpenFormulaClick: () => {\n        dispatch(actions.openFormula());\n    },\n\n    handleCloseFormulaClick: () => {\n        dispatch(actions.closeFormula());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import { State, Point } from '../../store/BasicState';\nimport { addHelperStyles } from '.';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst isMatch = ({ row, col }: Point, r: number, c: number) => (row === r && col === c);\n\nconst getLastPoint = (table: any[][]): Point => {\n    const row = table.length - 1;\n    const col = table[row].length - 1;\n    return { row, col };\n};\n\nconst newTableStyles = (table: React.CSSProperties[][]): React.CSSProperties[][] =>\n    table.map(row => row.map(() => ({})));\n\nconst updateTable = (table: (string | number)[][], point: Point, value: number): (string | number)[][] =>\n    table.map((row, rowIndex) => {\n        return row.map((cell, colIndex) => isMatch(point, rowIndex, colIndex) ? value : cell);\n    });\n\nconst nonCorrect = (comparedTable: (string | number)[][], { row, col }: Point, value: number): boolean =>\n    (comparedTable[row][col] !== value);\n\nconst isLastCell = (table: (string | number)[][], point: Point): boolean => {\n    const row = table.length - 1;\n    const col = table[row].length - 1;\n    return isMatch(point, row, col);\n};\n\nconst getNextPoint = (table: (string | number)[][], { row, col }: Point): Point => {\n    if (row === 0) {\n        if (col === table[0].length - 1) {\n            return { row: 1, col: 0 };\n        } else {\n            return { row, col: col + 1 };\n        }\n    } else if (row !== 0 && col === 0) {\n        if (row === table.length - 1) {\n            return { row: 1, col: 1 };\n        } else {\n            return { row: row + 1, col };\n        }\n    } else {\n        if (col === table[row].length - 1) {\n            return { row: row + 1, col: 1 };\n        } else {\n            return { row, col: col + 1 };\n        }\n    }\n};\n\nconst update = (value: number, state: State): State => {\n\n    const { currentPoint, errors, success } = state;\n\n    const startTime: number = (state.startTime) ? state.startTime : new Date().getTime();\n\n    if (success) {\n        return state;\n    }\n\n    const steps = state.steps + 1;\n    const tableStyles = newTableStyles(state.tableStyles);\n\n    if (nonCorrect(state.comparedTable, currentPoint, value)) {\n        addHelperStyles(tableStyles, currentPoint);\n        tableStyles[currentPoint.row][currentPoint.col] = { backgroundColor: 'red' };\n        return { ...state, startTime, steps, errors: errors + 1, tableStyles };\n    }\n\n    const table = updateTable(state.table, currentPoint, value);\n\n    if (isLastCell(table, currentPoint)) {\n        const { row, col } = getLastPoint(tableStyles);\n        tableStyles[row][col] = helperStyle;\n        const finishTime = new Date().getTime();\n        return { ...state, startTime, finishTime, steps, table, tableStyles, success: true };\n    }\n\n    const nextPoint = getNextPoint(table, currentPoint);\n    addHelperStyles(tableStyles, nextPoint);\n\n    return { ...state, steps, startTime, table, tableStyles, currentPoint: nextPoint };\n};\n\nexport default update;\n","import update from '../../algorithms/minimum-path-sum/update';\nimport { Reducer } from 'redux';\nimport * as Constants from './constants';\nimport { create } from './initialState';\nimport { State } from '../BasicState';\nimport { Action } from './actions';\n\nconst reducer: Reducer<State> = (state: State = create(), action: Action) => {\n    switch (action.type) {\n        case Constants.BUTTON_CLICK:\n            return update(Number(action.payload), state);\n        case Constants.OPEN_DIALOG_CLICK:\n            return { ...state, dialogOpen: true };\n        case Constants.CLOSE_DIALOG_CLICK:\n            return { ...state, dialogOpen: false };\n        case Constants.OPEN_FORMULA_CLICK:\n            return { ...state, formulaOpen: true };\n        case Constants.CLOSE_FORMULA_CLICK:\n            return { ...state, formulaOpen: false };\n        case Constants.REFRESH_CLICK:\n            return create();\n        case Constants.RECEIVED_RECORD:\n            return { ...state, loading: false, count: action.payload || 0 };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { call, put, take, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport  { GET_RECORD } from './constants';\nimport { fetchSuccess } from './actions';\nimport { basicInfo } from './initialState';\n\nfunction* getRecord() {\n    const response = yield call(axios.get, `/record/algorithm/${basicInfo.id}`);\n    yield put(fetchSuccess(response.data));\n}\n\nexport function* watchRecord() {\n    yield take(GET_RECORD);\n    yield fork(getRecord);\n}\n","import * as React from 'react';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { WithStyles } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport Header from '../../components/MainHeader';\nimport Buttons from '../../components/Buttons';\nimport Dialog from '../../components/Dialog';\nimport Formula from '../../components/Formula';\nimport Table from '../../components/Table';\nimport { helperStyle } from '../../pages/withRoot';\n\nimport { State } from './state';\n\nconst styles = (theme: Theme) => createStyles({});\ninterface Props extends State, WithStyles<typeof styles> { }\n\nconst helperTable = (props: Props) => {\n    const { dictionary } = props;\n    const row = ['DICT:'].concat(dictionary);\n\n    const rowStyles = row.map(() => helperStyle);\n    rowStyles[0] = {};\n\n    const table = [];\n    table.push(row);\n\n    const tableStyles: React.CSSProperties[][] = [];\n    tableStyles.push(rowStyles);\n    return (<Table table={table} tableStyles={tableStyles} />);\n};\n\nconst Algorithm = (props: Props) => (\n    <div style={{ margin: \"auto\", \"textAlign\": \"center\" }}>\n        <Header {...props} />\n        {helperTable(props)}\n        <div style={{ marginBottom: \"10px\" }} />\n        <Table {...props} />\n        <CardContent>\n            <Buttons {...props} />\n        </CardContent>\n        <Dialog  {...props} />\n        <Formula {...props} />\n    </div>\n);\n\nexport default withStyles(styles)(Algorithm);\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { ApplicationState } from '..';\n// import Card from '../../components/Card';\nimport Card from './Card';\nimport * as actions from './actions';\n\nconst mapStateToProps = ({ wordBreak }: ApplicationState) => ({\n    ...wordBreak,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<actions.Action>) => ({\n    handleButtonClick: (data: number | string) => {\n        dispatch(actions.buttonClick(data));\n    },\n\n    handleRefreshClick: () => {\n        dispatch(actions.refresh());\n    },\n\n    handleOpenDialogClick: () => {\n        dispatch(actions.openDialog());\n    },\n\n    handleCloseDialogClick: () => {\n        dispatch(actions.closeDialog());\n    },\n\n    handleOpenFormulaClick: () => {\n        dispatch(actions.openFormula());\n    },\n\n    handleCloseFormulaClick: () => {\n        dispatch(actions.closeFormula());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import { Point } from '../../store/BasicState';\nimport { State } from '../../store/word-break/state';\nimport { addHelperStyles } from '.';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst getLastPoint = (table: (string | boolean)[][]): Point => {\n    const row = 2;\n    const col = table[row].length - 1;\n    return { row, col };\n};\n\nconst booleanToString = (value: boolean): string => (value ? 'T' : 'F');\n\nconst isMatch = ({ row, col }: Point, r: number, c: number) => (row === r && col === c);\n\nconst newTableStyles = (table: React.CSSProperties[][]): React.CSSProperties[][] =>\n    table.map(row => row.map(() => ({})));\n\nconst updateTable = (table: (string | boolean)[][], point: Point, value: boolean): (string | boolean)[][] =>\n    table.map((row, rowIndex) => {\n        return row.map((cell, colIndex) => isMatch(point, rowIndex, colIndex) ? booleanToString(value) : cell);\n    });\n\nconst nonCorrect = (comparedTable: (string | boolean)[][], { row, col }: Point, value: boolean): boolean =>\n    (comparedTable[row][col] !== value);\n\nconst isLastCell = (table: (string | boolean)[][], { row, col }: Point): boolean => {\n    return row === 2 && col === table[2].length - 1;\n};\n\nconst createNextCol = (col: number, len: number, table: (string | boolean)[][]): number => {\n    const nextCol = (col + 1) % table.length;\n    return nextCol < 2 ? 1 + len : nextCol;\n};\n\nconst getNextPoint = (table: (string | boolean)[][], { row, col }: Point, length: number) => {\n    const nextRow = col + 1 === table.length ? 2 : row + 1;\n    const nextLen = col + 1 === table.length ? length + 1 : length;\n    const nextCol = createNextCol(col, nextLen, table);\n    return { row: nextRow, col: nextCol, length: nextLen };\n};\n\nconst update = (value: boolean, state: State): State => {\n\n    const { currentPoint, errors, success, length } = state;\n\n    const startTime: number = (state.startTime) ? state.startTime : new Date().getTime();\n\n    if (success) {\n        return state;\n    }\n\n    const steps = state.steps + 1;\n    const table = updateTable(state.table, currentPoint, value);\n    const tableStyles = newTableStyles(state.tableStyles);\n\n    if (nonCorrect(state.comparedTable, currentPoint, value)) {\n        tableStyles[currentPoint.row][currentPoint.col] = { backgroundColor: 'red' };\n        addHelperStyles(tableStyles, currentPoint);\n        return { ...state, startTime, steps, errors: errors + 1, table, tableStyles };\n    }\n\n    if (isLastCell(table, currentPoint)) {\n        const lastPoint = getLastPoint(table);\n        tableStyles[lastPoint.row][lastPoint.col] = helperStyle;\n        const finishTime = new Date().getTime();\n        return { ...state, startTime, finishTime, steps, table, tableStyles, success: true };\n    }\n\n    const next = getNextPoint(table, currentPoint, length);\n    const point = { row: next.row, col: next.col };\n\n    table[next.row][next.col] = '?';\n    addHelperStyles(tableStyles, point);\n\n    return { ...state, steps, startTime, table, tableStyles, currentPoint: point, length: next.length };\n};\n\nexport default update;\n","import update from '../../algorithms/word-break/update';\nimport { Reducer } from 'redux';\nimport * as Constants from './constants';\nimport { create } from './initialState';\nimport { State } from './state';\nimport { Action } from './actions';\n\nconst reducer: Reducer<State> = (state: State = create(), action: Action) => {\n    switch (action.type) {\n        case Constants.BUTTON_CLICK:\n            return update(Boolean(action.payload), state);\n        case Constants.OPEN_DIALOG_CLICK:\n            return { ...state, dialogOpen: true };\n        case Constants.CLOSE_DIALOG_CLICK:\n            return { ...state, dialogOpen: false };\n        case Constants.OPEN_FORMULA_CLICK:\n            return { ...state, formulaOpen: true };\n        case Constants.CLOSE_FORMULA_CLICK:\n            return { ...state, formulaOpen: false };\n        case Constants.REFRESH_CLICK:\n            return create();\n        case Constants.RECEIVED_RECORD:\n            return { ...state, loading: false, count: action.payload || 0 };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { call, put, take, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport  { GET_RECORD } from './constants';\nimport { fetchSuccess } from './actions';\nimport { basicInfo } from './initialState';\n\nfunction* getRecord() {\n    const response = yield call(axios.get, `/record/algorithm/${basicInfo.id}`);\n    yield put(fetchSuccess(response.data));\n}\n\nexport function* watchRecord() {\n    yield take(GET_RECORD);\n    yield fork(getRecord);\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { ApplicationState } from '..';\nimport Card from '../../components/Card';\nimport * as actions from './actions';\n\nconst mapStateToProps = ({ eggDroppingProblem }: ApplicationState) => ({\n    ...eggDroppingProblem,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<actions.Action>) => ({\n    handleButtonClick: (data: number | string) => {\n        dispatch(actions.buttonClick(data));\n    },\n\n    handleRefreshClick: () => {\n        dispatch(actions.refresh());\n    },\n\n    handleOpenDialogClick: () => {\n        dispatch(actions.openDialog());\n    },\n\n    handleCloseDialogClick: () => {\n        dispatch(actions.closeDialog());\n    },\n\n    handleOpenFormulaClick: () => {\n        dispatch(actions.openFormula());\n    },\n\n    handleCloseFormulaClick: () => {\n        dispatch(actions.closeFormula());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import { State, Point } from '../../store/BasicState';\nimport { addHelperStyles } from '.';\n\nconst isMatch = ({ row, col }: Point, r: number, c: number) => (row === r && col === c);\n\nconst newTableStyles = (table: React.CSSProperties[][]): React.CSSProperties[][] =>\n    table.map(row => row.map(() => ({})));\n\nconst updateTable = (table: (string | number)[][], point: Point, value: number): (string | number)[][] =>\n    table.map((row, rowIndex) => {\n        return row.map((cell, colIndex) => isMatch(point, rowIndex, colIndex) ? value : cell);\n    });\n\nconst nonCorrect = (comparedTable: (string | number)[][], { row, col }: Point, value: number): boolean =>\n    (comparedTable[row][col] !== value);\n\nconst isLastCell = (table: (string | number)[][], point: Point): boolean => {\n    const row = table.length - 1;\n    const col = table[row].length - 1;\n    return isMatch(point, row, col);\n};\n\nconst getNextPoint = (table: (string | number)[][], { row, col }: Point): Point =>\n    (col === table[row].length - 1) ? { row: row + 1, col: 2 } : { row, col: col + 1 };\n\nconst update = (value: number, state: State): State => {\n\n    const { currentPoint, errors, success } = state;\n\n    const startTime: number = (state.startTime) ? state.startTime : new Date().getTime();\n\n    if (success) {\n        return state;\n    }\n\n    const steps = state.steps + 1;\n    const table = updateTable(state.table, currentPoint, value);\n    const tableStyles = newTableStyles(state.tableStyles);\n\n    if (nonCorrect(state.comparedTable, currentPoint, value)) {\n        addHelperStyles(tableStyles, currentPoint);\n        tableStyles[currentPoint.row][currentPoint.col] = { backgroundColor: 'red' };\n        return { ...state, startTime, steps, errors: errors + 1, table, tableStyles };\n    }\n\n    if (isLastCell(table, currentPoint)) {\n        const finishTime = new Date().getTime();\n        return { ...state, startTime, finishTime, steps, table, tableStyles, success: true };\n    }\n\n    const nextPoint = getNextPoint(table, currentPoint);\n    table[nextPoint.row][nextPoint.col] = '?';\n    addHelperStyles(tableStyles, nextPoint);\n\n    return { ...state, steps, startTime, table, tableStyles, currentPoint: nextPoint };\n};\n\nexport default update;\n","import update from '../../algorithms/egg-dropping-problem/update';\nimport { Reducer } from 'redux';\nimport * as Constants from './constants';\nimport { create } from './initialState';\nimport { State } from '../BasicState';\nimport { Action } from './actions';\n\nconst reducer: Reducer<State> = (state: State = create(), action: Action) => {\n    switch (action.type) {\n        case Constants.BUTTON_CLICK:\n            return update(Number(action.payload), state);\n        case Constants.OPEN_DIALOG_CLICK:\n            return { ...state, dialogOpen: true };\n        case Constants.CLOSE_DIALOG_CLICK:\n            return { ...state, dialogOpen: false };\n        case Constants.OPEN_FORMULA_CLICK:\n            return { ...state, formulaOpen: true };\n        case Constants.CLOSE_FORMULA_CLICK:\n            return { ...state, formulaOpen: false };\n        case Constants.REFRESH_CLICK:\n            return create();\n        case Constants.RECEIVED_RECORD:\n            return { ...state, loading: false, count: action.payload || 0 };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { call, put, take, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport  { GET_RECORD } from './constants';\nimport { fetchSuccess } from './actions';\nimport { basicInfo } from './initialState';\n\nfunction* getRecord() {\n    const response = yield call(axios.get, `/record/algorithm/${basicInfo.id}`);\n    yield put(fetchSuccess(response.data));\n}\n\nexport function* watchRecord() {\n    yield take(GET_RECORD);\n    yield fork(getRecord);\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { ApplicationState } from '..';\nimport Card from '../../components/Card';\nimport * as actions from './actions';\n\nconst mapStateToProps = ({ houseRobber }: ApplicationState) => ({\n    ...houseRobber,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<actions.Action>) => ({\n    handleButtonClick: (data: number | string) => {\n        dispatch(actions.buttonClick(data));\n    },\n\n    handleRefreshClick: () => {\n        dispatch(actions.refresh());\n    },\n\n    handleOpenDialogClick: () => {\n        dispatch(actions.openDialog());\n    },\n\n    handleCloseDialogClick: () => {\n        dispatch(actions.closeDialog());\n    },\n\n    handleOpenFormulaClick: () => {\n        dispatch(actions.openFormula());\n    },\n\n    handleCloseFormulaClick: () => {\n        dispatch(actions.closeFormula());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import { State, Point } from '../../store/BasicState';\nimport { addHelperStyles } from '.';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst getLastCell = (table: (string | number)[][]): Point => {\n    const row = table.length - 1;\n    const col = table[row].length - 1;\n    return { row, col };\n};\n\nconst isMatch = ({ row, col }: Point, r: number, c: number) => (row === r && col === c);\n\nconst newTableStyles = (table: React.CSSProperties[][]): React.CSSProperties[][] =>\n    table.map(row => row.map(() => ({})));\n\nconst updateTable = (table: (string | number)[][], point: Point, value: number): (string | number)[][] =>\n    table.map((row, rowIndex) => {\n        return row.map((cell, colIndex) => isMatch(point, rowIndex, colIndex) ? value : cell);\n    });\n\nconst nonCorrect = (comparedTable: (string | number)[][], { row, col }: Point, value: number): boolean =>\n    (comparedTable[row][col] !== value);\n\nconst isLastCell = (table: (string | number)[][], point: Point): boolean => {\n    const { row, col } = getLastCell(table);\n    return isMatch(point, row, col);\n};\n\nconst getNextPoint = (table: (string | number)[][], { row, col }: Point): Point =>\n    (col === table[row].length - 1) ? { row: row + 1, col: 2 } : { row, col: col + 1 };\n\nconst update = (value: number, state: State): State => {\n\n    const { currentPoint, errors, success } = state;\n\n    const startTime: number = (state.startTime) ? state.startTime : new Date().getTime();\n\n    if (success) {\n        return state;\n    }\n\n    const steps = state.steps + 1;\n    const tableStyles = newTableStyles(state.tableStyles);\n\n    if (nonCorrect(state.comparedTable, currentPoint, value)) {\n        tableStyles[currentPoint.row][currentPoint.col] = { backgroundColor: 'red' };\n        addHelperStyles(tableStyles, currentPoint);\n        return { ...state, startTime, steps, errors: errors + 1, tableStyles };\n    }\n\n    const table = updateTable(state.table, currentPoint, value);\n\n    if (isLastCell(table, currentPoint)) {\n        const finishTime = new Date().getTime();\n        const lastCell = getLastCell(table);\n        tableStyles[lastCell.row][lastCell.col] = helperStyle;\n        return { ...state, startTime, finishTime, steps, table, tableStyles, success: true };\n    }\n\n    const nextPoint = getNextPoint(table, currentPoint);\n    addHelperStyles(tableStyles, nextPoint);\n\n    return { ...state, steps, startTime, table, tableStyles, currentPoint: nextPoint };\n};\n\nexport default update;\n","import update from '../../algorithms/house-robber/update';\nimport { Reducer } from 'redux';\nimport * as Constants from './constants';\nimport { create } from './initialState';\nimport { State } from '../BasicState';\nimport { Action } from './actions';\n\nconst reducer: Reducer<State> = (state: State = create(), action: Action) => {\n    switch (action.type) {\n        case Constants.BUTTON_CLICK:\n            return update(Number(action.payload), state);\n        case Constants.OPEN_DIALOG_CLICK:\n            return { ...state, dialogOpen: true };\n        case Constants.CLOSE_DIALOG_CLICK:\n            return { ...state, dialogOpen: false };\n        case Constants.OPEN_FORMULA_CLICK:\n            return { ...state, formulaOpen: true };\n        case Constants.CLOSE_FORMULA_CLICK:\n            return { ...state, formulaOpen: false };\n        case Constants.REFRESH_CLICK:\n            return create();\n        case Constants.RECEIVED_RECORD:\n            return { ...state, loading: false, count: action.payload || 0 };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { call, put, take, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport  { GET_RECORD } from './constants';\nimport { fetchSuccess } from './actions';\nimport { basicInfo } from './initialState';\n\nfunction* getRecord() {\n    const response = yield call(axios.get, `/record/algorithm/${basicInfo.id}`);\n    yield put(fetchSuccess(response.data));\n}\n\nexport function* watchRecord() {\n    yield take(GET_RECORD);\n    yield fork(getRecord);\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { ApplicationState } from '..';\nimport Card from '../../components/Card';\nimport * as actions from './actions';\n\nconst mapStateToProps = ({ palindromePartitioning }: ApplicationState) => ({\n    ...palindromePartitioning,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<actions.Action>) => ({\n    handleButtonClick: (data: number | string) => {\n        dispatch(actions.buttonClick(data));\n    },\n\n    handleRefreshClick: () => {\n        dispatch(actions.refresh());\n    },\n\n    handleOpenDialogClick: () => {\n        dispatch(actions.openDialog());\n    },\n\n    handleCloseDialogClick: () => {\n        dispatch(actions.closeDialog());\n    },\n\n    handleOpenFormulaClick: () => {\n        dispatch(actions.openFormula());\n    },\n\n    handleCloseFormulaClick: () => {\n        dispatch(actions.closeFormula());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import { Point } from '../../store/BasicState';\nimport { addHelperStyles } from '.';\nimport { State } from '../../store/palindrome-partitioning/state';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst isMatch = ({ row, col }: Point, r: number, c: number) => (row === r && col === c);\n\nconst newTableStyles = (table: React.CSSProperties[][]): React.CSSProperties[][] =>\n    table.map(row => row.map(() => ({})));\n\nconst updateTable = (table: (string | number)[][], point: Point, value: number): (string | number)[][] =>\n    table.map((row, rowIndex) => {\n        return row.map((cell, colIndex) => isMatch(point, rowIndex, colIndex) ? value : cell);\n    });\n\nconst nonCorrect = (comparedTable: (string | number)[][], { row, col }: Point, value: number): boolean =>\n    (comparedTable[row][col] !== value);\n\nconst isLastCell = (table: (string | number)[][], { row, col }: Point): boolean => {\n    return row === 2 && col === table[row].length - 1;\n};\n\nconst getNext = (table: (string | number)[][], { row, col }: Point, length: number) => {\n    const isNextLen = row + length === table.length;\n    const nextLength = isNextLen ? length + 1 : length;\n    const nextRow = isNextLen ? 2 : row + 1;\n    const nextCol = isNextLen ? nextRow + nextLength - 1 : col + 1;\n\n    return { row: nextRow, col: nextCol, length: nextLength };\n};\n\nconst update = (value: number, state: State): State => {\n\n    const { currentPoint, errors, success } = state;\n\n    const startTime: number = (state.startTime) ? state.startTime : new Date().getTime();\n\n    if (success) {\n        return state;\n    }\n\n    const steps = state.steps + 1;\n    const table = updateTable(state.table, currentPoint, value);\n    const tableStyles = newTableStyles(state.tableStyles);\n\n    if (nonCorrect(state.comparedTable, currentPoint, value)) {\n        tableStyles[currentPoint.row][currentPoint.col] = { backgroundColor: 'red' };\n        addHelperStyles(tableStyles, currentPoint, state.length, table);\n        return { ...state, startTime, steps, errors: errors + 1, table, tableStyles };\n    }\n\n    if (isLastCell(table, currentPoint)) {\n        const finishTime = new Date().getTime();\n        tableStyles[2][tableStyles[2].length - 1] = helperStyle;\n        return { ...state, startTime, finishTime, steps, table, tableStyles, success: true };\n    }\n\n    const next = getNext(table, currentPoint, state.length);\n    const nextPoint = { row: next.row, col: next.col };\n    table[nextPoint.row][nextPoint.col] = '?';\n    addHelperStyles(tableStyles, nextPoint, next.length, table);\n\n    return { ...state, steps, startTime, table, tableStyles, currentPoint: nextPoint, length: next.length };\n};\n\nexport default update;\n","import update from '../../algorithms/palindrome-partitioning/update';\nimport { Reducer } from 'redux';\nimport * as Constants from './constants';\nimport { create } from './initialState';\nimport { State } from './state';\nimport { Action } from './actions';\n\nconst reducer: Reducer<State> = (state: State = create(), action: Action) => {\n    switch (action.type) {\n        case Constants.BUTTON_CLICK:\n            return update(Number(action.payload), state);\n        case Constants.OPEN_DIALOG_CLICK:\n            return { ...state, dialogOpen: true };\n        case Constants.CLOSE_DIALOG_CLICK:\n            return { ...state, dialogOpen: false };\n        case Constants.OPEN_FORMULA_CLICK:\n            return { ...state, formulaOpen: true };\n        case Constants.CLOSE_FORMULA_CLICK:\n            return { ...state, formulaOpen: false };\n        case Constants.REFRESH_CLICK:\n            return create();\n        case Constants.RECEIVED_RECORD:\n            return { ...state, loading: false, count: action.payload || 0 };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { call, put, take, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport  { GET_RECORD } from './constants';\nimport { fetchSuccess } from './actions';\nimport { basicInfo } from './initialState';\n\nfunction* getRecord() {\n    const response = yield call(axios.get, `/record/algorithm/${basicInfo.id}`);\n    yield put(fetchSuccess(response.data));\n}\n\nexport function* watchRecord() {\n    yield take(GET_RECORD);\n    yield fork(getRecord);\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { ApplicationState } from '..';\nimport Card from '../../components/Card';\nimport * as actions from './actions';\n\nconst mapStateToProps = ({ maximumSubarrayProblem }: ApplicationState) => ({\n    ...maximumSubarrayProblem,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<actions.Action>) => ({\n    handleButtonClick: (data: number | string) => {\n        dispatch(actions.buttonClick(data));\n    },\n\n    handleRefreshClick: () => {\n        dispatch(actions.refresh());\n    },\n\n    handleOpenDialogClick: () => {\n        dispatch(actions.openDialog());\n    },\n\n    handleCloseDialogClick: () => {\n        dispatch(actions.closeDialog());\n    },\n\n    handleOpenFormulaClick: () => {\n        dispatch(actions.openFormula());\n    },\n\n    handleCloseFormulaClick: () => {\n        dispatch(actions.closeFormula());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import { State, Point } from '../../store/BasicState';\nimport { addHelperStyles } from '.';\n\nconst isMatch = ({ row, col }: Point, r: number, c: number) => (row === r && col === c);\n\nconst newTableStyles = (table: React.CSSProperties[][]): React.CSSProperties[][] =>\n    table.map(row => row.map(() => ({})));\n\nconst updateTable = (table: (string | number)[][], point: Point, value: number): (string | number)[][] =>\n    table.map((row, rowIndex) => {\n        return row.map((cell, colIndex) => isMatch(point, rowIndex, colIndex) ? value : cell);\n    });\n\nconst nonCorrect = (comparedTable: (string | number)[][], { row, col }: Point, value: number): boolean =>\n    (comparedTable[row][col] !== value);\n\nconst isLastCell = (table: (string | number)[][], point: Point): boolean => {\n    const row = table.length - 1;\n    const col = table[row].length - 1;\n    return isMatch(point, row, col);\n};\n\nconst getNextPoint = (table: (string | number)[][], { row, col }: Point): Point => {\n    if (row === 2) {\n        return { row: row + 1, col };\n    } else {\n        return { row: 2, col: col + 1 };\n    }\n};\n\nconst update = (value: number, state: State): State => {\n\n    const { currentPoint, errors, success } = state;\n\n    const startTime: number = (state.startTime) ? state.startTime : new Date().getTime();\n\n    if (success) {\n        return state;\n    }\n\n    const steps = state.steps + 1;\n    const table = updateTable(state.table, currentPoint, value);\n    const tableStyles = newTableStyles(state.tableStyles);\n\n    if (nonCorrect(state.comparedTable, currentPoint, value)) {\n        tableStyles[currentPoint.row][currentPoint.col] = { backgroundColor: 'red' };\n        addHelperStyles(tableStyles, currentPoint, state.comparedTable);\n        return { ...state, startTime, steps, errors: errors + 1, table, tableStyles };\n    }\n\n    if (isLastCell(table, currentPoint)) {\n        const finishTime = new Date().getTime();\n        return { ...state, startTime, finishTime, steps, table, tableStyles, success: true };\n    }\n\n    const nextPoint = getNextPoint(table, currentPoint);\n    table[nextPoint.row][nextPoint.col] = '?';\n    addHelperStyles(tableStyles, nextPoint, state.comparedTable);\n\n    return { ...state, steps, startTime, table, tableStyles, currentPoint: nextPoint };\n};\n\nexport default update;\n","import update from '../../algorithms/maximum-subarray-problem/update';\nimport { Reducer } from 'redux';\nimport * as Constants from './constants';\nimport { create } from './initialState';\nimport { State } from '../BasicState';\nimport { Action } from './actions';\n\nconst reducer: Reducer<State> = (state: State = create(), action: Action) => {\n    switch (action.type) {\n        case Constants.BUTTON_CLICK:\n            return update(Number(action.payload), state);\n        case Constants.OPEN_DIALOG_CLICK:\n            return { ...state, dialogOpen: true };\n        case Constants.CLOSE_DIALOG_CLICK:\n            return { ...state, dialogOpen: false };\n        case Constants.OPEN_FORMULA_CLICK:\n            return { ...state, formulaOpen: true };\n        case Constants.CLOSE_FORMULA_CLICK:\n            return { ...state, formulaOpen: false };\n        case Constants.REFRESH_CLICK:\n            return create();\n        case Constants.RECEIVED_RECORD:\n            return { ...state, loading: false, count: action.payload || 0 };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { call, put, take, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport  { GET_RECORD } from './constants';\nimport { fetchSuccess } from './actions';\nimport { basicInfo } from './initialState';\n\nfunction* getRecord() {\n    const response = yield call(axios.get, `/record/algorithm/${basicInfo.id}`);\n    yield put(fetchSuccess(response.data));\n}\n\nexport function* watchRecord() {\n    yield take(GET_RECORD);\n    yield fork(getRecord);\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { ApplicationState } from '..';\nimport Card from '../../components/Card';\nimport * as actions from './actions';\n\nconst mapStateToProps = ({ coinChangeFewestNumber }: ApplicationState) => ({\n    ...coinChangeFewestNumber,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<actions.Action>) => ({\n    handleButtonClick: (data: number | string) => {\n        dispatch(actions.buttonClick(data));\n    },\n\n    handleRefreshClick: () => {\n        dispatch(actions.refresh());\n    },\n\n    handleOpenDialogClick: () => {\n        dispatch(actions.openDialog());\n    },\n\n    handleCloseDialogClick: () => {\n        dispatch(actions.closeDialog());\n    },\n\n    handleOpenFormulaClick: () => {\n        dispatch(actions.openFormula());\n    },\n\n    handleCloseFormulaClick: () => {\n        dispatch(actions.closeFormula());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import { State, Point } from '../../store/BasicState';\nimport { addHelperStyles } from '.';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst isMatch = ({ row, col }: Point, r: number, c: number) => (row === r && col === c);\n\nconst getLastCell = (table: (string | number)[][]): Point => {\n    const row = table.length - 1;\n    const col = table[row].length - 1;\n    return { row, col };\n};\n\nconst newTableStyles = (table: React.CSSProperties[][]): React.CSSProperties[][] =>\n    table.map(row => row.map(() => ({})));\n\nconst updateTable = (table: (string | number)[][], point: Point, value: number): (string | number)[][] =>\n    table.map((row, rowIndex) => {\n        return row.map((cell, colIndex) => isMatch(point, rowIndex, colIndex) ? value : cell);\n    });\n\nconst nonCorrect = (comparedTable: (string | number)[][], { row, col }: Point, value: number): boolean => {\n    if (value === -1) {\n        return (comparedTable[row][col] !== Infinity);\n    } else {\n        return (comparedTable[row][col] !== value);\n    }\n};\n\nconst isLastCell = (table: (string | number)[][], point: Point): boolean => {\n    const { row, col } = getLastCell(table);\n    return isMatch(point, row, col);\n};\n\nconst getNextPoint = (table: (string | number)[][], { row, col }: Point): Point =>\n    (col === table[row].length - 1) ? { row: row + 1, col: 2 } : { row, col: col + 1 };\n\nconst update = (value: number, state: State): State => {\n\n    const { currentPoint, errors, success } = state;\n\n    const startTime: number = (state.startTime) ? state.startTime : new Date().getTime();\n\n    if (success) {\n        return state;\n    }\n\n    const steps = state.steps + 1;\n    const table = updateTable(state.table, currentPoint, value);\n    const tableStyles = newTableStyles(state.tableStyles);\n\n    if (nonCorrect(state.comparedTable, currentPoint, value)) {\n        tableStyles[currentPoint.row][currentPoint.col] = { backgroundColor: 'red' };\n        addHelperStyles(tableStyles, currentPoint, state.table);\n        return { ...state, startTime, steps, errors: errors + 1, table, tableStyles };\n    }\n\n    if (isLastCell(table, currentPoint)) {\n        const finishTime = new Date().getTime();\n        const lastCell = getLastCell(table);\n        tableStyles[lastCell.row][lastCell.col] = helperStyle;\n        return { ...state, startTime, finishTime, steps, table, tableStyles, success: true };\n    }\n\n    const nextPoint = getNextPoint(table, currentPoint);\n    table[nextPoint.row][nextPoint.col] = '?';\n    addHelperStyles(tableStyles, nextPoint, state.table);\n\n    return { ...state, steps, startTime, table, tableStyles, currentPoint: nextPoint };\n};\n\nexport default update;\n","import update from '../../algorithms/coin-change-fewest-number/update';\nimport { Reducer } from 'redux';\nimport * as Constants from './constants';\nimport { create } from './initialState';\nimport { State } from '../BasicState';\nimport { Action } from './actions';\n\nconst reducer: Reducer<State> = (state: State = create(), action: Action) => {\n    switch (action.type) {\n        case Constants.BUTTON_CLICK:\n            return update(Number(action.payload), state);\n        case Constants.OPEN_DIALOG_CLICK:\n            return { ...state, dialogOpen: true };\n        case Constants.CLOSE_DIALOG_CLICK:\n            return { ...state, dialogOpen: false };\n        case Constants.OPEN_FORMULA_CLICK:\n            return { ...state, formulaOpen: true };\n        case Constants.CLOSE_FORMULA_CLICK:\n            return { ...state, formulaOpen: false };\n        case Constants.REFRESH_CLICK:\n            return create();\n        case Constants.RECEIVED_RECORD:\n            return { ...state, loading: false, count: action.payload || 0 };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { call, put, take, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport  { GET_RECORD } from './constants';\nimport { fetchSuccess } from './actions';\nimport { basicInfo } from './initialState';\n\nfunction* getRecord() {\n    const response = yield call(axios.get, `/record/algorithm/${basicInfo.id}`);\n    yield put(fetchSuccess(response.data));\n}\n\nexport function* watchRecord() {\n    yield take(GET_RECORD);\n    yield fork(getRecord);\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { ApplicationState } from '..';\nimport Card from '../../components/Card';\nimport * as actions from './actions';\n\nconst mapStateToProps = ({ coinChangeHowManyWays }: ApplicationState) => ({\n    ...coinChangeHowManyWays,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<actions.Action>) => ({\n    handleButtonClick: (data: number | string) => {\n        dispatch(actions.buttonClick(data));\n    },\n\n    handleRefreshClick: () => {\n        dispatch(actions.refresh());\n    },\n\n    handleOpenDialogClick: () => {\n        dispatch(actions.openDialog());\n    },\n\n    handleCloseDialogClick: () => {\n        dispatch(actions.closeDialog());\n    },\n\n    handleOpenFormulaClick: () => {\n        dispatch(actions.openFormula());\n    },\n\n    handleCloseFormulaClick: () => {\n        dispatch(actions.closeFormula());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import { State, Point } from '../../store/BasicState';\nimport { addHelperStyles } from '.';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst isMatch = ({ row, col }: Point, r: number, c: number) => (row === r && col === c);\n\nconst getLastCell = (table: (string | number)[][]): Point => {\n    const row = table.length - 1;\n    const col = table[row].length - 1;\n    return { row, col };\n};\n\nconst newTableStyles = (table: React.CSSProperties[][]): React.CSSProperties[][] =>\n    table.map(row => row.map(() => ({})));\n\nconst updateTable = (table: (string | number)[][], point: Point, value: number): (string | number)[][] =>\n    table.map((row, rowIndex) => {\n        return row.map((cell, colIndex) => isMatch(point, rowIndex, colIndex) ? value : cell);\n    });\n\nconst nonCorrect = (comparedTable: (string | number)[][], { row, col }: Point, value: number): boolean =>\n    (comparedTable[row][col] !== value);\n\nconst isLastCell = (table: (string | number)[][], point: Point): boolean => {\n    const { row, col } = getLastCell(table);\n    return isMatch(point, row, col);\n};\n\nconst getNextPoint = (table: (string | number)[][], { row, col }: Point): Point =>\n    (col === table[row].length - 1) ? { row: row + 1, col: 2 } : { row, col: col + 1 };\n\nconst update = (value: number, state: State): State => {\n\n    const { currentPoint, errors, success } = state;\n\n    const startTime: number = (state.startTime) ? state.startTime : new Date().getTime();\n\n    if (success) {\n        return state;\n    }\n\n    const steps = state.steps + 1;\n    const table = updateTable(state.table, currentPoint, value);\n    const tableStyles = newTableStyles(state.tableStyles);\n\n    if (nonCorrect(state.comparedTable, currentPoint, value)) {\n        tableStyles[currentPoint.row][currentPoint.col] = { backgroundColor: 'red' };\n        addHelperStyles(tableStyles, currentPoint, state.table);\n        return { ...state, startTime, steps, errors: errors + 1, table, tableStyles };\n    }\n\n    if (isLastCell(table, currentPoint)) {\n        const finishTime = new Date().getTime();\n        const lastCell = getLastCell(table);\n        tableStyles[lastCell.row][lastCell.col] = helperStyle;\n        return { ...state, startTime, finishTime, steps, table, tableStyles, success: true };\n    }\n\n    const nextPoint = getNextPoint(table, currentPoint);\n    table[nextPoint.row][nextPoint.col] = '?';\n    addHelperStyles(tableStyles, nextPoint, state.table);\n\n    return { ...state, steps, startTime, table, tableStyles, currentPoint: nextPoint };\n};\n\nexport default update;\n","import update from '../../algorithms/coin-change-how-many-ways/update';\nimport { Reducer } from 'redux';\nimport * as Constants from './constants';\nimport { create } from './initialState';\nimport { State } from '../BasicState';\nimport { Action } from './actions';\n\nconst reducer: Reducer<State> = (state: State = create(), action: Action) => {\n    switch (action.type) {\n        case Constants.BUTTON_CLICK:\n            return update(Number(action.payload), state);\n        case Constants.OPEN_DIALOG_CLICK:\n            return { ...state, dialogOpen: true };\n        case Constants.CLOSE_DIALOG_CLICK:\n            return { ...state, dialogOpen: false };\n        case Constants.OPEN_FORMULA_CLICK:\n            return { ...state, formulaOpen: true };\n        case Constants.CLOSE_FORMULA_CLICK:\n            return { ...state, formulaOpen: false };\n        case Constants.REFRESH_CLICK:\n            return create();\n        case Constants.RECEIVED_RECORD:\n            return { ...state, loading: false, count: action.payload || 0 };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { call, put, take, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport  { GET_RECORD } from './constants';\nimport { fetchSuccess } from './actions';\nimport { basicInfo } from './initialState';\n\nfunction* getRecord() {\n    const response = yield call(axios.get, `/record/algorithm/${basicInfo.id}`);\n    yield put(fetchSuccess(response.data));\n}\n\nexport function* watchRecord() {\n    yield take(GET_RECORD);\n    yield fork(getRecord);\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { ApplicationState } from '..';\nimport Card from '../../components/Card';\nimport * as actions from './actions';\n\nconst mapStateToProps = ({ longestCommonSubsequence }: ApplicationState) => ({\n    ...longestCommonSubsequence,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<actions.Action>) => ({\n    handleButtonClick: (data: number | string) => {\n        dispatch(actions.buttonClick(data));\n    },\n\n    handleRefreshClick: () => {\n        dispatch(actions.refresh());\n    },\n\n    handleOpenDialogClick: () => {\n        dispatch(actions.openDialog());\n    },\n\n    handleCloseDialogClick: () => {\n        dispatch(actions.closeDialog());\n    },\n\n    handleOpenFormulaClick: () => {\n        dispatch(actions.openFormula());\n    },\n\n    handleCloseFormulaClick: () => {\n        dispatch(actions.closeFormula());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import { State, Point } from '../../store/BasicState';\nimport { addHelperStyles } from '.';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst getLastCell = (table: (string | number)[][]): Point => {\n    const row = table.length - 1;\n    const col = table[row].length - 1;\n    return { row, col };\n};\n\nconst isMatch = ({ row, col }: Point, r: number, c: number) => (row === r && col === c);\n\nconst newTableStyles = (table: React.CSSProperties[][]): React.CSSProperties[][] =>\n    table.map(row => row.map(() => ({})));\n\nconst updateTable = (table: (string | number)[][], point: Point, value: number): (string | number)[][] =>\n    table.map((row, rowIndex) => {\n        return row.map((cell, colIndex) => isMatch(point, rowIndex, colIndex) ? value : cell);\n    });\n\nconst nonCorrect = (comparedTable: (string | number)[][], { row, col }: Point, value: number): boolean =>\n    (comparedTable[row][col] !== value);\n\nconst isLastCell = (table: (string | number)[][], point: Point): boolean => {\n    const { row, col } = getLastCell(table);\n    return isMatch(point, row, col);\n};\n\nconst getNextPoint = (table: (string | number)[][], { row, col }: Point): Point =>\n    (col === table[row].length - 1) ? { row: row + 1, col: 2 } : { row, col: col + 1 };\n\nconst update = (value: number, state: State): State => {\n\n    const { currentPoint, errors, success } = state;\n\n    const startTime: number = (state.startTime) ? state.startTime : new Date().getTime();\n\n    if (success) {\n        return state;\n    }\n\n    const steps = state.steps + 1;\n    const table = updateTable(state.table, currentPoint, value);\n    const tableStyles = newTableStyles(state.tableStyles);\n\n    if (nonCorrect(state.comparedTable, currentPoint, value)) {\n        tableStyles[currentPoint.row][currentPoint.col] = { backgroundColor: 'red' };\n        addHelperStyles(tableStyles, currentPoint);\n        return { ...state, startTime, steps, errors: errors + 1, table, tableStyles };\n    }\n\n    if (isLastCell(table, currentPoint)) {\n        const finishTime = new Date().getTime();\n        const lastCell = getLastCell(table);\n        tableStyles[lastCell.row][lastCell.col] = helperStyle;\n        return { ...state, startTime, finishTime, steps, table, tableStyles, success: true };\n    }\n\n    const nextPoint = getNextPoint(table, currentPoint);\n    table[nextPoint.row][nextPoint.col] = '?';\n    addHelperStyles(tableStyles, nextPoint);\n\n    return { ...state, steps, startTime, table, tableStyles, currentPoint: nextPoint };\n};\n\nexport default update;\n","import update from '../../algorithms/longest-common-subsequence/update';\nimport { Reducer } from 'redux';\nimport * as Constants from './constants';\nimport { create } from './initialState';\nimport { State } from '../BasicState';\nimport { Action } from './actions';\n\nconst reducer: Reducer<State> = (state: State = create(), action: Action) => {\n    switch (action.type) {\n        case Constants.BUTTON_CLICK:\n            return update(Number(action.payload), state);\n        case Constants.OPEN_DIALOG_CLICK:\n            return { ...state, dialogOpen: true };\n        case Constants.CLOSE_DIALOG_CLICK:\n            return { ...state, dialogOpen: false };\n        case Constants.OPEN_FORMULA_CLICK:\n            return { ...state, formulaOpen: true };\n        case Constants.CLOSE_FORMULA_CLICK:\n            return { ...state, formulaOpen: false };\n        case Constants.REFRESH_CLICK:\n            return create();\n        case Constants.RECEIVED_RECORD:\n            return { ...state, loading: false, count: action.payload || 0 };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { call, put, take, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport  { GET_RECORD } from './constants';\nimport { fetchSuccess } from './actions';\nimport { basicInfo } from './initialState';\n\nfunction* getRecord() {\n    const response = yield call(axios.get, `/record/algorithm/${basicInfo.id}`);\n    yield put(fetchSuccess(response.data));\n}\n\nexport function* watchRecord() {\n    yield take(GET_RECORD);\n    yield fork(getRecord);\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { ApplicationState } from '..';\nimport Card from '../../components/Card';\nimport * as actions from './actions';\n\nconst mapStateToProps = ({ longestCommonSubstring }: ApplicationState) => ({\n    ...longestCommonSubstring,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<actions.Action>) => ({\n    handleButtonClick: (data: number | string) => {\n        dispatch(actions.buttonClick(data));\n    },\n\n    handleRefreshClick: () => {\n        dispatch(actions.refresh());\n    },\n\n    handleOpenDialogClick: () => {\n        dispatch(actions.openDialog());\n    },\n\n    handleCloseDialogClick: () => {\n        dispatch(actions.closeDialog());\n    },\n\n    handleOpenFormulaClick: () => {\n        dispatch(actions.openFormula());\n    },\n\n    handleCloseFormulaClick: () => {\n        dispatch(actions.closeFormula());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import { State, Point } from '../../store/BasicState';\nimport { addHelperStyles } from '.';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst isMatch = ({ row, col }: Point, r: number, c: number) => (row === r && col === c);\n\nconst newTableStyles = (table: React.CSSProperties[][]): React.CSSProperties[][] =>\n    table.map(row => row.map(() => ({})));\n\nconst updateTable = (table: (string | number)[][], point: Point, value: number): (string | number)[][] =>\n    table.map((row, rowIndex) => {\n        return row.map((cell, colIndex) => isMatch(point, rowIndex, colIndex) ? value : cell);\n    });\n\nconst nonCorrect = (comparedTable: (string | number)[][], { row, col }: Point, value: number): boolean =>\n    (comparedTable[row][col] !== value);\n\nconst isLastCell = (table: (string | number)[][], point: Point): boolean => {\n    const row = table.length - 1;\n    const col = table[row].length - 1;\n    return isMatch(point, row, col);\n};\n\nconst getNextPoint = (table: (string | number)[][], { row, col }: Point): Point => {\n    return (col === table[row].length - 1) ? { row: row + 1, col: 2 } : { row, col: col + 1 };\n};\n\nconst getMax = (table: (string |number)[][]): number => {\n    let max = 0;\n    for (let row = 1; row < table.length; row++) {\n        for (let col = 1; col < table[row].length; col++) {\n            max = Math.max(max, Number(table[row][col]));\n        }\n    }\n    return max;\n};\n\nconst successTableStyle = (state: State): React.CSSProperties[][] => {\n    const newSyles = newTableStyles(state.tableStyles);\n    const table = state.comparedTable;\n    const max = getMax(table);\n    for (let row = 2; row < table.length; row++) {\n        for (let col = 2; col < table[row].length; col++) {\n            if (table[row][col] === max) {\n                newSyles[row][col] = helperStyle;\n            }\n        }\n    }\n    return newSyles;\n};\n\nconst update = (value: number, state: State): State => {\n\n    const { currentPoint, errors, success } = state;\n\n    const startTime: number = (state.startTime) ? state.startTime : new Date().getTime();\n\n    if (success) {\n        return state;\n    }\n\n    const steps = state.steps + 1;\n    const table = updateTable(state.table, currentPoint, value);\n    const tableStyles = newTableStyles(state.tableStyles);\n\n    if (nonCorrect(state.comparedTable, currentPoint, value)) {\n        tableStyles[currentPoint.row][currentPoint.col] = { backgroundColor: 'red' };\n        addHelperStyles(tableStyles, currentPoint);\n        return { ...state, startTime, steps, errors: errors + 1, table, tableStyles };\n    }\n\n    if (isLastCell(table, currentPoint)) {\n        const finishTime = new Date().getTime();\n        const successStyles = successTableStyle(state);\n        return { ...state, startTime, finishTime, steps, table, tableStyles: successStyles, success: true };\n    }\n\n    const nextPoint = getNextPoint(table, currentPoint);\n    table[nextPoint.row][nextPoint.col] = '?';\n    addHelperStyles(tableStyles, nextPoint);\n\n    return { ...state, steps, startTime, table, tableStyles, currentPoint: nextPoint };\n};\n\nexport default update;\n","import update from '../../algorithms/longest-common-substring/update';\nimport { Reducer } from 'redux';\nimport * as Constants from './constants';\nimport { create } from './initialState';\nimport { State } from '../BasicState';\nimport { Action } from './actions';\n\nconst reducer: Reducer<State> = (state: State = create(), action: Action) => {\n    switch (action.type) {\n        case Constants.BUTTON_CLICK:\n            return update(Number(action.payload), state);\n        case Constants.OPEN_DIALOG_CLICK:\n            return { ...state, dialogOpen: true };\n        case Constants.CLOSE_DIALOG_CLICK:\n            return { ...state, dialogOpen: false };\n        case Constants.OPEN_FORMULA_CLICK:\n            return { ...state, formulaOpen: true };\n        case Constants.CLOSE_FORMULA_CLICK:\n            return { ...state, formulaOpen: false };\n        case Constants.REFRESH_CLICK:\n            return create();\n        case Constants.RECEIVED_RECORD:\n            return { ...state, loading: false, count: action.payload || 0 };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { call, put, take, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport  { GET_RECORD } from './constants';\nimport { fetchSuccess } from './actions';\nimport { basicInfo } from './initialState';\n\nfunction* getRecord() {\n    const response = yield call(axios.get, `/record/algorithm/${basicInfo.id}`);\n    yield put(fetchSuccess(response.data));\n}\n\nexport function* watchRecord() {\n    yield take(GET_RECORD);\n    yield fork(getRecord);\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { ApplicationState } from '..';\nimport Card from '../../components/Card';\nimport * as actions from './actions';\n\nconst mapStateToProps = ({ minimumNumberOfJumpsToReachEnd }: ApplicationState) => ({\n    ...minimumNumberOfJumpsToReachEnd,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<actions.Action>) => ({\n    handleButtonClick: (data: number | string) => {\n        dispatch(actions.buttonClick(data));\n    },\n\n    handleRefreshClick: () => {\n        dispatch(actions.refresh());\n    },\n\n    handleOpenDialogClick: () => {\n        dispatch(actions.openDialog());\n    },\n\n    handleCloseDialogClick: () => {\n        dispatch(actions.closeDialog());\n    },\n\n    handleOpenFormulaClick: () => {\n        dispatch(actions.openFormula());\n    },\n\n    handleCloseFormulaClick: () => {\n        dispatch(actions.closeFormula());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import { State, Point } from '../../store/BasicState';\nimport { addHelperStyles } from '.';\n\nconst max = Number.MAX_SAFE_INTEGER;\n\nconst isMatch = ({ row, col }: Point, r: number, c: number) => {\n    return (r === 2 && col + 1 === c);\n};\n\nconst getValue = (value: number) => (value === max) ? 'x' : value;\n\nconst newTableStyles = (table: React.CSSProperties[][]): React.CSSProperties[][] =>\n    table.map(row => row.map(() => ({})));\n\nconst updateTable = (table: (string | number)[][], point: Point, value: number): (string | number)[][] =>\n    table.map((row, rowIndex) => {\n        return row.map((cell, colIndex) => isMatch(point, rowIndex, colIndex) ? getValue(value) : cell);\n    });\n\nconst nonCorrect = (comparedTable: (string | number)[][], { row, col }: Point, value: number): boolean =>\n    (comparedTable[row][col] !== value);\n\nconst isLastCell = (table: (string | number)[][], { row, col }: Point): boolean => {\n    const colLength = table[1].length;\n    return row === colLength - 3 && col === colLength - 2;\n};\n\nconst getNextPoint = ({ row, col }: Point): Point => {\n    if (row + 1 === col) {\n        return { row: 0, col: col + 1 };\n    } else {\n        return { row: row + 1, col };\n    }\n};\n\nconst update = (value: number, state: State): State => {\n\n    const { currentPoint, errors, success } = state;\n\n    const startTime: number = (state.startTime) ? state.startTime : new Date().getTime();\n\n    if (success) {\n        return state;\n    }\n\n    const steps = state.steps + 1;\n    const table = updateTable(state.table, currentPoint, value);\n    const tableStyles = newTableStyles(state.tableStyles);\n\n    if (nonCorrect(state.comparedTable, currentPoint, value)) {\n        addHelperStyles(tableStyles, currentPoint, table);\n        tableStyles[2][currentPoint.col + 1] = { backgroundColor: 'red' };\n        return { ...state, startTime, steps, errors: errors + 1, table, tableStyles };\n    }\n\n    if (isLastCell(table, currentPoint)) {\n        const finishTime = new Date().getTime();\n        return { ...state, startTime, finishTime, steps, table, tableStyles, success: true };\n    }\n\n    const nextPoint = getNextPoint(currentPoint);\n    if (!table[2][nextPoint.col]) {\n        table[2][nextPoint.col] = '?';\n    }\n    addHelperStyles(tableStyles, nextPoint, table);\n\n    return { ...state, steps, startTime, table, tableStyles, currentPoint: nextPoint };\n};\n\nexport default update;\n","import update from '../../algorithms/minimum-number-of-jumps-to-reach-end/update';\nimport { Reducer } from 'redux';\nimport * as Constants from './constants';\nimport { create } from './initialState';\nimport { State } from '../BasicState';\nimport { Action } from './actions';\n\nconst max = Number.MAX_SAFE_INTEGER;\n\nconst reducer: Reducer<State> = (state: State = create(), action: Action) => {\n    switch (action.type) {\n        case Constants.BUTTON_CLICK:\n            if (action.payload === 'x') {\n                return update(max, state);\n            } else {\n                return update(Number(action.payload), state);\n            }\n        case Constants.OPEN_DIALOG_CLICK:\n            return { ...state, dialogOpen: true };\n        case Constants.CLOSE_DIALOG_CLICK:\n            return { ...state, dialogOpen: false };\n        case Constants.OPEN_FORMULA_CLICK:\n            return { ...state, formulaOpen: true };\n        case Constants.CLOSE_FORMULA_CLICK:\n            return { ...state, formulaOpen: false };\n        case Constants.REFRESH_CLICK:\n            return create();\n        case Constants.RECEIVED_RECORD:\n            return { ...state, loading: false, count: action.payload || 0 };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { call, put, take, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport  { GET_RECORD } from './constants';\nimport { fetchSuccess } from './actions';\nimport { basicInfo } from './initialState';\n\nfunction* getRecord() {\n    const response = yield call(axios.get, `/record/algorithm/${basicInfo.id}`);\n    yield put(fetchSuccess(response.data));\n}\n\nexport function* watchRecord() {\n    yield take(GET_RECORD);\n    yield fork(getRecord);\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { ApplicationState } from '..';\nimport Card from '../../components/Card';\nimport * as actions from './actions';\n\nconst mapStateToProps = ({ longestIncreasingSubsequence }: ApplicationState) => ({\n    ...longestIncreasingSubsequence,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<actions.Action>) => ({\n    handleButtonClick: (data: number | string) => {\n        dispatch(actions.buttonClick(data));\n    },\n\n    handleRefreshClick: () => {\n        dispatch(actions.refresh());\n    },\n\n    handleOpenDialogClick: () => {\n        dispatch(actions.openDialog());\n    },\n\n    handleCloseDialogClick: () => {\n        dispatch(actions.closeDialog());\n    },\n\n    handleOpenFormulaClick: () => {\n        dispatch(actions.openFormula());\n    },\n\n    handleCloseFormulaClick: () => {\n        dispatch(actions.closeFormula());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import { State, Point } from '../../store/BasicState';\nimport { addHelperStyles } from '.';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst isMatch = (point: Point, r: number, c: number) => (r === 1 && point.col === c);\n\nconst newTableStyles = (table: React.CSSProperties[][]): React.CSSProperties[][] =>\n    table.map(row => row.map(() => ({})));\n\nconst updateTable = (table: number[][], point: Point, value: number): number[][] =>\n    table.map((row, rowIndex) => {\n        return row.map((cell, colIndex) => isMatch(point, rowIndex, colIndex) ? value : cell);\n    });\n\nconst nonCorrect = (comparedTable: number[][], { row, col }: Point, value: number): boolean =>\n    (comparedTable[row][col] !== value);\n\nconst isLastCell = (table: number[][], { row, col }: Point): boolean => {\n    return row === table.length - 1 && col === table[row].length - 1;\n};\n\nconst setSuccessStyle = (table: number[][], styles: React.CSSProperties[][]): void => {\n    const max = Math.max(...table[1]);\n    for (let col = 0; col < table[1].length; col++) {\n        if (table[1][col] === max) {\n            styles[1][col] = helperStyle;\n        }\n    }\n};\n\nconst getNextPoint = ({ row, col }: Point): Point => {\n    if (col === row) {\n        return { row: 1, col: col + 1 };\n    } else {\n        return { row: row + 1, col };\n    }\n};\n\nconst update = (value: number, state: State): State => {\n    const { currentPoint, errors, success } = state;\n\n    const startTime: number = (state.startTime) ? state.startTime : new Date().getTime();\n\n    if (success) {\n        return state;\n    }\n\n    const steps = state.steps + 1;\n    const table = updateTable(state.table, currentPoint, value);\n    const tableStyles = newTableStyles(state.tableStyles);\n\n    if (nonCorrect(state.comparedTable, currentPoint, value)) {\n        addHelperStyles(tableStyles, currentPoint);\n        tableStyles[1][currentPoint.col] = { backgroundColor: 'red' };\n        return { ...state, startTime, steps, errors: errors + 1, table, tableStyles };\n    }\n\n    if (isLastCell(state.comparedTable, currentPoint)) {\n        const finishTime = new Date().getTime();\n        setSuccessStyle(table, tableStyles);\n        return { ...state, startTime, finishTime, steps, table, tableStyles, success: true };\n    }\n\n    const nextPoint = getNextPoint(currentPoint);\n\n    addHelperStyles(tableStyles, nextPoint);\n\n    return { ...state, steps, startTime, table, tableStyles, currentPoint: nextPoint };\n};\n\nexport default update;\n","import update from '../../algorithms/longest-increasing-subsequence/update';\nimport { Reducer } from 'redux';\nimport * as Constants from './constants';\nimport { create } from './initialState';\nimport { State } from '../BasicState';\nimport { Action } from './actions';\n\nconst reducer: Reducer<State> = (state: State = create(), action: Action) => {\n    switch (action.type) {\n        case Constants.BUTTON_CLICK:\n            return update(Number(action.payload), state);\n        case Constants.OPEN_DIALOG_CLICK:\n            return { ...state, dialogOpen: true };\n        case Constants.CLOSE_DIALOG_CLICK:\n            return { ...state, dialogOpen: false };\n        case Constants.OPEN_FORMULA_CLICK:\n            return { ...state, formulaOpen: true };\n        case Constants.CLOSE_FORMULA_CLICK:\n            return { ...state, formulaOpen: false };\n        case Constants.REFRESH_CLICK:\n            return create();\n        case Constants.RECEIVED_RECORD:\n            return { ...state, loading: false, count: action.payload || 0 };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { call, put, take, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport  { GET_RECORD } from './constants';\nimport { fetchSuccess } from './actions';\nimport { basicInfo } from './initialState';\n\nfunction* getRecord() {\n    const response = yield call(axios.get, `/record/algorithm/${basicInfo.id}`);\n    yield put(fetchSuccess(response.data));\n}\n\nexport function* watchRecord() {\n    yield take(GET_RECORD);\n    yield fork(getRecord);\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { ApplicationState } from '..';\nimport Card from '../../components/Card';\nimport * as actions from './actions';\n\nconst mapStateToProps = ({ longestPalindromicSubstring }: ApplicationState) => ({\n    ...longestPalindromicSubstring,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<actions.Action>) => ({\n    handleButtonClick: (data: number | string) => {\n        dispatch(actions.buttonClick(data));\n    },\n\n    handleRefreshClick: () => {\n        dispatch(actions.refresh());\n    },\n\n    handleOpenDialogClick: () => {\n        dispatch(actions.openDialog());\n    },\n\n    handleCloseDialogClick: () => {\n        dispatch(actions.closeDialog());\n    },\n\n    handleOpenFormulaClick: () => {\n        dispatch(actions.openFormula());\n    },\n\n    handleCloseFormulaClick: () => {\n        dispatch(actions.closeFormula());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import { Point } from '../../store/BasicState';\nimport { addHelperStyles } from '.';\nimport { State } from '../../store/longest-palindromic-substring/state';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst getValue = (value: boolean) => value ? 'T' : 'F';\n\nconst isMatch = ({ row, col }: Point, r: number, c: number) => (row === r && col === c);\n\nconst newTableStyles = (table: React.CSSProperties[][]): React.CSSProperties[][] =>\n    table.map(row => row.map(() => ({})));\n\nconst updateTable = (table: (string | boolean)[][], point: Point, value: boolean): (string | boolean)[][] => {\n    const result: (string | boolean)[][] = table.map((row, rowIndex) => {\n        return row.map((cell, colIndex) => isMatch(point, rowIndex, colIndex) ? getValue(value) : cell);\n    });\n    return result;\n};\n\nconst nonCorrect = (comparedTable: (string | boolean)[][], { row, col }: Point, value: boolean): boolean =>\n    (comparedTable[row][col] !== value);\n\nconst isLastCell = (table: (string | boolean)[][], { row, col }: Point): boolean => {\n    return row === 2 && col === table[row].length - 1;\n};\n\nconst getNext = (table: (string | boolean)[][], { row, col }: Point, length: number) => {\n    const isNextLen = row + length === table.length;\n    const nextLength = isNextLen ? length + 1 : length;\n    const nextRow = isNextLen ? 2 : row + 1;\n    const nextCol = isNextLen ? nextRow + nextLength - 1 : col + 1;\n\n    return { row: nextRow, col: nextCol, length: nextLength };\n};\n\nconst update = (value: boolean, state: State): State => {\n\n    const { currentPoint, errors, success } = state;\n\n    const startTime: number = (state.startTime) ? state.startTime : new Date().getTime();\n\n    if (success) {\n        return state;\n    }\n\n    const steps = state.steps + 1;\n    const table = updateTable(state.table, currentPoint, value);\n    const tableStyles = newTableStyles(state.tableStyles);\n\n    if (nonCorrect(state.comparedTable, currentPoint, value)) {\n        tableStyles[currentPoint.row][currentPoint.col] = { backgroundColor: 'red' };\n        addHelperStyles(tableStyles, currentPoint, state.length, table);\n        return { ...state, startTime, steps, errors: errors + 1, table, tableStyles };\n    }\n\n    table[0][0] = state.marksTable[currentPoint.row][currentPoint.col] + '';\n    if (isLastCell(table, currentPoint)) {\n        const finishTime = new Date().getTime();\n        tableStyles[0][0] = helperStyle;\n        return { ...state, startTime, finishTime, steps, table, tableStyles, success: true };\n    }\n\n    const next = getNext(table, currentPoint, state.length);\n    const nextPoint = { row: next.row, col: next.col };\n    table[nextPoint.row][nextPoint.col] = '?';\n    addHelperStyles(tableStyles, nextPoint, next.length, table);\n\n    return { ...state, steps, startTime, table, tableStyles, currentPoint: nextPoint, length: next.length };\n};\n\nexport default update;\n","import update from '../../algorithms/longest-palindromic-substring/update';\nimport { Reducer } from 'redux';\nimport * as Constants from './constants';\nimport { create } from './initialState';\nimport { State } from './state';\nimport { Action } from './actions';\n\nconst reducer: Reducer<State> = (state: State = create(), action: Action) => {\n    switch (action.type) {\n        case Constants.BUTTON_CLICK:\n            return update(Boolean(action.payload), state);\n        case Constants.OPEN_DIALOG_CLICK:\n            return { ...state, dialogOpen: true };\n        case Constants.CLOSE_DIALOG_CLICK:\n            return { ...state, dialogOpen: false };\n        case Constants.OPEN_FORMULA_CLICK:\n            return { ...state, formulaOpen: true };\n        case Constants.CLOSE_FORMULA_CLICK:\n            return { ...state, formulaOpen: false };\n        case Constants.REFRESH_CLICK:\n            return create();\n        case Constants.RECEIVED_RECORD:\n            return { ...state, loading: false, count: action.payload || 0 };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { call, put, take, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport  { GET_RECORD } from './constants';\nimport { fetchSuccess } from './actions';\nimport { basicInfo } from './initialState';\n\nfunction* getRecord() {\n    const response = yield call(axios.get, `/record/algorithm/${basicInfo.id}`);\n    yield put(fetchSuccess(response.data));\n}\n\nexport function* watchRecord() {\n    yield take(GET_RECORD);\n    yield fork(getRecord);\n}\n","import { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { ApplicationState } from '..';\nimport Card from '../../components/Card';\nimport * as actions from './actions';\n\nconst mapStateToProps = ({ longestPalindromicSubsequence }: ApplicationState) => ({\n    ...longestPalindromicSubsequence,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<actions.Action>) => ({\n    handleButtonClick: (data: number | string) => {\n        dispatch(actions.buttonClick(data));\n    },\n\n    handleRefreshClick: () => {\n        dispatch(actions.refresh());\n    },\n\n    handleOpenDialogClick: () => {\n        dispatch(actions.openDialog());\n    },\n\n    handleCloseDialogClick: () => {\n        dispatch(actions.closeDialog());\n    },\n\n    handleOpenFormulaClick: () => {\n        dispatch(actions.openFormula());\n    },\n\n    handleCloseFormulaClick: () => {\n        dispatch(actions.closeFormula());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import { Point } from '../../store/BasicState';\nimport { addHelperStyles } from '.';\nimport { State } from '../../store/longest-palindromic-subsequence/state';\nimport { helperStyle } from '../../pages/withRoot';\n\nconst isMatch = ({ row, col }: Point, r: number, c: number) => (row === r && col === c);\n\nconst newTableStyles = (table: React.CSSProperties[][]): React.CSSProperties[][] =>\n    table.map(row => row.map(() => ({})));\n\nconst updateTable = (table: (string | number)[][], point: Point, value: number): (string | number)[][] =>\n    table.map((row, rowIndex) => {\n        return row.map((cell, colIndex) => isMatch(point, rowIndex, colIndex) ? value : cell);\n    });\n\nconst nonCorrect = (comparedTable: (string | number)[][], { row, col }: Point, value: number): boolean =>\n    (comparedTable[row][col] !== value);\n\nconst isLastCell = (table: (string | number)[][], { row, col }: Point): boolean => {\n    return row === 2 && col === table[row].length - 1;\n};\n\nconst getNext = (table: (string | number)[][], { row, col }: Point, length: number) => {\n    const isNextLen = row + length === table.length;\n    const nextLength = isNextLen ? length + 1 : length;\n    const nextRow = isNextLen ? 2 : row + 1;\n    const nextCol = isNextLen ? nextRow + nextLength - 1 : col + 1;\n    return { row: nextRow, col: nextCol, length: nextLength };\n};\n\nconst update = (value: number, state: State): State => {\n\n    const { currentPoint, errors, success } = state;\n\n    const startTime: number = (state.startTime) ? state.startTime : new Date().getTime();\n\n    if (success) {\n        return state;\n    }\n\n    const steps = state.steps + 1;\n    const table = updateTable(state.table, currentPoint, value);\n    const tableStyles = newTableStyles(state.tableStyles);\n\n    if (nonCorrect(state.comparedTable, currentPoint, value)) {\n        tableStyles[currentPoint.row][currentPoint.col] = { backgroundColor: 'red' };\n        addHelperStyles(tableStyles, currentPoint, state.length, table);\n        return { ...state, startTime, steps, errors: errors + 1, table, tableStyles };\n    }\n\n    if (isLastCell(table, currentPoint)) {\n        const finishTime = new Date().getTime();\n        tableStyles[2][tableStyles[2].length - 1] = helperStyle;\n        return { ...state, startTime, finishTime, steps, table, tableStyles, success: true };\n    }\n\n    const next = getNext(table, currentPoint, state.length);\n    const nextPoint = { row: next.row, col: next.col };\n    table[nextPoint.row][nextPoint.col] = '?';\n    addHelperStyles(tableStyles, nextPoint, next.length, table);\n\n    return { ...state, steps, startTime, table, tableStyles, currentPoint: nextPoint, length: next.length };\n};\n\nexport default update;\n","import update from '../../algorithms/longest-palindromic-subsequence/update';\nimport { Reducer } from 'redux';\nimport * as Constants from './constants';\nimport { create } from './initialState';\nimport { State } from './state';\nimport { Action } from './actions';\n\nconst reducer: Reducer<State> = (state: State = create(), action: Action) => {\n    switch (action.type) {\n        case Constants.BUTTON_CLICK:\n            return update(Number(action.payload), state);\n        case Constants.OPEN_DIALOG_CLICK:\n            return { ...state, dialogOpen: true };\n        case Constants.CLOSE_DIALOG_CLICK:\n            return { ...state, dialogOpen: false };\n        case Constants.OPEN_FORMULA_CLICK:\n            return { ...state, formulaOpen: true };\n        case Constants.CLOSE_FORMULA_CLICK:\n            return { ...state, formulaOpen: false };\n        case Constants.REFRESH_CLICK:\n            return create();\n        case Constants.RECEIVED_RECORD:\n            return { ...state, loading: false, count: action.payload || 0 };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { call, put, take, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport  { GET_RECORD } from './constants';\nimport { fetchSuccess } from './actions';\nimport { basicInfo } from './initialState';\n\nfunction* getRecord() {\n    const response = yield call(axios.get, `/record/algorithm/${basicInfo.id}`);\n    yield put(fetchSuccess(response.data));\n}\n\nexport function* watchRecord() {\n    yield take(GET_RECORD);\n    yield fork(getRecord);\n}\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router'\nimport { History } from 'history'\n\nimport { all } from 'redux-saga/effects';\nimport { State } from './BasicState';\nimport { State as WordBreakState } from './word-break/state';\nimport { State as LongestPalindromicSubstringState } from './longest-palindromic-substring/state';\nimport { State as LongestPalindromicSubsequenceState } from './longest-palindromic-subsequence/state';\nimport { State as PalindromePartitioningState } from './palindrome-partitioning/state';\n\nimport { EditDistance, EditDistanceReducer, EditDistanceWatchRecord } from './edit-distance';\nimport { KnapsackProblem, KnapsackProblemReducer, KnapsackProblemWatchRecord } from './knapsack-problem';\nimport { RodCuttingProblem, RodCuttingProblemReducer, RodCuttingProblemWatchRecord } from './rod-cutting-problem';\nimport { WildcardMatching, WildcardMatchingReducer, WildcardMatchingWatchRecord } from './wildcard-matching';\nimport { RegularExpression, RegularExpressionReducer, RegularExpressionWatchRecord } from './regular-expression';\nimport { IsSubsequence, IsSubsequenceReducer, IsSubsequenceWatchRecord } from './is-subsequence';\nimport { SubsetSumProblem, SubsetSumProblemReducer, SubsetSumProblemWatchRecord } from './subset-sum-problem';\nimport { MinimumPathSum, MinimumPathSumReducer, MinimumPathSumWatchRecord } from './minimum-path-sum';\nimport { WordBreak, WordBreakReducer, WordBreakWatchRecord } from './word-break';\nimport { EggDroppingProblem, EggDroppingProblemReducer, EggDroppingProblemWatchRecord } from './egg-dropping-problem';\nimport { HouseRobber, HouseRobberReducer, HouseRobberWatchRecord } from './house-robber';\nimport {\n    PalindromePartitioning, PalindromePartitioningReducer, PalindromePartitioningWatchRecord\n} from './palindrome-partitioning';\nimport {\n    MaximumSubarrayProblem, MaximumSubarrayProblemReducer, MaximumSubarrayProblemWatchRecord\n} from './maximum-subarray-problem';\nimport {\n    CoinChangeFewestNumber, CoinChangeFewestNumberReducer, CoinChangeFewestNumberWatchRecord\n} from './coin-change-fewest-number';\nimport {\n    CoinChangeHowManyWays, CoinChangeHowManyWaysReducer, CoinChangeHowManyWaysWatchRecord\n} from './coin-change-how-many-ways';\nimport {\n    LongestCommonSubsequence, LongestCommonSubsequenceReducer, LongestCommonSubsequenceWatchRecord\n} from './longest-common-subsequence';\nimport {\n    LongestCommonSubstring, LongestCommonSubstringReducer, LongestCommonSubstringWatchRecord\n} from './longest-common-substring';\nimport {\n    MinimumNumberOfJumpsToReachEnd, MinimumNumberOfJumpsToReachEndReducer, MinimumNumberOfJumpsToReachEndWatchRecord\n} from './minimum-number-of-jumps-to-reach-end';\nimport {\n    LongestIncreasingSubsequence, LongestIncreasingSubsequenceReducer, LongestIncreasingSubsequenceWatchRecord\n} from './longest-increasing-subsequence';\nimport {\n    LongestPalindromicSubstring, LongestPalindromicSubstringReducer, LongestPalindromicSubstringWatchRecord\n} from './longest-palindromic-substring';\nimport {\n    LongestPalindromicSubsequence, LongestPalindromicSubsequenceReducer, LongestPalindromicSubsequenceWatchRecord\n} from './longest-palindromic-subsequence';\nexport interface ApplicationState {\n    editDistance: State;\n    knapsackProblem: State;\n    rodCuttingProblem: State;\n    wildcardMatching: State;\n    regularExpression: State;\n    coinChangeFewestNumber: State;\n    coinChangeHowManyWays: State;\n    isSubsequence: State;\n    longestCommonSubsequence: State;\n    longestCommonSubstring: State;\n    subsetSumProblem: State;\n    minimumNumberOfJumpsToReachEnd: State;\n    longestIncreasingSubsequence: State;\n    minimumPathSum: State;\n    wordBreak: WordBreakState;\n    maximumSubarrayProblem: State;\n    eggDroppingProblem: State;\n    longestPalindromicSubstring: LongestPalindromicSubstringState;\n    longestPalindromicSubsequence: LongestPalindromicSubsequenceState;\n    palindromePartitioning: PalindromePartitioningState;\n    houseRobber: State;\n}\n\nexport const rootReducer = (history: History) => combineReducers({\n    router: connectRouter(history),\n    editDistance: EditDistanceReducer,\n    knapsackProblem: KnapsackProblemReducer,\n    rodCuttingProblem: RodCuttingProblemReducer,\n    wildcardMatching: WildcardMatchingReducer,\n    regularExpression: RegularExpressionReducer,\n    coinChangeFewestNumber: CoinChangeFewestNumberReducer,\n    coinChangeHowManyWays: CoinChangeHowManyWaysReducer,\n    isSubsequence: IsSubsequenceReducer,\n    longestCommonSubsequence: LongestCommonSubsequenceReducer,\n    longestCommonSubstring: LongestCommonSubstringReducer,\n    subsetSumProblem: SubsetSumProblemReducer,\n    minimumNumberOfJumpsToReachEnd: MinimumNumberOfJumpsToReachEndReducer,\n    longestIncreasingSubsequence: LongestIncreasingSubsequenceReducer,\n    minimumPathSum: MinimumPathSumReducer,\n    wordBreak: WordBreakReducer,\n    maximumSubarrayProblem: MaximumSubarrayProblemReducer,\n    eggDroppingProblem: EggDroppingProblemReducer,\n    longestPalindromicSubstring: LongestPalindromicSubstringReducer,\n    longestPalindromicSubsequence: LongestPalindromicSubsequenceReducer,\n    palindromePartitioning: PalindromePartitioningReducer,\n    houseRobber: HouseRobberReducer,\n});\n\nexport const containers = {\n    EditDistance,\n    KnapsackProblem,\n    RodCuttingProblem,\n    WildcardMatching,\n    RegularExpression,\n    CoinChangeFewestNumber,\n    CoinChangeHowManyWays,\n    IsSubsequence,\n    LongestCommonSubsequence,\n    LongestCommonSubstring,\n    SubsetSumProblem,\n    MinimumNumberOfJumpsToReachEnd,\n    LongestIncreasingSubsequence,\n    MinimumPathSum,\n    WordBreak,\n    MaximumSubarrayProblem,\n    EggDroppingProblem,\n    LongestPalindromicSubstring,\n    LongestPalindromicSubsequence,\n    PalindromePartitioning,\n    HouseRobber,\n};\n\nexport function* rootSaga() {\n    yield all([\n        EditDistanceWatchRecord(),\n        KnapsackProblemWatchRecord(),\n        RodCuttingProblemWatchRecord(),\n        WildcardMatchingWatchRecord(),\n        RegularExpressionWatchRecord(),\n        CoinChangeFewestNumberWatchRecord(),\n        CoinChangeHowManyWaysWatchRecord(),\n        IsSubsequenceWatchRecord(),\n        LongestCommonSubsequenceWatchRecord(),\n        LongestCommonSubstringWatchRecord(),\n        SubsetSumProblemWatchRecord(),\n        MinimumNumberOfJumpsToReachEndWatchRecord(),\n        LongestIncreasingSubsequenceWatchRecord(),\n        MinimumPathSumWatchRecord(),\n        WordBreakWatchRecord(),\n        MaximumSubarrayProblemWatchRecord(),\n        EggDroppingProblemWatchRecord(),\n        LongestPalindromicSubstringWatchRecord(),\n        LongestPalindromicSubsequenceWatchRecord(),\n        PalindromePartitioningWatchRecord(),\n        HouseRobberWatchRecord(),\n    ]);\n}\n","import * as React from 'react';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { WithStyles } from '@material-ui/core';\nimport { containers } from '../../store';\n\nconst styles = (theme: Theme) => createStyles({\n    startButton: {\n        textDecoration: 'none',\n    },\n});\n\ninterface Props extends WithStyles<typeof styles> {\n\n}\n\nconst getRandomAlgorithm = () => {\n    const keys: string[] = Object.keys(containers);\n    const index = Math.floor(Math.random() * keys.length);\n    const key = keys[index];\n    // return containers[key];\n    return (containers as any)[key];\n};\n\nconst Welcome = (props: Props) => {\n    const Algorithm = getRandomAlgorithm();\n    return (\n        <React.Fragment>\n            <Algorithm />\n        </React.Fragment>\n    );\n};\n\nexport default withStyles(styles)(Welcome);\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { WithStyles } from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\n\nimport { Route, RouteComponentProps } from 'react-router-dom';\n\nimport Welcome from './welcome';\nimport { containers } from '../../store';\nimport Names from '../../algorithms/Names';\n\nconst styles = (theme: Theme) => createStyles({\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.default,\n        padding: theme.spacing(1),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n});\n\ninterface Props extends WithStyles<typeof styles> {\n    open: boolean;\n}\n\ninterface PathParamsType {\n    name: string;\n}\n\ninterface PathParamsType1 extends RouteComponentProps<PathParamsType> { }\n\nconst Algorithm = ({ match }: PathParamsType1) => {\n    switch (match.params.name) {\n        case Names.Edit_Distance:\n            return (<containers.EditDistance />);\n        case Names.Knapsack_Problem:\n            return (<containers.KnapsackProblem />);\n        case Names.RodCutting_Problem:\n            return (<containers.RodCuttingProblem />);\n        case Names.Wildcard_Matching:\n            return (<containers.WildcardMatching />);\n        case Names.Regular_Expression:\n            return (<containers.RegularExpression />);\n        case Names.Coin_Change_Fewest_Number:\n            return (<containers.CoinChangeFewestNumber />);\n        case Names.Coin_Change_How_Many_Ways:\n            return (<containers.CoinChangeHowManyWays />);\n        case Names.Is_Subsequence:\n            return (<containers.IsSubsequence />);\n        case Names.Longest_Common_Subsequence:\n            return (<containers.LongestCommonSubsequence />);\n        case Names.Longest_Common_Substring:\n            return (<containers.LongestCommonSubstring />);\n        case Names.Subset_Sum_Problem:\n            return (<containers.SubsetSumProblem />);\n        case Names.Minimum_Jumps_To_End:\n            return (<containers.MinimumNumberOfJumpsToReachEnd />);\n        case Names.Longest_Increasing_Subsequence:\n            return (<containers.LongestIncreasingSubsequence />);\n        case Names.Minimum_Path_Sum:\n            return (<containers.MinimumPathSum />);\n        case Names.Word_Break:\n            return (<containers.WordBreak />);\n        case Names.Maximum_Subarray_Problem:\n            return (<containers.MaximumSubarrayProblem />);\n        case Names.EggDropping_Problem:\n            return (<containers.EggDroppingProblem />);\n        case Names.Longest_Palindromic_Substring:\n            return (<containers.LongestPalindromicSubstring />);\n        case Names.Longest_Palindromic_Subsequence:\n            return (<containers.LongestPalindromicSubsequence />);\n        case Names.Palindrome_Partitioning:\n            return (<containers.PalindromePartitioning />);\n        case Names.House_Robber:\n            return (<containers.HouseRobber />);\n        default:\n            return (<div>{match.params.name}</div>);\n    }\n};\n\nconst Algorithms = ({ match }: PathParamsType1) => (\n    <React.Fragment>\n        <Route path={`${match.path}/:name`} component={Algorithm} />\n        <Route exact path={match.path} render={() => (<div>Algorithms</div>)} />\n    </React.Fragment>\n);\n\nconst Content = (props: Props) => {\n    const { classes } = props;\n    return (\n        <main className={classNames(classes.content)} >\n            <div className={classes.drawerHeader} />\n            <Route exact path=\"/\" component={Welcome} />\n            <Route path=\"/algorithms\" component={Algorithms} />\n        </main>\n    );\n};\n\nexport default withStyles(styles)(Content);\n","import * as React from 'react';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { WithStyles } from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\n\nconst styles = (theme: Theme) => createStyles({\n    footer: {\n        // backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6),\n    },\n});\n\ninterface Props extends WithStyles<typeof styles> { }\n\nconst Footer = (props: Props) => {\n    const { classes } = props;\n    return (\n        <footer className={classes.footer}>\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                {/* alchemist */}\n            </Typography>\n            <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                {/* Dynamic programming is cool. */}\n            </Typography>\n        </footer>\n    );\n};\n\nexport default withStyles(styles)(Footer);\n","import * as React from 'react';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport withStyles, { WithStyles } from '@material-ui/core/styles/withStyles';\n\nimport withRoot from './withRoot';\nimport Header from './header';\nimport Sidebar from './sidebar';\nimport Main from './main';\nimport Footer from './footer';\n\nconst styles = (theme: Theme) => createStyles({\n  root: {\n    textAlign: 'center',\n    paddingTop: theme.spacing(20),\n  },\n});\n\ntype State = {\n  open: boolean;\n};\n\nclass Index extends React.Component<WithStyles<typeof styles>, State> {\n  state = {\n    open: false,\n  };\n\n  handleClose = () => {\n    this.setState({\n      open: false,\n    });\n  };\n\n  handleOpen = () => {\n    this.setState({\n      open: true,\n    });\n  };\n\n  render() {\n    const { open } = this.state;\n    return (\n      <React.Fragment>\n        <Header open={open} openDrawer={this.handleOpen} />\n        <Sidebar open={open} closeDrawer={this.handleClose} />\n        <Main open={open} />\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRoot(withStyles(styles)(Index));\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { ConnectedRouter } from 'connected-react-router';\nimport Index from './pages';\nimport configureStore from './store/configureStore';\nimport * as serviceWorker from './serviceWorker';\nimport { UserContext } from './user/userContext';\nimport { getMe } from './user/userUtils';\nimport { User } from './user/user';\nimport { RecordsContext } from './records/recordsContext';\nimport { Record } from './records/record';\nimport { getRecords } from './records/recordsUtils';\nimport { Like } from './likes/like';\nimport { getLikes } from './likes/likesUtils';\nimport { LikesContext } from './likes/likesContext';\n\ndeclare global {\n    interface Window { initialReduxState: any; }\n}\n\nwindow.initialReduxState = window.initialReduxState || {};\n\nconst initialState = window.initialReduxState;\nconst history = createBrowserHistory();\n\nconst store = configureStore(history, initialState);\n\nconst Root = () => {\n\n    const [user, setUser] = React.useState<User | null>(null);\n    React.useEffect(() => { getMe().then(obj => setUser(obj)); }, []);\n\n    const [records, setRecords] = React.useState<Record[]>([]);\n    React.useEffect(() => { getRecords().then(objs => setRecords(objs)); }, []);\n\n    const [likes, setLikes] = React.useState<Like[]>([]);\n    React.useEffect(() => { getLikes().then(objs => setLikes(objs)); }, []);\n\n    return (\n        <Provider store={store}>\n            <UserContext.Provider value={{ user, setUser }}>\n                <RecordsContext.Provider value={{ records, setRecords }}>\n                    <LikesContext.Provider value={{ likes, setLikes }}>\n                        <ConnectedRouter history={history}>\n                            <Index />\n                        </ConnectedRouter>\n                    </LikesContext.Provider>\n                </RecordsContext.Provider>\n            </UserContext.Provider>\n        </Provider>\n    );\n};\n\nReactDOM.render(<Root />, document.querySelector('#root'));\n\nserviceWorker.unregister();\n","import { Store, createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'connected-react-router';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { History } from 'history';\nimport { ApplicationState, rootReducer, rootSaga } from '.';\n\nexport default function configureStore(\n    history: History,\n    initialState: ApplicationState): Store<ApplicationState> {\n\n    const composeEnhancers = composeWithDevTools({});\n    const sagaMiddleware = createSagaMiddleware();\n\n    const store = createStore(\n        rootReducer(history),\n        initialState,\n        composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware))\n    );\n\n    // Hot reloading\n    // if (module.hot) {\n    //     // Enable Webpack hot module replacement for reducers\n    //     module.hot.accept('./reducers', () => {\n    //         store.replaceReducer(rootReducer(history));\n    //     });\n    // }\n    sagaMiddleware.run(rootSaga);\n    return store;\n}\n"],"sourceRoot":""}